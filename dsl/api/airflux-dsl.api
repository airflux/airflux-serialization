public abstract interface annotation class io/github/airflux/dsl/AirfluxMarker : java/lang/annotation/Annotation {
}

public final class io/github/airflux/dsl/LookupKt {
	public static final fun div (Lio/github/airflux/core/lookup/JsLookup;I)Lio/github/airflux/core/lookup/JsLookup;
	public static final fun div (Lio/github/airflux/core/lookup/JsLookup;Ljava/lang/String;)Lio/github/airflux/core/lookup/JsLookup;
}

public final class io/github/airflux/dsl/extension/JsPathOperatorsKt {
	public static final fun div (Lio/github/airflux/core/path/JsPath$Companion;I)Lio/github/airflux/core/path/JsPath;
	public static final fun div (Lio/github/airflux/core/path/JsPath$Companion;Ljava/lang/String;)Lio/github/airflux/core/path/JsPath;
	public static final fun div (Lio/github/airflux/core/path/JsPath;I)Lio/github/airflux/core/path/JsPath;
	public static final fun div (Lio/github/airflux/core/path/JsPath;Ljava/lang/String;)Lio/github/airflux/core/path/JsPath;
}

public final class io/github/airflux/dsl/extension/JsValueOperatorsKt {
	public static final fun deserialization (Lio/github/airflux/core/value/JsValue;Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun div (Lio/github/airflux/core/value/JsValue;I)Lio/github/airflux/core/lookup/JsLookup;
	public static final fun div (Lio/github/airflux/core/value/JsValue;Ljava/lang/String;)Lio/github/airflux/core/lookup/JsLookup;
}

public final class io/github/airflux/dsl/reader/ReaderOperationsKt {
	public static final fun arrayReader (Lio/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/dsl/reader/array/JsArrayReader;
	public static synthetic fun arrayReader$default (Lio/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/github/airflux/dsl/reader/array/JsArrayReader;
	public static final fun reader (Lio/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/dsl/reader/object/JsObjectReader;
	public static synthetic fun reader$default (Lio/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/github/airflux/dsl/reader/object/JsObjectReader;
}

public final class io/github/airflux/dsl/reader/array/JsArrayPrefixItemsSpec {
	public final fun getItems ()Ljava/util/List;
}

public final class io/github/airflux/dsl/reader/array/JsArrayPrefixItemsSpecKt {
	public static final fun prefixItems (Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec;[Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec;)Lio/github/airflux/dsl/reader/array/JsArrayPrefixItemsSpec;
}

public abstract interface class io/github/airflux/dsl/reader/array/JsArrayReader : io/github/airflux/core/reader/JsReader {
}

public final class io/github/airflux/dsl/reader/array/JsArrayReaderBuilder {
	public fun <init> (Lio/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration;)V
	public final fun returns (Lio/github/airflux/dsl/reader/array/JsArrayPrefixItemsSpec;Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec;)Lio/github/airflux/dsl/reader/array/JsArrayReaderBuilder$ResultBuilder;
	public final fun returns (Lio/github/airflux/dsl/reader/array/JsArrayPrefixItemsSpec;Z)Lio/github/airflux/dsl/reader/array/JsArrayReaderBuilder$ResultBuilder;
	public final fun returns (Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec;)Lio/github/airflux/dsl/reader/array/JsArrayReaderBuilder$ResultBuilder;
	public final fun validation (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/github/airflux/dsl/reader/array/JsArrayReaderBuilder$ResultBuilder : kotlin/jvm/functions/Function3 {
}

public final class io/github/airflux/dsl/reader/array/JsArrayReaderBuilder$Validation {
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/array/JsArrayReaderBuilder$Validation$Builder {
	public fun <init> ()V
	public fun <init> (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;)V
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;
	public final fun setAfter (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;)V
	public final fun setBefore (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;)V
}

public abstract interface class io/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec {
	public abstract fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public abstract interface class io/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec$NonNullable : io/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec {
	public abstract fun or (Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec$NonNullable;)Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec$NonNullable;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec$NonNullable;
}

public abstract interface class io/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec$Nullable : io/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec {
	public abstract fun or (Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec$Nullable;)Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec$Nullable;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec$Nullable;
}

public final class io/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpecOperationsKt {
	public static final fun nonNullable (Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec$NonNullable;
	public static final fun nullable (Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/array/item/specification/JsArrayItemSpec$Nullable;
}

public abstract interface class io/github/airflux/dsl/reader/array/validator/JsArrayValidator {
}

public abstract interface class io/github/airflux/dsl/reader/array/validator/JsArrayValidator$After : io/github/airflux/dsl/reader/array/validator/JsArrayValidator {
	public fun and (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidator$After;)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidator$After;
	public fun or (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidator$After;)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidator$After;
	public abstract fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;Ljava/util/List;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public abstract interface class io/github/airflux/dsl/reader/array/validator/JsArrayValidator$Before : io/github/airflux/dsl/reader/array/validator/JsArrayValidator {
	public fun and (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidator$Before;)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidator$Before;
	public fun or (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidator$Before;)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidator$Before;
	public abstract fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public abstract interface class io/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder {
}

public abstract interface class io/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After : io/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder {
	public abstract fun build ()Lio/github/airflux/dsl/reader/array/validator/JsArrayValidator$After;
}

public abstract interface class io/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before : io/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder {
	public abstract fun build ()Lio/github/airflux/dsl/reader/array/validator/JsArrayValidator$Before;
}

public final class io/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilderKt {
	public static final fun and (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;
	public static final fun and (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;
	public static final fun or (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;
	public static final fun or (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/array/validator/std/ArrayValidator {
	public static final field INSTANCE Lio/github/airflux/dsl/reader/array/validator/std/ArrayValidator;
	public final fun isNotEmpty ()Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;
	public final fun isUnique (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$After;
	public final fun maxItems (I)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;
	public final fun minItems (I)Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/array/validator/std/IsNotEmptyArrayValidator : io/github/airflux/dsl/reader/array/validator/JsArrayValidator$Before {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/dsl/reader/array/validator/std/IsNotEmptyArrayValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/dsl/reader/array/validator/std/IsNotEmptyArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/dsl/reader/array/validator/std/IsNotEmptyArrayValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/array/validator/std/IsUniqueArrayValidator : io/github/airflux/dsl/reader/array/validator/JsArrayValidator$After {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;Ljava/util/List;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/dsl/reader/array/validator/std/IsUniqueArrayValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/dsl/reader/array/validator/std/IsUniqueArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final fun build (Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/dsl/reader/array/validator/std/IsUniqueArrayValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/array/validator/std/MaxItemsArrayValidator : io/github/airflux/dsl/reader/array/validator/JsArrayValidator$Before {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/dsl/reader/array/validator/std/MaxItemsArrayValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/dsl/reader/array/validator/std/MaxItemsArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/dsl/reader/array/validator/std/MaxItemsArrayValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/array/validator/std/MinItemsArrayValidator : io/github/airflux/dsl/reader/array/validator/JsArrayValidator$Before {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/dsl/reader/array/validator/std/MinItemsArrayValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/dsl/reader/array/validator/std/MinItemsArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/dsl/reader/array/validator/std/MinItemsArrayValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/context/JsReaderContextBuilder {
	public fun <init> ()V
	public final fun errorBuilders (Lkotlin/jvm/functions/Function1;)V
	public final fun exceptions (Lkotlin/jvm/functions/Function1;)V
	public final fun getFailFast ()Ljava/lang/Boolean;
	public final fun setFailFast (Ljava/lang/Boolean;)V
}

public final class io/github/airflux/dsl/reader/context/JsReaderContextBuilder$ErrorsBuilder {
	public fun <init> ()V
	public final fun register (Lio/github/airflux/core/reader/context/error/ErrorBuilderContextElement;)V
	public final fun unaryPlus (Lio/github/airflux/core/reader/context/error/ErrorBuilderContextElement;)V
}

public final class io/github/airflux/dsl/reader/context/JsReaderContextBuilderKt {
	public static final fun readerContext (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/core/reader/context/JsReaderContext;
}

public final class io/github/airflux/dsl/reader/context/exception/ExceptionsHandler : io/github/airflux/core/reader/context/JsReaderAbstractContextElement {
	public static final field Key Lio/github/airflux/dsl/reader/context/exception/ExceptionsHandler$Key;
	public fun <init> (Lkotlin/jvm/functions/Function3;)V
	public final fun handleException (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Throwable;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/dsl/reader/context/exception/ExceptionsHandler$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/context/exception/ExceptionsHandlerBuilder {
	public fun <init> ()V
	public final fun exception (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function3;)V
}

public abstract interface class io/github/airflux/dsl/reader/object/JsObjectReader : io/github/airflux/core/reader/JsReader {
}

public final class io/github/airflux/dsl/reader/object/JsObjectReaderBuilder {
	public fun <init> (Lio/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration;)V
	public final fun getCheckUniquePropertyPath ()Z
	public final fun property (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Defaultable;)Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Defaultable;
	public final fun property (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Nullable;)Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Nullable;
	public final fun property (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$NullableWithDefault;)Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$NullableWithDefault;
	public final fun property (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Optional;)Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Optional;
	public final fun property (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$OptionalWithDefault;)Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$OptionalWithDefault;
	public final fun property (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Required;)Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Required;
	public final fun returns (Lkotlin/jvm/functions/Function3;)Lio/github/airflux/dsl/reader/object/JsObjectReaderBuilder$ResultBuilder;
	public final fun setCheckUniquePropertyPath (Z)V
	public final fun validation (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/github/airflux/dsl/reader/object/JsObjectReaderBuilder$ResultBuilder : kotlin/jvm/functions/Function3 {
}

public final class io/github/airflux/dsl/reader/object/JsObjectReaderBuilder$Validation {
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/object/JsObjectReaderBuilder$Validation$Builder {
	public fun <init> ()V
	public fun <init> (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;)V
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;
	public final fun setAfter (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;)V
	public final fun setBefore (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;)V
}

public abstract interface class io/github/airflux/dsl/reader/object/ObjectValuesMap {
	public abstract fun get (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Defaultable;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Nullable;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$NullableWithDefault;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Optional;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$OptionalWithDefault;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Required;)Ljava/lang/Object;
	public abstract fun getSize ()I
	public abstract fun isEmpty ()Z
	public abstract fun isNotEmpty ()Z
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Defaultable;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Nullable;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$NullableWithDefault;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Optional;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$OptionalWithDefault;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty$Required;)Ljava/lang/Object;
}

public final class io/github/airflux/dsl/reader/object/property/JsObjectProperties : java/util/Collection, kotlin/jvm/internal/markers/KMappedMarker {
	public fun <init> (Ljava/util/List;)V
	public fun add (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Lio/github/airflux/dsl/reader/object/property/JsObjectProperty;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public abstract class io/github/airflux/dsl/reader/object/property/JsObjectProperty {
	public abstract fun getPath ()Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
}

public final class io/github/airflux/dsl/reader/object/property/JsObjectProperty$Defaultable : io/github/airflux/dsl/reader/object/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/property/JsObjectProperty$Nullable : io/github/airflux/dsl/reader/object/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/property/JsObjectProperty$NullableWithDefault : io/github/airflux/dsl/reader/object/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/property/JsObjectProperty$Optional : io/github/airflux/dsl/reader/object/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/property/JsObjectProperty$OptionalWithDefault : io/github/airflux/dsl/reader/object/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/property/JsObjectProperty$Required : io/github/airflux/dsl/reader/object/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/property/path/JsPaths {
	public static final field Companion Lio/github/airflux/dsl/reader/object/property/path/JsPaths$Companion;
	public fun <init> (Lio/github/airflux/core/path/JsPath;Ljava/util/List;)V
	public fun <init> (Lio/github/airflux/core/path/JsPath;[Lio/github/airflux/core/path/JsPath;)V
	public final fun append (Lio/github/airflux/core/path/JsPath;)Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public final fun append (Lio/github/airflux/dsl/reader/object/property/path/JsPaths;)Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public final fun fold (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun getItems ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/object/property/path/JsPaths$Companion {
}

public final class io/github/airflux/dsl/reader/object/property/path/JsPathsOperatorsKt {
	public static final fun or (Lio/github/airflux/dsl/reader/object/property/path/JsPaths;Lio/github/airflux/core/path/JsPath;)Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public static final fun or (Lio/github/airflux/dsl/reader/object/property/path/JsPaths;Lio/github/airflux/dsl/reader/object/property/path/JsPaths;)Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public static final fun or (Ljava/lang/String;Ljava/lang/String;)Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
}

public abstract interface class io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec {
	public abstract fun getPath ()Lio/github/airflux/dsl/reader/object/property/path/JsPaths;
	public abstract fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public abstract interface class io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Defaultable : io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec {
	public abstract fun or (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Defaultable;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Defaultable;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Defaultable;
}

public abstract interface class io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Nullable : io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec {
	public abstract fun filter (Lio/github/airflux/core/reader/predicate/JsPredicate;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Nullable;
	public abstract fun or (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Nullable;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Nullable;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Nullable;
}

public abstract interface class io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$NullableWithDefault : io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec {
	public abstract fun filter (Lio/github/airflux/core/reader/predicate/JsPredicate;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public abstract fun or (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$NullableWithDefault;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$NullableWithDefault;
}

public abstract interface class io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Optional : io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec {
	public abstract fun filter (Lio/github/airflux/core/reader/predicate/JsPredicate;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Optional;
	public abstract fun or (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Optional;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Optional;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Optional;
}

public abstract interface class io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$OptionalWithDefault : io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec {
	public abstract fun or (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$OptionalWithDefault;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$OptionalWithDefault;
}

public abstract interface class io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Required : io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec {
	public abstract fun or (Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Required;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Required;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Required;
}

public final class io/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpecOperationsKt {
	public static final fun defaultable (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Defaultable;
	public static final fun defaultable (Lio/github/airflux/dsl/reader/object/property/path/JsPaths;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Defaultable;
	public static final fun defaultable (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Defaultable;
	public static final fun nullable (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun nullable (Lio/github/airflux/dsl/reader/object/property/path/JsPaths;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun nullable (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun nullableWithDefault (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun nullableWithDefault (Lio/github/airflux/dsl/reader/object/property/path/JsPaths;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun nullableWithDefault (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun optional (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Optional;
	public static final fun optional (Lio/github/airflux/dsl/reader/object/property/path/JsPaths;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Optional;
	public static final fun optional (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Optional;
	public static final fun optionalWithDefault (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public static final fun optionalWithDefault (Lio/github/airflux/dsl/reader/object/property/path/JsPaths;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public static final fun optionalWithDefault (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public static final fun required (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Required;
	public static final fun required (Lio/github/airflux/dsl/reader/object/property/path/JsPaths;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Required;
	public static final fun required (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/property/specification/JsObjectPropertySpec$Required;
}

public abstract interface class io/github/airflux/dsl/reader/object/validator/JsObjectValidator {
}

public abstract interface class io/github/airflux/dsl/reader/object/validator/JsObjectValidator$After : io/github/airflux/dsl/reader/object/validator/JsObjectValidator {
	public fun and (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidator$After;)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidator$After;
	public fun or (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidator$After;)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidator$After;
	public abstract fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/property/JsObjectProperties;Lio/github/airflux/dsl/reader/object/ObjectValuesMap;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public abstract interface class io/github/airflux/dsl/reader/object/validator/JsObjectValidator$Before : io/github/airflux/dsl/reader/object/validator/JsObjectValidator {
	public fun and (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidator$Before;)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidator$Before;
	public fun or (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidator$Before;)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidator$Before;
	public abstract fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/property/JsObjectProperties;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public abstract interface class io/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder {
}

public abstract interface class io/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After : io/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder {
	public abstract fun build (Lio/github/airflux/dsl/reader/object/property/JsObjectProperties;)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidator$After;
}

public abstract interface class io/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before : io/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder {
	public abstract fun build (Lio/github/airflux/dsl/reader/object/property/JsObjectProperties;)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidator$Before;
}

public final class io/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilderKt {
	public static final fun and (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;
	public static final fun and (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;
	public static final fun or (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;
	public static final fun or (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/object/validator/std/AdditionalPropertiesValidator : io/github/airflux/dsl/reader/object/validator/JsObjectValidator$Before {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/property/JsObjectProperties;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/dsl/reader/object/validator/std/AdditionalPropertiesValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/dsl/reader/object/validator/std/AdditionalPropertiesValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/dsl/reader/object/validator/std/AdditionalPropertiesValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/object/validator/std/IsNotEmptyValidator : io/github/airflux/dsl/reader/object/validator/JsObjectValidator$After {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/property/JsObjectProperties;Lio/github/airflux/dsl/reader/object/ObjectValuesMap;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/dsl/reader/object/validator/std/IsNotEmptyValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/dsl/reader/object/validator/std/IsNotEmptyValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/dsl/reader/object/validator/std/IsNotEmptyValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/object/validator/std/MaxPropertiesValidator : io/github/airflux/dsl/reader/object/validator/JsObjectValidator$After {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/property/JsObjectProperties;Lio/github/airflux/dsl/reader/object/ObjectValuesMap;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/dsl/reader/object/validator/std/MaxPropertiesValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/dsl/reader/object/validator/std/MaxPropertiesValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/dsl/reader/object/validator/std/MaxPropertiesValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/object/validator/std/MinPropertiesValidator : io/github/airflux/dsl/reader/object/validator/JsObjectValidator$After {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/property/JsObjectProperties;Lio/github/airflux/dsl/reader/object/ObjectValuesMap;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/dsl/reader/object/validator/std/MinPropertiesValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/dsl/reader/object/validator/std/MinPropertiesValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/dsl/reader/object/validator/std/MinPropertiesValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/object/validator/std/ObjectValidator {
	public static final field INSTANCE Lio/github/airflux/dsl/reader/object/validator/std/ObjectValidator;
	public final fun getAdditionalProperties ()Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;
	public final fun isNotEmpty ()Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;
	public final fun maxProperties (I)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;
	public final fun minProperties (I)Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;
}

public final class io/github/airflux/dsl/reader/result/LocationKt {
	public static final fun div (Lio/github/airflux/core/reader/result/JsLocation;I)Lio/github/airflux/core/reader/result/JsLocation;
	public static final fun div (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/path/PathElement;)Lio/github/airflux/core/reader/result/JsLocation;
	public static final fun div (Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/String;)Lio/github/airflux/core/reader/result/JsLocation;
}

public final class io/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration {
	public static final field Companion Lio/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration$Companion;
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration$Validation;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getValidation ()Lio/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration$Validation;
}

public final class io/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration$Builder {
	public fun <init> ()V
	public final fun validation (Lkotlin/jvm/functions/Function1;)V
}

public final class io/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration$Companion {
	public final fun getDEFAULT ()Lio/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration;
}

public final class io/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration$Validation {
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBefore ()Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration$Validation$Builder {
	public fun <init> ()V
	public fun <init> (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;)V
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBefore ()Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;
	public final fun setBefore (Lio/github/airflux/dsl/reader/array/validator/JsArrayValidatorBuilder$Before;)V
}

public final class io/github/airflux/dsl/reader/scope/JsArrayReaderConfigurationKt {
	public static final fun arrayReaderConfiguration (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/dsl/reader/scope/JsArrayReaderConfiguration;
}

public final class io/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration {
	public static final field Companion Lio/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration$Companion;
	public synthetic fun <init> (ZLio/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration$Validation;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCheckUniquePropertyPath ()Z
	public final fun getValidation ()Lio/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration$Validation;
}

public final class io/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration$Builder {
	public fun <init> ()V
	public final fun getCheckUniquePropertyPath ()Z
	public final fun setCheckUniquePropertyPath (Z)V
	public final fun validation (Lkotlin/jvm/functions/Function1;)V
}

public final class io/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration$Companion {
	public final fun getDEFAULT ()Lio/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration;
}

public final class io/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration$Validation {
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration$Validation$Builder {
	public fun <init> ()V
	public fun <init> (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;)V
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;
	public final fun setAfter (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$After;)V
	public final fun setBefore (Lio/github/airflux/dsl/reader/object/validator/JsObjectValidatorBuilder$Before;)V
}

public final class io/github/airflux/dsl/reader/scope/JsObjectReaderConfigurationKt {
	public static final fun objectReaderConfiguration (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/dsl/reader/scope/JsObjectReaderConfiguration;
}

public final class io/github/airflux/dsl/writer/object/ObjectWriter {
	public fun <init> (Lio/github/airflux/dsl/writer/object/ObjectWriterConfiguration;)V
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/core/writer/JsObjectWriter;
}

public final class io/github/airflux/dsl/writer/object/ObjectWriter$Builder {
	public final fun nullableProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsArrayWriter;)Lio/github/airflux/dsl/writer/object/property/JsWriterProperty$Nullable$Array;
	public final fun nullableProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsObjectWriter;)Lio/github/airflux/dsl/writer/object/property/JsWriterProperty$Nullable$Object;
	public final fun nullableProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsWriter;)Lio/github/airflux/dsl/writer/object/property/JsWriterProperty$Nullable$Simple;
	public final fun optionalProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsArrayWriter;)Lio/github/airflux/dsl/writer/object/property/JsWriterProperty$Optional$Array;
	public final fun optionalProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsObjectWriter;)Lio/github/airflux/dsl/writer/object/property/JsWriterProperty$Optional$Object;
	public final fun optionalProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsWriter;)Lio/github/airflux/dsl/writer/object/property/JsWriterProperty$Optional$Simple;
	public final fun requiredProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsWriter;)V
}

public final class io/github/airflux/dsl/writer/object/ObjectWriterConfiguration {
	public static final field Companion Lio/github/airflux/dsl/writer/object/ObjectWriterConfiguration$Companion;
	public synthetic fun <init> (ZZZZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getSkipPropertyIfArrayIsEmpty ()Z
	public final fun getSkipPropertyIfObjectIsEmpty ()Z
	public final fun getWriteNullIfArrayIsEmpty ()Z
	public final fun getWriteNullIfObjectIsEmpty ()Z
}

public final class io/github/airflux/dsl/writer/object/ObjectWriterConfiguration$Builder {
	public final fun getSkipPropertyIfArrayIsEmpty ()Z
	public final fun getSkipPropertyIfObjectIsEmpty ()Z
	public final fun getWriteNullIfArrayIsEmpty ()Z
	public final fun getWriteNullIfObjectIsEmpty ()Z
	public final fun setSkipPropertyIfArrayIsEmpty (Z)V
	public final fun setSkipPropertyIfObjectIsEmpty (Z)V
	public final fun setWriteNullIfArrayIsEmpty (Z)V
	public final fun setWriteNullIfObjectIsEmpty (Z)V
}

public final class io/github/airflux/dsl/writer/object/ObjectWriterConfiguration$Companion {
	public final fun build (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/dsl/writer/object/ObjectWriterConfiguration;
	public final fun getDefault ()Lio/github/airflux/dsl/writer/object/ObjectWriterConfiguration;
}

public final class io/github/airflux/dsl/writer/object/ObjectWriterKt {
	public static final fun serialization (Ljava/lang/Object;Lio/github/airflux/core/writer/JsWriter;)Lio/github/airflux/core/value/JsValue;
}

public abstract interface class io/github/airflux/dsl/writer/object/property/JsWriterProperty {
	public abstract fun getName ()Ljava/lang/String;
}

public abstract interface class io/github/airflux/dsl/writer/object/property/JsWriterProperty$Nullable : io/github/airflux/dsl/writer/object/property/JsWriterProperty {
}

public abstract interface class io/github/airflux/dsl/writer/object/property/JsWriterProperty$Nullable$Array : io/github/airflux/dsl/writer/object/property/JsWriterProperty$Nullable {
	public abstract fun writeNullIfEmpty ()V
}

public abstract interface class io/github/airflux/dsl/writer/object/property/JsWriterProperty$Nullable$Object : io/github/airflux/dsl/writer/object/property/JsWriterProperty$Nullable {
	public abstract fun writeNullIfEmpty ()V
}

public abstract interface class io/github/airflux/dsl/writer/object/property/JsWriterProperty$Nullable$Simple : io/github/airflux/dsl/writer/object/property/JsWriterProperty$Nullable {
}

public abstract interface class io/github/airflux/dsl/writer/object/property/JsWriterProperty$Optional : io/github/airflux/dsl/writer/object/property/JsWriterProperty {
}

public abstract interface class io/github/airflux/dsl/writer/object/property/JsWriterProperty$Optional$Array : io/github/airflux/dsl/writer/object/property/JsWriterProperty$Optional {
	public abstract fun skipIfEmpty ()V
}

public abstract interface class io/github/airflux/dsl/writer/object/property/JsWriterProperty$Optional$Object : io/github/airflux/dsl/writer/object/property/JsWriterProperty$Optional {
	public abstract fun skipIfEmpty ()V
}

public abstract interface class io/github/airflux/dsl/writer/object/property/JsWriterProperty$Optional$Simple : io/github/airflux/dsl/writer/object/property/JsWriterProperty$Optional {
}

public abstract interface class io/github/airflux/dsl/writer/object/property/JsWriterProperty$Required : io/github/airflux/dsl/writer/object/property/JsWriterProperty {
}

