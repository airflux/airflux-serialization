public final class io/github/airflux/core/common/IdentityKt {
	public static final fun identity (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class io/github/airflux/core/lookup/JsLookup {
	public static final field Companion Lio/github/airflux/core/lookup/JsLookup$Companion;
	public final fun apply (I)Lio/github/airflux/core/lookup/JsLookup;
	public abstract fun apply (Lio/github/airflux/core/path/PathElement$Idx;)Lio/github/airflux/core/lookup/JsLookup;
	public abstract fun apply (Lio/github/airflux/core/path/PathElement$Key;)Lio/github/airflux/core/lookup/JsLookup;
	public final fun apply (Ljava/lang/String;)Lio/github/airflux/core/lookup/JsLookup;
	public abstract fun getLocation ()Lio/github/airflux/core/reader/result/JsLocation;
}

public final class io/github/airflux/core/lookup/JsLookup$Companion {
	public final fun apply (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/lookup/JsLookup;
	public final fun apply (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/path/PathElement$Idx;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/lookup/JsLookup;
	public final fun apply (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/path/PathElement$Key;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/lookup/JsLookup;
}

public final class io/github/airflux/core/lookup/JsLookup$Defined : io/github/airflux/core/lookup/JsLookup {
	public fun <init> (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;)V
	public fun apply (Lio/github/airflux/core/path/PathElement$Idx;)Lio/github/airflux/core/lookup/JsLookup;
	public fun apply (Lio/github/airflux/core/path/PathElement$Key;)Lio/github/airflux/core/lookup/JsLookup;
	public final fun component1 ()Lio/github/airflux/core/reader/result/JsLocation;
	public final fun component2 ()Lio/github/airflux/core/value/JsValue;
	public final fun copy (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/lookup/JsLookup$Defined;
	public static synthetic fun copy$default (Lio/github/airflux/core/lookup/JsLookup$Defined;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;ILjava/lang/Object;)Lio/github/airflux/core/lookup/JsLookup$Defined;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLocation ()Lio/github/airflux/core/reader/result/JsLocation;
	public final fun getValue ()Lio/github/airflux/core/value/JsValue;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/airflux/core/lookup/JsLookup$Undefined : io/github/airflux/core/lookup/JsLookup {
	public fun apply (Lio/github/airflux/core/path/PathElement$Idx;)Lio/github/airflux/core/lookup/JsLookup;
	public fun apply (Lio/github/airflux/core/path/PathElement$Key;)Lio/github/airflux/core/lookup/JsLookup;
}

public final class io/github/airflux/core/lookup/JsLookup$Undefined$InvalidType : io/github/airflux/core/lookup/JsLookup$Undefined {
	public fun <init> (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue$Type;Lio/github/airflux/core/value/JsValue$Type;)V
	public final fun component1 ()Lio/github/airflux/core/reader/result/JsLocation;
	public final fun component2 ()Lio/github/airflux/core/value/JsValue$Type;
	public final fun component3 ()Lio/github/airflux/core/value/JsValue$Type;
	public final fun copy (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue$Type;Lio/github/airflux/core/value/JsValue$Type;)Lio/github/airflux/core/lookup/JsLookup$Undefined$InvalidType;
	public static synthetic fun copy$default (Lio/github/airflux/core/lookup/JsLookup$Undefined$InvalidType;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue$Type;Lio/github/airflux/core/value/JsValue$Type;ILjava/lang/Object;)Lio/github/airflux/core/lookup/JsLookup$Undefined$InvalidType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActual ()Lio/github/airflux/core/value/JsValue$Type;
	public final fun getExpected ()Lio/github/airflux/core/value/JsValue$Type;
	public fun getLocation ()Lio/github/airflux/core/reader/result/JsLocation;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/lookup/JsLookup$Undefined$PathMissing : io/github/airflux/core/lookup/JsLookup$Undefined {
	public fun <init> (Lio/github/airflux/core/reader/result/JsLocation;)V
	public final fun component1 ()Lio/github/airflux/core/reader/result/JsLocation;
	public final fun copy (Lio/github/airflux/core/reader/result/JsLocation;)Lio/github/airflux/core/lookup/JsLookup$Undefined$PathMissing;
	public static synthetic fun copy$default (Lio/github/airflux/core/lookup/JsLookup$Undefined$PathMissing;Lio/github/airflux/core/reader/result/JsLocation;ILjava/lang/Object;)Lio/github/airflux/core/lookup/JsLookup$Undefined$PathMissing;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLocation ()Lio/github/airflux/core/reader/result/JsLocation;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/path/JsPath {
	public static final field Companion Lio/github/airflux/core/path/JsPath$Companion;
	public fun <init> (I)V
	public fun <init> (Lio/github/airflux/core/path/PathElement;)V
	public fun <init> (Ljava/lang/String;)V
	public final fun append (I)Lio/github/airflux/core/path/JsPath;
	public final fun append (Lio/github/airflux/core/path/PathElement;)Lio/github/airflux/core/path/JsPath;
	public final fun append (Ljava/lang/String;)Lio/github/airflux/core/path/JsPath;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getElements ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/path/JsPath$Companion {
}

public final class io/github/airflux/core/path/JsPaths {
	public static final field Companion Lio/github/airflux/core/path/JsPaths$Companion;
	public fun <init> (Lio/github/airflux/core/path/JsPath;Ljava/util/List;)V
	public fun <init> (Lio/github/airflux/core/path/JsPath;[Lio/github/airflux/core/path/JsPath;)V
	public final fun append (Lio/github/airflux/core/path/JsPath;)Lio/github/airflux/core/path/JsPaths;
	public final fun append (Lio/github/airflux/core/path/JsPaths;)Lio/github/airflux/core/path/JsPaths;
	public final fun fold (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun getItems ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/path/JsPaths$Companion {
}

public abstract class io/github/airflux/core/path/PathElement {
}

public final class io/github/airflux/core/path/PathElement$Idx : io/github/airflux/core/path/PathElement {
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lio/github/airflux/core/path/PathElement$Idx;
	public static synthetic fun copy$default (Lio/github/airflux/core/path/PathElement$Idx;IILjava/lang/Object;)Lio/github/airflux/core/path/PathElement$Idx;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/path/PathElement$Key : io/github/airflux/core/path/PathElement {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/github/airflux/core/path/PathElement$Key;
	public static synthetic fun copy$default (Lio/github/airflux/core/path/PathElement$Key;Ljava/lang/String;ILjava/lang/Object;)Lio/github/airflux/core/path/PathElement$Key;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/airflux/core/reader/JsArrayReader : io/github/airflux/core/reader/JsReader {
}

public abstract interface class io/github/airflux/core/reader/JsObjectReader : io/github/airflux/core/reader/JsReader {
}

public abstract interface class io/github/airflux/core/reader/JsReader {
	public fun map (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/core/reader/JsReader;
	public abstract fun read (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/core/reader/JsReaderKt {
	public static final fun or (Lio/github/airflux/core/reader/JsReader;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/core/reader/JsReaderOpsKt {
	public static final fun filter (Lio/github/airflux/core/reader/JsReader;Lio/github/airflux/core/reader/predicate/JsPredicate;)Lio/github/airflux/core/reader/JsReader;
	public static final fun validation (Lio/github/airflux/core/reader/JsReader;Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/core/reader/array/ArrayFieldReaderKt {
	public static final fun readArray (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun readArray (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;Ljava/util/List;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun readArray (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;Ljava/util/List;Z)Lio/github/airflux/core/reader/result/JsResult;
}

public abstract class io/github/airflux/core/reader/context/JsReaderAbstractContextElement : io/github/airflux/core/reader/context/JsReaderContext$Element {
	public fun <init> (Lio/github/airflux/core/reader/context/JsReaderContext$Key;)V
	public fun getKey ()Lio/github/airflux/core/reader/context/JsReaderContext$Key;
}

public final class io/github/airflux/core/reader/context/JsReaderContext {
	public static final field Companion Lio/github/airflux/core/reader/context/JsReaderContext$Companion;
	public synthetic fun <init> (Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun contains (Lio/github/airflux/core/reader/context/JsReaderContext$Key;)Z
	public final fun getOrNull (Lio/github/airflux/core/reader/context/JsReaderContext$Key;)Lio/github/airflux/core/reader/context/JsReaderContext$Element;
	public final fun getValue (Lio/github/airflux/core/reader/context/JsReaderContext$Key;)Lio/github/airflux/core/reader/context/JsReaderContext$Element;
	public final fun isEmpty ()Z
	public final fun isNotEmpty ()Z
	public final fun plus (Lio/github/airflux/core/reader/context/JsReaderContext$Element;)Lio/github/airflux/core/reader/context/JsReaderContext;
	public final fun plus (Ljava/lang/Iterable;)Lio/github/airflux/core/reader/context/JsReaderContext;
}

public final class io/github/airflux/core/reader/context/JsReaderContext$Companion {
	public final fun invoke ()Lio/github/airflux/core/reader/context/JsReaderContext;
	public final fun invoke (Lio/github/airflux/core/reader/context/JsReaderContext$Element;)Lio/github/airflux/core/reader/context/JsReaderContext;
	public final fun invoke (Ljava/lang/Iterable;)Lio/github/airflux/core/reader/context/JsReaderContext;
}

public abstract interface class io/github/airflux/core/reader/context/JsReaderContext$Element {
	public abstract fun getKey ()Lio/github/airflux/core/reader/context/JsReaderContext$Key;
	public fun plus (Lio/github/airflux/core/reader/context/JsReaderContext$Element;)Ljava/util/List;
}

public abstract interface class io/github/airflux/core/reader/context/JsReaderContext$Key {
	public abstract fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/core/reader/context/JsReaderContextOpsKt {
	public static final fun contextKeyName (Ljava/lang/Class;)Ljava/lang/String;
}

public abstract class io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement : io/github/airflux/core/reader/context/error/ErrorBuilderContextElement {
	public fun <init> (Lio/github/airflux/core/reader/context/JsReaderContext$Key;)V
	public fun getKey ()Lio/github/airflux/core/reader/context/JsReaderContext$Key;
}

public abstract interface class io/github/airflux/core/reader/context/error/ErrorBuilderContextElement : io/github/airflux/core/reader/context/JsReaderContext$Element {
}

public final class io/github/airflux/core/reader/context/option/FailFast : io/github/airflux/core/reader/context/JsReaderAbstractContextElement {
	public static final field Key Lio/github/airflux/core/reader/context/option/FailFast$Key;
	public fun <init> (Z)V
	public final fun isTrue ()Z
}

public final class io/github/airflux/core/reader/context/option/FailFast$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/core/reader/context/option/FailFastKt {
	public static final fun getFailFast (Lio/github/airflux/core/reader/context/JsReaderContext;)Z
}

public final class io/github/airflux/core/reader/error/AdditionalItemsErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/core/reader/error/AdditionalItemsErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/core/reader/error/AdditionalItemsErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/core/reader/error/InvalidTypeErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/core/reader/error/InvalidTypeErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Lio/github/airflux/core/value/JsValue$Type;Lio/github/airflux/core/value/JsValue$Type;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/core/reader/error/InvalidTypeErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/core/reader/error/PathMissingErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/core/reader/error/PathMissingErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/core/reader/error/PathMissingErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/core/reader/error/ValueCastErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/core/reader/error/ValueCastErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/String;Lkotlin/reflect/KClass;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/core/reader/error/ValueCastErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/core/reader/object/NullableFieldReaderKt {
	public static final fun readNullable (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/lookup/JsLookup;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/core/reader/object/NullableWithDefaultFieldReaderKt {
	public static final fun readNullable (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/lookup/JsLookup;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/core/reader/object/OptionalFieldReaderKt {
	public static final fun readOptional (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/lookup/JsLookup;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/core/reader/object/OptionalWithDefaultFieldReaderKt {
	public static final fun readOptional (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/lookup/JsLookup;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/core/reader/object/RequiredFieldReaderKt {
	public static final fun readRequired (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/lookup/JsLookup;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/core/reader/object/WithDefaultFieldReaderKt {
	public static final fun readWithDefault (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/lookup/JsLookup;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/core/reader/result/JsResult;
}

public abstract interface class io/github/airflux/core/reader/predicate/JsPredicate {
	public fun and (Lio/github/airflux/core/reader/predicate/JsPredicate;)Lio/github/airflux/core/reader/predicate/JsPredicate;
	public fun or (Lio/github/airflux/core/reader/predicate/JsPredicate;)Lio/github/airflux/core/reader/predicate/JsPredicate;
	public abstract fun test (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Z
}

public abstract interface class io/github/airflux/core/reader/result/JsError {
}

public final class io/github/airflux/core/reader/result/JsErrors {
	public static final field Companion Lio/github/airflux/core/reader/result/JsErrors$Companion;
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getItems ()Ljava/util/List;
	public fun hashCode ()I
	public final fun plus (Lio/github/airflux/core/reader/result/JsErrors;)Lio/github/airflux/core/reader/result/JsErrors;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/reader/result/JsErrors$Companion {
	public final fun of (Lio/github/airflux/core/reader/result/JsError;[Lio/github/airflux/core/reader/result/JsError;)Lio/github/airflux/core/reader/result/JsErrors;
	public final fun of (Ljava/util/List;)Lio/github/airflux/core/reader/result/JsErrors;
}

public abstract class io/github/airflux/core/reader/result/JsLocation {
	public static final field Companion Lio/github/airflux/core/reader/result/JsLocation$Companion;
	public final fun append (I)Lio/github/airflux/core/reader/result/JsLocation;
	public final fun append (Lio/github/airflux/core/path/PathElement;)Lio/github/airflux/core/reader/result/JsLocation;
	public final fun append (Ljava/lang/String;)Lio/github/airflux/core/reader/result/JsLocation;
	public abstract fun isEmpty ()Z
}

public final class io/github/airflux/core/reader/result/JsLocation$Companion {
	public final fun foldLeft (Ljava/lang/Object;Lio/github/airflux/core/reader/result/JsLocation;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun foldRight (Ljava/lang/Object;Lio/github/airflux/core/reader/result/JsLocation;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun getEmpty ()Lio/github/airflux/core/reader/result/JsLocation;
}

public abstract class io/github/airflux/core/reader/result/JsResult {
	public static final field Companion Lio/github/airflux/core/reader/result/JsResult$Companion;
	public final fun flatMap (Lkotlin/jvm/functions/Function2;)Lio/github/airflux/core/reader/result/JsResult;
	public final fun map (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/core/reader/result/JsResult$Companion {
}

public final class io/github/airflux/core/reader/result/JsResult$Failure : io/github/airflux/core/reader/result/JsResult {
	public static final field Companion Lio/github/airflux/core/reader/result/JsResult$Failure$Companion;
	public fun <init> (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/reader/result/JsError;)V
	public fun <init> (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/reader/result/JsErrors;)V
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCauses ()Ljava/util/List;
	public fun hashCode ()I
	public final fun plus (Lio/github/airflux/core/reader/result/JsResult$Failure;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/reader/result/JsResult$Failure$Cause {
	public fun <init> (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/reader/result/JsError;)V
	public fun <init> (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/reader/result/JsErrors;)V
	public final fun component1 ()Lio/github/airflux/core/reader/result/JsLocation;
	public final fun component2 ()Lio/github/airflux/core/reader/result/JsErrors;
	public final fun copy (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/reader/result/JsErrors;)Lio/github/airflux/core/reader/result/JsResult$Failure$Cause;
	public static synthetic fun copy$default (Lio/github/airflux/core/reader/result/JsResult$Failure$Cause;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/reader/result/JsErrors;ILjava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure$Cause;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getErrors ()Lio/github/airflux/core/reader/result/JsErrors;
	public final fun getLocation ()Lio/github/airflux/core/reader/result/JsLocation;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/reader/result/JsResult$Failure$Companion {
	public final fun merge (Ljava/util/Collection;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/core/reader/result/JsResult$Success : io/github/airflux/core/reader/result/JsResult {
	public fun <init> (Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)V
	public final fun component1 ()Lio/github/airflux/core/reader/result/JsLocation;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Success;
	public static synthetic fun copy$default (Lio/github/airflux/core/reader/result/JsResult$Success;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;ILjava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Success;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLocation ()Lio/github/airflux/core/reader/result/JsLocation;
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/reader/result/JsResultKt {
	public static final fun failure (Lio/github/airflux/core/reader/result/JsError;Lio/github/airflux/core/reader/result/JsLocation;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun fold (Lio/github/airflux/core/reader/result/JsResult;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun getOrElse (Lio/github/airflux/core/reader/result/JsResult;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static final fun orElse (Lio/github/airflux/core/reader/result/JsResult;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun recovery (Lio/github/airflux/core/reader/result/JsResult;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun success (Ljava/lang/Object;Lio/github/airflux/core/reader/result/JsLocation;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/core/reader/result/JsResultOpsKt {
	public static final fun filter (Lio/github/airflux/core/reader/result/JsResult;Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/predicate/JsPredicate;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun validation (Lio/github/airflux/core/reader/result/JsResult;Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/core/reader/result/JsResult;
}

public abstract interface class io/github/airflux/core/reader/validator/JsValidator {
	public abstract fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/core/reader/validator/JsValidatorKt {
	public static final fun and (Lio/github/airflux/core/reader/validator/JsValidator;Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/core/reader/validator/JsValidator;
	public static final fun or (Lio/github/airflux/core/reader/validator/JsValidator;Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/core/reader/validator/JsValidator;
}

public final class io/github/airflux/core/value/JsArray : io/github/airflux/core/value/JsValue, java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/core/value/JsArray$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (I)Lio/github/airflux/core/value/JsValue;
	public final fun get (Lio/github/airflux/core/path/PathElement$Idx;)Lio/github/airflux/core/value/JsValue;
	public final fun getSize ()I
	public fun getType ()Lio/github/airflux/core/value/JsValue$Type;
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/value/JsArray$Companion {
	public final fun invoke ([Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/value/JsArray;
}

public abstract class io/github/airflux/core/value/JsBoolean : io/github/airflux/core/value/JsValue {
	public static final field Companion Lio/github/airflux/core/value/JsBoolean$Companion;
	public synthetic fun <init> (ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getGet ()Z
	public fun getType ()Lio/github/airflux/core/value/JsValue$Type;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/value/JsBoolean$Companion {
	public final fun valueOf (Z)Lio/github/airflux/core/value/JsBoolean;
}

public final class io/github/airflux/core/value/JsBoolean$False : io/github/airflux/core/value/JsBoolean {
	public static final field INSTANCE Lio/github/airflux/core/value/JsBoolean$False;
}

public final class io/github/airflux/core/value/JsBoolean$True : io/github/airflux/core/value/JsBoolean {
	public static final field INSTANCE Lio/github/airflux/core/value/JsBoolean$True;
}

public final class io/github/airflux/core/value/JsNull : io/github/airflux/core/value/JsValue {
	public static final field INSTANCE Lio/github/airflux/core/value/JsNull;
	public fun getType ()Lio/github/airflux/core/value/JsValue$Type;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/value/JsNumber : io/github/airflux/core/value/JsValue {
	public static final field Companion Lio/github/airflux/core/value/JsNumber$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun getType ()Lio/github/airflux/core/value/JsValue$Type;
	public fun hashCode ()I
	public final fun isInteger ()Z
	public final fun isReal ()Z
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/value/JsNumber$Companion {
	public final fun valueOf (B)Lio/github/airflux/core/value/JsNumber;
	public final fun valueOf (I)Lio/github/airflux/core/value/JsNumber;
	public final fun valueOf (J)Lio/github/airflux/core/value/JsNumber;
	public final fun valueOf (Ljava/lang/String;)Lio/github/airflux/core/value/JsNumber;
	public final fun valueOf (S)Lio/github/airflux/core/value/JsNumber;
}

public final class io/github/airflux/core/value/JsObject : io/github/airflux/core/value/JsValue, java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/core/value/JsObject$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lio/github/airflux/core/path/PathElement$Key;)Lio/github/airflux/core/value/JsValue;
	public final fun get (Ljava/lang/String;)Lio/github/airflux/core/value/JsValue;
	public final fun getCount ()I
	public fun getType ()Lio/github/airflux/core/value/JsValue$Type;
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/core/value/JsObject$Companion {
	public final fun invoke ([Lkotlin/Pair;)Lio/github/airflux/core/value/JsObject;
}

public final class io/github/airflux/core/value/JsString : io/github/airflux/core/value/JsValue {
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun getType ()Lio/github/airflux/core/value/JsValue$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/airflux/core/value/JsValue {
	public abstract fun getType ()Lio/github/airflux/core/value/JsValue$Type;
}

public final class io/github/airflux/core/value/JsValue$Type : java/lang/Enum {
	public static final field ARRAY Lio/github/airflux/core/value/JsValue$Type;
	public static final field BOOLEAN Lio/github/airflux/core/value/JsValue$Type;
	public static final field NULL Lio/github/airflux/core/value/JsValue$Type;
	public static final field NUMBER Lio/github/airflux/core/value/JsValue$Type;
	public static final field OBJECT Lio/github/airflux/core/value/JsValue$Type;
	public static final field STRING Lio/github/airflux/core/value/JsValue$Type;
	public static fun valueOf (Ljava/lang/String;)Lio/github/airflux/core/value/JsValue$Type;
	public static fun values ()[Lio/github/airflux/core/value/JsValue$Type;
}

public final class io/github/airflux/core/value/JsValueOpsKt {
	public static final fun readAsArray (Lio/github/airflux/core/value/JsValue;Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun readAsBoolean (Lio/github/airflux/core/value/JsValue;Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun readAsNumber (Lio/github/airflux/core/value/JsValue;Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun readAsObject (Lio/github/airflux/core/value/JsValue;Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun readAsString (Lio/github/airflux/core/value/JsValue;Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;)Lio/github/airflux/core/reader/result/JsResult;
}

public abstract interface class io/github/airflux/core/writer/JsArrayWriter : io/github/airflux/core/writer/JsWriter {
}

public abstract interface class io/github/airflux/core/writer/JsObjectWriter : io/github/airflux/core/writer/JsWriter {
}

public abstract interface class io/github/airflux/core/writer/JsWriter {
	public abstract fun write (Ljava/lang/Object;)Lio/github/airflux/core/value/JsValue;
}

public final class io/github/airflux/core/writer/JsWriterOpsKt {
	public static final fun arrayWriter (Lio/github/airflux/core/writer/JsWriter;)Lio/github/airflux/core/writer/JsArrayWriter;
	public static final fun writeAsNullable (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsWriter;)Lio/github/airflux/core/value/JsValue;
	public static final fun writeAsOptional (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsWriter;)Lio/github/airflux/core/value/JsValue;
	public static final fun writeAsRequired (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsWriter;)Lio/github/airflux/core/value/JsValue;
}

public final class io/github/airflux/core/writer/object/ObjectWriter {
	public fun <init> (Lio/github/airflux/dsl/writer/config/ObjectWriterConfig;)V
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/core/writer/JsObjectWriter;
}

public final class io/github/airflux/core/writer/object/ObjectWriter$Builder {
	public final fun nullableProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsArrayWriter;)Lio/github/airflux/core/writer/object/builder/JsWriterProperty$Nullable$Array;
	public final fun nullableProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsObjectWriter;)Lio/github/airflux/core/writer/object/builder/JsWriterProperty$Nullable$Object;
	public final fun nullableProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsWriter;)Lio/github/airflux/core/writer/object/builder/JsWriterProperty$Nullable$Simple;
	public final fun optionalProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsArrayWriter;)Lio/github/airflux/core/writer/object/builder/JsWriterProperty$Optional$Array;
	public final fun optionalProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsObjectWriter;)Lio/github/airflux/core/writer/object/builder/JsWriterProperty$Optional$Object;
	public final fun optionalProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsWriter;)Lio/github/airflux/core/writer/object/builder/JsWriterProperty$Optional$Simple;
	public final fun requiredProperty (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/core/writer/JsWriter;)V
}

public final class io/github/airflux/core/writer/object/ObjectWriterKt {
	public static final fun serialization (Ljava/lang/Object;Lio/github/airflux/core/writer/JsWriter;)Lio/github/airflux/core/value/JsValue;
}

public abstract interface class io/github/airflux/core/writer/object/builder/JsWriterProperty {
	public abstract fun getName ()Ljava/lang/String;
}

public abstract interface class io/github/airflux/core/writer/object/builder/JsWriterProperty$Nullable : io/github/airflux/core/writer/object/builder/JsWriterProperty {
}

public abstract interface class io/github/airflux/core/writer/object/builder/JsWriterProperty$Nullable$Array : io/github/airflux/core/writer/object/builder/JsWriterProperty$Nullable {
	public abstract fun writeNullIfEmpty ()V
}

public abstract interface class io/github/airflux/core/writer/object/builder/JsWriterProperty$Nullable$Object : io/github/airflux/core/writer/object/builder/JsWriterProperty$Nullable {
	public abstract fun writeNullIfEmpty ()V
}

public abstract interface class io/github/airflux/core/writer/object/builder/JsWriterProperty$Nullable$Simple : io/github/airflux/core/writer/object/builder/JsWriterProperty$Nullable {
}

public abstract interface class io/github/airflux/core/writer/object/builder/JsWriterProperty$Optional : io/github/airflux/core/writer/object/builder/JsWriterProperty {
}

public abstract interface class io/github/airflux/core/writer/object/builder/JsWriterProperty$Optional$Array : io/github/airflux/core/writer/object/builder/JsWriterProperty$Optional {
	public abstract fun skipIfEmpty ()V
}

public abstract interface class io/github/airflux/core/writer/object/builder/JsWriterProperty$Optional$Object : io/github/airflux/core/writer/object/builder/JsWriterProperty$Optional {
	public abstract fun skipIfEmpty ()V
}

public abstract interface class io/github/airflux/core/writer/object/builder/JsWriterProperty$Optional$Simple : io/github/airflux/core/writer/object/builder/JsWriterProperty$Optional {
}

public abstract interface class io/github/airflux/core/writer/object/builder/JsWriterProperty$Required : io/github/airflux/core/writer/object/builder/JsWriterProperty {
}

public abstract interface annotation class io/github/airflux/dsl/AirfluxMarker : java/lang/annotation/Annotation {
}

public final class io/github/airflux/dsl/lookup/JsLookupOpsKt {
	public static final fun div (Lio/github/airflux/core/lookup/JsLookup;I)Lio/github/airflux/core/lookup/JsLookup;
	public static final fun div (Lio/github/airflux/core/lookup/JsLookup;Ljava/lang/String;)Lio/github/airflux/core/lookup/JsLookup;
}

public final class io/github/airflux/dsl/path/JsPathOpsKt {
	public static final fun div (Lio/github/airflux/core/path/JsPath$Companion;I)Lio/github/airflux/core/path/JsPath;
	public static final fun div (Lio/github/airflux/core/path/JsPath$Companion;Ljava/lang/String;)Lio/github/airflux/core/path/JsPath;
	public static final fun div (Lio/github/airflux/core/path/JsPath;I)Lio/github/airflux/core/path/JsPath;
	public static final fun div (Lio/github/airflux/core/path/JsPath;Ljava/lang/String;)Lio/github/airflux/core/path/JsPath;
}

public final class io/github/airflux/dsl/path/JsPathsOpsKt {
	public static final fun or (Lio/github/airflux/core/path/JsPaths;Lio/github/airflux/core/path/JsPath;)Lio/github/airflux/core/path/JsPaths;
	public static final fun or (Lio/github/airflux/core/path/JsPaths;Lio/github/airflux/core/path/JsPaths;)Lio/github/airflux/core/path/JsPaths;
	public static final fun or (Ljava/lang/String;Ljava/lang/String;)Lio/github/airflux/core/path/JsPaths;
}

public final class io/github/airflux/dsl/reader/ReaderOpsKt {
	public static final fun arrayReader (Lio/github/airflux/dsl/reader/config/JsArrayReaderConfig;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/core/reader/JsArrayReader;
	public static synthetic fun arrayReader$default (Lio/github/airflux/dsl/reader/config/JsArrayReaderConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/github/airflux/core/reader/JsArrayReader;
	public static final fun reader (Lio/github/airflux/dsl/reader/config/JsObjectReaderConfig;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/core/reader/JsObjectReader;
	public static synthetic fun reader$default (Lio/github/airflux/dsl/reader/config/JsObjectReaderConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/github/airflux/core/reader/JsObjectReader;
}

public final class io/github/airflux/dsl/reader/array/builder/JsArrayReaderBuilder {
	public fun <init> (Lio/github/airflux/dsl/reader/config/JsArrayReaderConfig;)V
	public final fun returns (Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec;)Lio/github/airflux/dsl/reader/array/builder/JsArrayReaderBuilder$ResultBuilder;
	public final fun returns (Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayPrefixItemsSpec;Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec;)Lio/github/airflux/dsl/reader/array/builder/JsArrayReaderBuilder$ResultBuilder;
	public final fun returns (Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayPrefixItemsSpec;Z)Lio/github/airflux/dsl/reader/array/builder/JsArrayReaderBuilder$ResultBuilder;
	public final fun validation (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/github/airflux/dsl/reader/array/builder/JsArrayReaderBuilder$ResultBuilder : kotlin/jvm/functions/Function3 {
}

public final class io/github/airflux/dsl/reader/array/builder/JsArrayReaderBuilder$Validation {
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/array/builder/JsArrayReaderBuilder$Validation$Builder {
	public fun <init> ()V
	public fun <init> (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;)V
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;
	public final fun setAfter (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;)V
	public final fun setBefore (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;)V
}

public abstract interface class io/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec {
	public abstract fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public abstract interface class io/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable : io/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec {
	public abstract fun or (Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable;)Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable;
}

public abstract interface class io/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable : io/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec {
	public abstract fun or (Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable;)Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable;
}

public final class io/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpecOpsKt {
	public static final fun nonNullable (Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable;
	public static final fun nullable (Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable;
}

public final class io/github/airflux/dsl/reader/array/builder/item/specification/JsArrayPrefixItemsSpec {
	public final fun getItems ()Ljava/util/List;
}

public final class io/github/airflux/dsl/reader/array/builder/item/specification/JsArrayPrefixItemsSpecKt {
	public static final fun prefixItems (Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec;[Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayItemSpec;)Lio/github/airflux/dsl/reader/array/builder/item/specification/JsArrayPrefixItemsSpec;
}

public abstract interface class io/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder {
}

public abstract interface class io/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After : io/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder {
	public abstract fun build ()Lio/github/airflux/dsl/reader/validator/JsArrayValidator$After;
}

public abstract interface class io/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before : io/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder {
	public abstract fun build ()Lio/github/airflux/dsl/reader/validator/JsArrayValidator$Before;
}

public final class io/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilderKt {
	public static final fun and (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;)Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;
	public static final fun and (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;)Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;
	public static final fun or (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;)Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;
	public static final fun or (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;)Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/config/JsArrayReaderConfig {
	public static final field Companion Lio/github/airflux/dsl/reader/config/JsArrayReaderConfig$Companion;
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/config/JsArrayReaderConfig$Validation;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getValidation ()Lio/github/airflux/dsl/reader/config/JsArrayReaderConfig$Validation;
}

public final class io/github/airflux/dsl/reader/config/JsArrayReaderConfig$Builder {
	public fun <init> ()V
	public final fun validation (Lkotlin/jvm/functions/Function1;)V
}

public final class io/github/airflux/dsl/reader/config/JsArrayReaderConfig$Companion {
	public final fun getDEFAULT ()Lio/github/airflux/dsl/reader/config/JsArrayReaderConfig;
}

public final class io/github/airflux/dsl/reader/config/JsArrayReaderConfig$Validation {
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBefore ()Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/config/JsArrayReaderConfig$Validation$Builder {
	public fun <init> ()V
	public fun <init> (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;)V
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBefore ()Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;
	public final fun setBefore (Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;)V
}

public final class io/github/airflux/dsl/reader/config/JsArrayReaderConfigKt {
	public static final fun arrayReaderConfig (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/dsl/reader/config/JsArrayReaderConfig;
}

public final class io/github/airflux/dsl/reader/config/JsObjectReaderConfig {
	public static final field Companion Lio/github/airflux/dsl/reader/config/JsObjectReaderConfig$Companion;
	public synthetic fun <init> (ZLio/github/airflux/dsl/reader/config/JsObjectReaderConfig$Validation;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCheckUniquePropertyPath ()Z
	public final fun getValidation ()Lio/github/airflux/dsl/reader/config/JsObjectReaderConfig$Validation;
}

public final class io/github/airflux/dsl/reader/config/JsObjectReaderConfig$Builder {
	public fun <init> ()V
	public final fun getCheckUniquePropertyPath ()Z
	public final fun setCheckUniquePropertyPath (Z)V
	public final fun validation (Lkotlin/jvm/functions/Function1;)V
}

public final class io/github/airflux/dsl/reader/config/JsObjectReaderConfig$Companion {
	public final fun getDEFAULT ()Lio/github/airflux/dsl/reader/config/JsObjectReaderConfig;
}

public final class io/github/airflux/dsl/reader/config/JsObjectReaderConfig$Validation {
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/config/JsObjectReaderConfig$Validation$Builder {
	public fun <init> ()V
	public fun <init> (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;)V
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;
	public final fun setAfter (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;)V
	public final fun setBefore (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;)V
}

public final class io/github/airflux/dsl/reader/config/JsObjectReaderConfigKt {
	public static final fun objectReaderConfig (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/dsl/reader/config/JsObjectReaderConfig;
}

public final class io/github/airflux/dsl/reader/context/JsReaderContextBuilder {
	public fun <init> ()V
	public final fun errorBuilders (Lkotlin/jvm/functions/Function1;)V
	public final fun exceptions (Lkotlin/jvm/functions/Function1;)V
	public final fun getFailFast ()Ljava/lang/Boolean;
	public final fun setFailFast (Ljava/lang/Boolean;)V
}

public final class io/github/airflux/dsl/reader/context/JsReaderContextBuilder$ErrorsBuilder {
	public fun <init> ()V
	public final fun register (Lio/github/airflux/core/reader/context/error/ErrorBuilderContextElement;)V
	public final fun unaryPlus (Lio/github/airflux/core/reader/context/error/ErrorBuilderContextElement;)V
}

public final class io/github/airflux/dsl/reader/context/JsReaderContextBuilderKt {
	public static final fun readerContext (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/core/reader/context/JsReaderContext;
}

public final class io/github/airflux/dsl/reader/context/exception/ExceptionsHandler : io/github/airflux/core/reader/context/JsReaderAbstractContextElement {
	public static final field Key Lio/github/airflux/dsl/reader/context/exception/ExceptionsHandler$Key;
	public fun <init> (Lkotlin/jvm/functions/Function3;)V
	public final fun handleException (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Throwable;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/dsl/reader/context/exception/ExceptionsHandler$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/dsl/reader/context/exception/ExceptionsHandlerBuilder {
	public fun <init> ()V
	public final fun exception (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function3;)V
}

public final class io/github/airflux/dsl/reader/object/builder/JsObjectReaderBuilder {
	public fun <init> (Lio/github/airflux/dsl/reader/config/JsObjectReaderConfig;)V
	public final fun getCheckUniquePropertyPath ()Z
	public final fun property (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;)Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Defaultable;
	public final fun property (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;)Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Nullable;
	public final fun property (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;)Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$NullableWithDefault;
	public final fun property (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;)Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Optional;
	public final fun property (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;)Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$OptionalWithDefault;
	public final fun property (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;)Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Required;
	public final fun returns (Lkotlin/jvm/functions/Function3;)Lio/github/airflux/dsl/reader/object/builder/JsObjectReaderBuilder$ResultBuilder;
	public final fun setCheckUniquePropertyPath (Z)V
	public final fun validation (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/JsObjectReaderBuilder$ResultBuilder : kotlin/jvm/functions/Function3 {
}

public final class io/github/airflux/dsl/reader/object/builder/JsObjectReaderBuilder$Validation {
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/object/builder/JsObjectReaderBuilder$Validation$Builder {
	public fun <init> ()V
	public fun <init> (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;)V
	public synthetic fun <init> (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAfter ()Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;
	public final fun getBefore ()Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;
	public final fun setAfter (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;)V
	public final fun setBefore (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;)V
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/ObjectValuesMap {
	public abstract fun get (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Defaultable;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Nullable;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$NullableWithDefault;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Optional;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$OptionalWithDefault;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Required;)Ljava/lang/Object;
	public abstract fun getSize ()I
	public abstract fun isEmpty ()Z
	public abstract fun isNotEmpty ()Z
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Defaultable;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Nullable;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$NullableWithDefault;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Optional;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$OptionalWithDefault;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Required;)Ljava/lang/Object;
}

public final class io/github/airflux/dsl/reader/object/builder/property/JsObjectProperties : java/util/Collection, kotlin/jvm/internal/markers/KMappedMarker {
	public fun <init> (Ljava/util/List;)V
	public fun add (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperty;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public abstract class io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty {
	public abstract fun getPath ()Lio/github/airflux/core/path/JsPaths;
}

public final class io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Defaultable : io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Nullable : io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$NullableWithDefault : io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Optional : io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$OptionalWithDefault : io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public final class io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty$Required : io/github/airflux/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public abstract fun getPath ()Lio/github/airflux/core/path/JsPaths;
	public abstract fun getReader ()Lio/github/airflux/core/reader/JsReader;
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable : io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public abstract fun or (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable : io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public abstract fun filter (Lio/github/airflux/core/reader/predicate/JsPredicate;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
	public abstract fun or (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault : io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public abstract fun filter (Lio/github/airflux/core/reader/predicate/JsPredicate;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public abstract fun or (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional : io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public abstract fun filter (Lio/github/airflux/core/reader/predicate/JsPredicate;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public abstract fun or (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault : io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public abstract fun or (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required : io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public abstract fun or (Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;
	public abstract fun validation (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;
}

public final class io/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpecOpsKt {
	public static final fun defaultable (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;
	public static final fun defaultable (Lio/github/airflux/core/path/JsPaths;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;
	public static final fun defaultable (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;
	public static final fun nullable (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun nullable (Lio/github/airflux/core/path/JsPaths;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun nullable (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun nullableWithDefault (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun nullableWithDefault (Lio/github/airflux/core/path/JsPaths;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun nullableWithDefault (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun optional (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun optional (Lio/github/airflux/core/path/JsPaths;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun optional (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun optionalWithDefault (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public static final fun optionalWithDefault (Lio/github/airflux/core/path/JsPaths;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public static final fun optionalWithDefault (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public static final fun required (Lio/github/airflux/core/path/JsPath;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;
	public static final fun required (Lio/github/airflux/core/path/JsPaths;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;
	public static final fun required (Ljava/lang/String;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder {
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After : io/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder {
	public abstract fun build (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperties;)Lio/github/airflux/dsl/reader/validator/JsObjectValidator$After;
}

public abstract interface class io/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before : io/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder {
	public abstract fun build (Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperties;)Lio/github/airflux/dsl/reader/validator/JsObjectValidator$Before;
}

public final class io/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilderKt {
	public static final fun and (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;)Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;
	public static final fun and (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;)Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;
	public static final fun or (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;)Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;
	public static final fun or (Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;)Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;
}

public final class io/github/airflux/dsl/reader/result/JsLocationOpsKt {
	public static final fun div (Lio/github/airflux/core/reader/result/JsLocation;I)Lio/github/airflux/core/reader/result/JsLocation;
	public static final fun div (Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/path/PathElement;)Lio/github/airflux/core/reader/result/JsLocation;
	public static final fun div (Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/String;)Lio/github/airflux/core/reader/result/JsLocation;
}

public abstract interface class io/github/airflux/dsl/reader/validator/JsArrayValidator {
}

public abstract interface class io/github/airflux/dsl/reader/validator/JsArrayValidator$After : io/github/airflux/dsl/reader/validator/JsArrayValidator {
	public fun and (Lio/github/airflux/dsl/reader/validator/JsArrayValidator$After;)Lio/github/airflux/dsl/reader/validator/JsArrayValidator$After;
	public fun or (Lio/github/airflux/dsl/reader/validator/JsArrayValidator$After;)Lio/github/airflux/dsl/reader/validator/JsArrayValidator$After;
	public abstract fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;Ljava/util/List;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public abstract interface class io/github/airflux/dsl/reader/validator/JsArrayValidator$Before : io/github/airflux/dsl/reader/validator/JsArrayValidator {
	public fun and (Lio/github/airflux/dsl/reader/validator/JsArrayValidator$Before;)Lio/github/airflux/dsl/reader/validator/JsArrayValidator$Before;
	public fun or (Lio/github/airflux/dsl/reader/validator/JsArrayValidator$Before;)Lio/github/airflux/dsl/reader/validator/JsArrayValidator$Before;
	public abstract fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public abstract interface class io/github/airflux/dsl/reader/validator/JsObjectValidator {
}

public abstract interface class io/github/airflux/dsl/reader/validator/JsObjectValidator$After : io/github/airflux/dsl/reader/validator/JsObjectValidator {
	public fun and (Lio/github/airflux/dsl/reader/validator/JsObjectValidator$After;)Lio/github/airflux/dsl/reader/validator/JsObjectValidator$After;
	public fun or (Lio/github/airflux/dsl/reader/validator/JsObjectValidator$After;)Lio/github/airflux/dsl/reader/validator/JsObjectValidator$After;
	public abstract fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/dsl/reader/object/builder/ObjectValuesMap;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public abstract interface class io/github/airflux/dsl/reader/validator/JsObjectValidator$Before : io/github/airflux/dsl/reader/validator/JsObjectValidator {
	public fun and (Lio/github/airflux/dsl/reader/validator/JsObjectValidator$Before;)Lio/github/airflux/dsl/reader/validator/JsObjectValidator$Before;
	public fun or (Lio/github/airflux/dsl/reader/validator/JsObjectValidator$Before;)Lio/github/airflux/dsl/reader/validator/JsObjectValidator$Before;
	public abstract fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/dsl/value/JsValueOpsKt {
	public static final fun deserialization (Lio/github/airflux/core/value/JsValue;Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/JsReader;)Lio/github/airflux/core/reader/result/JsResult;
	public static final fun div (Lio/github/airflux/core/value/JsValue;I)Lio/github/airflux/core/lookup/JsLookup;
	public static final fun div (Lio/github/airflux/core/value/JsValue;Ljava/lang/String;)Lio/github/airflux/core/lookup/JsLookup;
}

public final class io/github/airflux/dsl/writer/config/ObjectWriterConfig {
	public static final field Companion Lio/github/airflux/dsl/writer/config/ObjectWriterConfig$Companion;
	public synthetic fun <init> (ZZZZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getSkipPropertyIfArrayIsEmpty ()Z
	public final fun getSkipPropertyIfObjectIsEmpty ()Z
	public final fun getWriteNullIfArrayIsEmpty ()Z
	public final fun getWriteNullIfObjectIsEmpty ()Z
}

public final class io/github/airflux/dsl/writer/config/ObjectWriterConfig$Builder {
	public final fun getSkipPropertyIfArrayIsEmpty ()Z
	public final fun getSkipPropertyIfObjectIsEmpty ()Z
	public final fun getWriteNullIfArrayIsEmpty ()Z
	public final fun getWriteNullIfObjectIsEmpty ()Z
	public final fun setSkipPropertyIfArrayIsEmpty (Z)V
	public final fun setSkipPropertyIfObjectIsEmpty (Z)V
	public final fun setWriteNullIfArrayIsEmpty (Z)V
	public final fun setWriteNullIfObjectIsEmpty (Z)V
}

public final class io/github/airflux/dsl/writer/config/ObjectWriterConfig$Companion {
	public final fun build (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/dsl/writer/config/ObjectWriterConfig;
	public final fun getDefault ()Lio/github/airflux/dsl/writer/config/ObjectWriterConfig;
}

public final class io/github/airflux/std/reader/BigDecimalReader : io/github/airflux/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/std/reader/BigDecimalReader;
	public fun read (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/std/reader/BooleanReader : io/github/airflux/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/std/reader/BooleanReader;
	public fun read (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/std/reader/ByteReader : io/github/airflux/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/std/reader/ByteReader;
	public fun read (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/std/reader/IntReader : io/github/airflux/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/std/reader/IntReader;
	public fun read (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/std/reader/LongReader : io/github/airflux/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/std/reader/LongReader;
	public fun read (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/std/reader/ShortReader : io/github/airflux/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/std/reader/ShortReader;
	public fun read (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/std/reader/StringReader : io/github/airflux/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/std/reader/StringReader;
	public fun read (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsValue;)Lio/github/airflux/core/reader/result/JsResult;
}

public final class io/github/airflux/std/validator/array/ArrayValidator {
	public static final field INSTANCE Lio/github/airflux/std/validator/array/ArrayValidator;
	public final fun isNotEmpty ()Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;
	public final fun isUnique (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$After;
	public final fun maxItems (I)Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;
	public final fun minItems (I)Lio/github/airflux/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Before;
}

public final class io/github/airflux/std/validator/array/IsNotEmptyArrayValidator : io/github/airflux/dsl/reader/validator/JsArrayValidator$Before {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/array/IsNotEmptyArrayValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/array/IsNotEmptyArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/array/IsNotEmptyArrayValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/array/IsUniqueArrayValidator : io/github/airflux/dsl/reader/validator/JsArrayValidator$After {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;Ljava/util/List;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/array/IsUniqueArrayValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/array/IsUniqueArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final fun build (Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/array/IsUniqueArrayValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/array/MaxItemsArrayValidator : io/github/airflux/dsl/reader/validator/JsArrayValidator$Before {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/array/MaxItemsArrayValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/array/MaxItemsArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/array/MaxItemsArrayValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/array/MinItemsArrayValidator : io/github/airflux/dsl/reader/validator/JsArrayValidator$Before {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/core/value/JsArray;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/array/MinItemsArrayValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/array/MinItemsArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/array/MinItemsArrayValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/comparable/ComparableValidator {
	public static final field INSTANCE Lio/github/airflux/std/validator/comparable/ComparableValidator;
	public final fun eq (Ljava/lang/Number;)Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun ge (Ljava/lang/Number;)Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun gt (Ljava/lang/Number;)Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun le (Ljava/lang/Number;)Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun lt (Ljava/lang/Number;)Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun max (Ljava/lang/Number;)Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun min (Ljava/lang/Number;)Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun ne (Ljava/lang/Number;)Lio/github/airflux/core/reader/validator/JsValidator;
}

public final class io/github/airflux/std/validator/comparable/EqComparableValidator : io/github/airflux/core/reader/validator/JsValidator {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/comparable/EqComparableValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/comparable/EqComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/comparable/EqComparableValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/comparable/GeComparableValidator : io/github/airflux/core/reader/validator/JsValidator {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/comparable/GeComparableValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/comparable/GeComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/comparable/GeComparableValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/comparable/GtComparableValidator : io/github/airflux/core/reader/validator/JsValidator {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/comparable/GtComparableValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/comparable/GtComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/comparable/GtComparableValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/comparable/LeComparableValidator : io/github/airflux/core/reader/validator/JsValidator {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/comparable/LeComparableValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/comparable/LeComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/comparable/LeComparableValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/comparable/LtComparableValidator : io/github/airflux/core/reader/validator/JsValidator {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/comparable/LtComparableValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/comparable/LtComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/comparable/LtComparableValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/comparable/MaxComparableValidator : io/github/airflux/core/reader/validator/JsValidator {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/comparable/MaxComparableValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/comparable/MaxComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/comparable/MaxComparableValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/comparable/MinComparableValidator : io/github/airflux/core/reader/validator/JsValidator {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/comparable/MinComparableValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/comparable/MinComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/comparable/MinComparableValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/comparable/NeComparableValidator : io/github/airflux/core/reader/validator/JsValidator {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/comparable/NeComparableValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/comparable/NeComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/comparable/NeComparableValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/condition/ConditionValidatorsKt {
	public static final fun applyIf (Lio/github/airflux/core/reader/validator/JsValidator;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/core/reader/validator/JsValidator;
	public static final fun applyIfNotNull (Lio/github/airflux/core/reader/validator/JsValidator;)Lio/github/airflux/core/reader/validator/JsValidator;
}

public final class io/github/airflux/std/validator/object/AdditionalPropertiesObjectValidator : io/github/airflux/dsl/reader/validator/JsObjectValidator$Before {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/object/AdditionalPropertiesObjectValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/object/AdditionalPropertiesObjectValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/object/AdditionalPropertiesObjectValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/object/IsNotEmptyObjectValidator : io/github/airflux/dsl/reader/validator/JsObjectValidator$After {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/dsl/reader/object/builder/ObjectValuesMap;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/object/IsNotEmptyObjectValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/object/IsNotEmptyObjectValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/object/IsNotEmptyObjectValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/object/MaxPropertiesObjectValidator : io/github/airflux/dsl/reader/validator/JsObjectValidator$After {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/dsl/reader/object/builder/ObjectValuesMap;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/object/MaxPropertiesObjectValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/object/MaxPropertiesObjectValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/object/MaxPropertiesObjectValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/object/MinPropertiesObjectValidator : io/github/airflux/dsl/reader/validator/JsObjectValidator$After {
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Lio/github/airflux/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/dsl/reader/object/builder/ObjectValuesMap;Lio/github/airflux/core/value/JsObject;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/object/MinPropertiesObjectValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/object/MinPropertiesObjectValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/object/MinPropertiesObjectValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/object/ObjectValidator {
	public static final field INSTANCE Lio/github/airflux/std/validator/object/ObjectValidator;
	public final fun getAdditionalProperties ()Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Before;
	public final fun isNotEmpty ()Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;
	public final fun maxProperties (I)Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;
	public final fun minProperties (I)Lio/github/airflux/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$After;
}

public final class io/github/airflux/std/validator/string/IsAStringValidator : io/github/airflux/core/reader/validator/JsValidator {
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/String;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/string/IsAStringValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/string/IsAStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final fun build (Ljava/lang/String;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/string/IsAStringValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/string/IsNotBlankStringValidator : io/github/airflux/core/reader/validator/JsValidator {
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/String;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/string/IsNotBlankStringValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/string/IsNotBlankStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/string/IsNotBlankStringValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/string/IsNotEmptyStringValidator : io/github/airflux/core/reader/validator/JsValidator {
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/String;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/string/IsNotEmptyStringValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/string/IsNotEmptyStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/string/IsNotEmptyStringValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/string/MaxLengthStringValidator : io/github/airflux/core/reader/validator/JsValidator {
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/String;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/string/MaxLengthStringValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/string/MaxLengthStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/string/MaxLengthStringValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/string/MinLengthStringValidator : io/github/airflux/core/reader/validator/JsValidator {
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/String;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/string/MinLengthStringValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/string/MinLengthStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/string/MinLengthStringValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/string/PatternStringValidator : io/github/airflux/core/reader/validator/JsValidator {
	public synthetic fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/Object;)Lio/github/airflux/core/reader/result/JsResult$Failure;
	public fun validation (Lio/github/airflux/core/reader/context/JsReaderContext;Lio/github/airflux/core/reader/result/JsLocation;Ljava/lang/String;)Lio/github/airflux/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/std/validator/string/PatternStringValidator$ErrorBuilder : io/github/airflux/core/reader/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/std/validator/string/PatternStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/String;Lkotlin/text/Regex;)Lio/github/airflux/core/reader/result/JsError;
}

public final class io/github/airflux/std/validator/string/PatternStringValidator$ErrorBuilder$Key : io/github/airflux/core/reader/context/JsReaderContext$Key {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/std/validator/string/StringValidator {
	public static final field INSTANCE Lio/github/airflux/std/validator/string/StringValidator;
	public final fun isA (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun isNotBlank ()Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun isNotEmpty ()Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun maxLength (I)Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun minLength (I)Lio/github/airflux/core/reader/validator/JsValidator;
	public final fun pattern (Lkotlin/text/Regex;)Lio/github/airflux/core/reader/validator/JsValidator;
}

public final class io/github/airflux/std/writer/BigDecimalWriterConfiguration {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getStripTrailingZeros ()Z
}

public final class io/github/airflux/std/writer/BuildBigDecimalWriterKt {
	public static final fun buildBigDecimalWriter (Lio/github/airflux/std/writer/BigDecimalWriterConfiguration;)Lio/github/airflux/core/writer/JsWriter;
	public static synthetic fun buildBigDecimalWriter$default (Lio/github/airflux/std/writer/BigDecimalWriterConfiguration;ILjava/lang/Object;)Lio/github/airflux/core/writer/JsWriter;
}

public final class io/github/airflux/std/writer/BuildBooleanWriterKt {
	public static final fun buildBooleanWriter ()Lio/github/airflux/core/writer/JsWriter;
}

public final class io/github/airflux/std/writer/BuildByteWriterKt {
	public static final fun buildByteWriter ()Lio/github/airflux/core/writer/JsWriter;
}

public final class io/github/airflux/std/writer/BuildIntWriterKt {
	public static final fun buildIntWriter ()Lio/github/airflux/core/writer/JsWriter;
}

public final class io/github/airflux/std/writer/BuildLongWriterKt {
	public static final fun buildLongWriter ()Lio/github/airflux/core/writer/JsWriter;
}

public final class io/github/airflux/std/writer/BuildShortWriterKt {
	public static final fun buildShortWriter ()Lio/github/airflux/core/writer/JsWriter;
}

public final class io/github/airflux/std/writer/BuildStringWriterKt {
	public static final fun buildStringWriter ()Lio/github/airflux/core/writer/JsWriter;
}

