public final class io/github/airflux/serialization/core/common/IdentityKt {
	public static final fun identity (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class io/github/airflux/serialization/core/location/Location {
	public static final field Companion Lio/github/airflux/serialization/core/location/Location$Companion;
	public final fun append (I)Lio/github/airflux/serialization/core/location/Location;
	public final fun append (Lio/github/airflux/serialization/core/path/PropertyPath$Element;)Lio/github/airflux/serialization/core/location/Location;
	public final fun append (Lio/github/airflux/serialization/core/path/PropertyPath;)Lio/github/airflux/serialization/core/location/Location;
	public final fun append (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/location/Location;
	public final fun append (Ljava/lang/String;)Lio/github/airflux/serialization/core/location/Location;
	public abstract fun isEmpty ()Z
}

public final class io/github/airflux/serialization/core/location/Location$Companion {
	public final fun foldLeft (Ljava/lang/Object;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun foldRight (Ljava/lang/Object;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun getEmpty ()Lio/github/airflux/serialization/core/location/Location;
}

public abstract class io/github/airflux/serialization/core/lookup/Lookup {
	public final fun apply (I)Lio/github/airflux/serialization/core/lookup/Lookup;
	public abstract fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/Lookup;
	public abstract fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/Lookup;
	public final fun apply (Ljava/lang/String;)Lio/github/airflux/serialization/core/lookup/Lookup;
	public abstract fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
}

public final class io/github/airflux/serialization/core/lookup/Lookup$Defined : io/github/airflux/serialization/core/lookup/Lookup {
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ValueNode;)V
	public fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/Lookup;
	public fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/Lookup;
	public final fun component1 ()Lio/github/airflux/serialization/core/location/Location;
	public final fun component2 ()Lio/github/airflux/serialization/core/value/ValueNode;
	public final fun copy (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ValueNode;)Lio/github/airflux/serialization/core/lookup/Lookup$Defined;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/lookup/Lookup$Defined;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ValueNode;ILjava/lang/Object;)Lio/github/airflux/serialization/core/lookup/Lookup$Defined;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
	public final fun getValue ()Lio/github/airflux/serialization/core/value/ValueNode;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/lookup/Lookup$Undefined : io/github/airflux/serialization/core/lookup/Lookup {
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;)V
	public fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/Lookup;
	public fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/Lookup;
	public final fun component1 ()Lio/github/airflux/serialization/core/location/Location;
	public final fun copy (Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/lookup/Lookup$Undefined;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/lookup/Lookup$Undefined;Lio/github/airflux/serialization/core/location/Location;ILjava/lang/Object;)Lio/github/airflux/serialization/core/lookup/Lookup$Undefined;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/lookup/LookupKt {
	public static final fun lookup (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/Lookup;
	public static final fun lookup (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/Lookup;
	public static final fun lookup (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/path/PropertyPath;)Lio/github/airflux/serialization/core/lookup/Lookup;
}

public final class io/github/airflux/serialization/core/path/PropertyPath {
	public static final field Companion Lio/github/airflux/serialization/core/path/PropertyPath$Companion;
	public fun <init> (I)V
	public fun <init> (Lio/github/airflux/serialization/core/path/PropertyPath$Element;)V
	public fun <init> (Ljava/lang/String;)V
	public final fun append (I)Lio/github/airflux/serialization/core/path/PropertyPath;
	public final fun append (Lio/github/airflux/serialization/core/path/PropertyPath$Element;)Lio/github/airflux/serialization/core/path/PropertyPath;
	public final fun append (Ljava/lang/String;)Lio/github/airflux/serialization/core/path/PropertyPath;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getElements ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/PropertyPath$Companion {
}

public abstract class io/github/airflux/serialization/core/path/PropertyPath$Element {
}

public final class io/github/airflux/serialization/core/path/PropertyPath$Element$Idx : io/github/airflux/serialization/core/path/PropertyPath$Element {
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;IILjava/lang/Object;)Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/PropertyPath$Element$Key : io/github/airflux/serialization/core/path/PropertyPath$Element {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;Ljava/lang/String;ILjava/lang/Object;)Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/PropertyPaths {
	public static final field Companion Lio/github/airflux/serialization/core/path/PropertyPaths$Companion;
	public fun <init> (Lio/github/airflux/serialization/core/path/PropertyPath;Ljava/util/List;)V
	public fun <init> (Lio/github/airflux/serialization/core/path/PropertyPath;[Lio/github/airflux/serialization/core/path/PropertyPath;)V
	public final fun append (Lio/github/airflux/serialization/core/path/PropertyPath;)Lio/github/airflux/serialization/core/path/PropertyPaths;
	public final fun append (Lio/github/airflux/serialization/core/path/PropertyPaths;)Lio/github/airflux/serialization/core/path/PropertyPaths;
	public final fun fold (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun getItems ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/PropertyPaths$Companion {
}

public abstract interface class io/github/airflux/serialization/core/reader/Reader {
	public fun map (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/Reader;
	public abstract fun read (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ValueNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/ReaderKt {
	public static final fun filter (Lio/github/airflux/serialization/core/reader/Reader;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun flatMapResult (Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun or (Lio/github/airflux/serialization/core/reader/Reader;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun validation (Lio/github/airflux/serialization/core/reader/Reader;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/core/reader/array/ArrayPropertyReaderKt {
	public static final fun readArray (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readArray (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;Ljava/util/List;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readArray (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;Ljava/util/List;Z)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/env/ReaderEnv {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;)V
	public synthetic fun <init> (Ljava/lang/Object;Ljava/lang/Object;Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Ljava/lang/Object;
	public final fun component3 ()Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;
	public final fun copy (Ljava/lang/Object;Ljava/lang/Object;Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;)Lio/github/airflux/serialization/core/reader/env/ReaderEnv;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Ljava/lang/Object;Ljava/lang/Object;Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/env/ReaderEnv;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContext ()Ljava/lang/Object;
	public final fun getErrorBuilders ()Ljava/lang/Object;
	public final fun getExceptionsHandler ()Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler {
	public abstract fun handle (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Throwable;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/env/option/FailFastOption {
	public abstract fun getFailFast ()Z
}

public abstract interface class io/github/airflux/serialization/core/reader/error/AdditionalItemsErrorBuilder {
	public abstract fun additionalItemsError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/error/InvalidTypeErrorBuilder {
	public abstract fun invalidTypeError (Ljava/lang/Iterable;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/error/PathMissingErrorBuilder {
	public abstract fun pathMissingError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/error/ValueCastErrorBuilder {
	public abstract fun valueCastError (Ljava/lang/String;Lkotlin/reflect/KClass;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/predicate/ReaderPredicate {
	public abstract fun test (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Ljava/lang/Object;)Z
}

public final class io/github/airflux/serialization/core/reader/predicate/ReaderPredicateKt {
	public static final fun and (Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;
	public static final fun or (Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;
}

public abstract class io/github/airflux/serialization/core/reader/result/ReaderResult {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/ReaderResult$Companion;
	public final fun flatMap (Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public final fun map (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Companion {
}

public abstract interface class io/github/airflux/serialization/core/reader/result/ReaderResult$Error {
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Errors {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors$Companion;
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getItems ()Ljava/util/List;
	public fun hashCode ()I
	public final fun plus (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Errors$Companion {
	public final fun invoke (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;[Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;
	public final fun invoke (Ljava/util/List;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Failure : io/github/airflux/serialization/core/reader/result/ReaderResult {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Companion;
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;)V
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;)V
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCauses ()Ljava/util/List;
	public fun hashCode ()I
	public final fun plus (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Cause {
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;)V
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/location/Location;
	public final fun component2 ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;
	public final fun copy (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Cause;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Cause;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Cause;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getErrors ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;
	public final fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Companion {
	public final fun merge (Ljava/util/Collection;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Success : io/github/airflux/serialization/core/reader/result/ReaderResult {
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/location/Location;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Success;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Success;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Success;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResultKt {
	public static final fun failure (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun fold (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun getOrElse (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static final fun getOrHandle (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun getOrNull (Lio/github/airflux/serialization/core/reader/result/ReaderResult;)Ljava/lang/Object;
	public static final fun orElse (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun orThrow (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun recovery (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun success (Ljava/lang/Object;Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun withCatching (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResultOpsKt {
	public static final fun filter (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun validation (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/struct/NullablePropertyReaderKt {
	public static final fun readNullable (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/lookup/Lookup;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/struct/NullableWithDefaultPropertyReaderKt {
	public static final fun readNullable (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/lookup/Lookup;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/struct/OptionalPropertyReaderKt {
	public static final fun readOptional (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/lookup/Lookup;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/struct/OptionalWithDefaultPropertyReaderKt {
	public static final fun readOptional (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/lookup/Lookup;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/struct/RequiredPropertyReaderKt {
	public static final fun readRequired (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/lookup/Lookup;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/struct/WithDefaultPropertyReaderKt {
	public static final fun readWithDefault (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/lookup/Lookup;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public abstract interface class io/github/airflux/serialization/core/reader/validator/Validator {
	public abstract fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public final class io/github/airflux/serialization/core/reader/validator/ValidatorKt {
	public static final fun and (Lio/github/airflux/serialization/core/reader/validator/Validator;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public static final fun or (Lio/github/airflux/serialization/core/reader/validator/Validator;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/core/reader/validator/Validator;
}

public final class io/github/airflux/serialization/core/value/ArrayNode : io/github/airflux/serialization/core/value/ValueNode, java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/serialization/core/value/ArrayNode$Companion;
	public static final field nameOfType Ljava/lang/String;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (I)Lio/github/airflux/serialization/core/value/ValueNode;
	public final fun get (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;)Lio/github/airflux/serialization/core/value/ValueNode;
	public fun getNameOfType ()Ljava/lang/String;
	public final fun getSize ()I
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/ArrayNode$Companion {
	public final fun invoke ([Lio/github/airflux/serialization/core/value/ValueNode;)Lio/github/airflux/serialization/core/value/ArrayNode;
}

public abstract class io/github/airflux/serialization/core/value/BooleanNode : io/github/airflux/serialization/core/value/ValueNode {
	public static final field Companion Lio/github/airflux/serialization/core/value/BooleanNode$Companion;
	public static final field nameOfType Ljava/lang/String;
	public synthetic fun <init> (ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getGet ()Z
	public fun getNameOfType ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/BooleanNode$Companion {
	public final fun valueOf (Z)Lio/github/airflux/serialization/core/value/BooleanNode;
}

public final class io/github/airflux/serialization/core/value/BooleanNode$False : io/github/airflux/serialization/core/value/BooleanNode {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/BooleanNode$False;
}

public final class io/github/airflux/serialization/core/value/BooleanNode$True : io/github/airflux/serialization/core/value/BooleanNode {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/BooleanNode$True;
}

public final class io/github/airflux/serialization/core/value/NullNode : io/github/airflux/serialization/core/value/ValueNode {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/NullNode;
	public fun getNameOfType ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/NumberNode : io/github/airflux/serialization/core/value/ValueNode {
	public static final field Companion Lio/github/airflux/serialization/core/value/NumberNode$Companion;
	public static final field nameOfType Ljava/lang/String;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun getNameOfType ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isInteger ()Z
	public final fun isReal ()Z
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/NumberNode$Companion {
	public final fun valueOf (B)Lio/github/airflux/serialization/core/value/NumberNode;
	public final fun valueOf (I)Lio/github/airflux/serialization/core/value/NumberNode;
	public final fun valueOf (J)Lio/github/airflux/serialization/core/value/NumberNode;
	public final fun valueOf (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/NumberNode;
	public final fun valueOf (S)Lio/github/airflux/serialization/core/value/NumberNode;
}

public final class io/github/airflux/serialization/core/value/StringNode : io/github/airflux/serialization/core/value/ValueNode {
	public static final field Companion Lio/github/airflux/serialization/core/value/StringNode$Companion;
	public static final field nameOfType Ljava/lang/String;
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun getNameOfType ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/StringNode$Companion {
}

public final class io/github/airflux/serialization/core/value/StructNode : io/github/airflux/serialization/core/value/ValueNode, java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/serialization/core/value/StructNode$Companion;
	public static final field nameOfType Ljava/lang/String;
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;)Lio/github/airflux/serialization/core/value/ValueNode;
	public final fun get (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/ValueNode;
	public final fun getCount ()I
	public fun getNameOfType ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/StructNode$Companion {
	public final fun invoke ([Lkotlin/Pair;)Lio/github/airflux/serialization/core/value/StructNode;
}

public abstract class io/github/airflux/serialization/core/value/ValueNode {
	public abstract fun getNameOfType ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/ValueNodeOpsKt {
	public static final fun readAsArray (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readAsBoolean (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readAsNumber (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readAsString (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readAsStruct (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public abstract interface class io/github/airflux/serialization/core/writer/Writer {
	public abstract fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/core/writer/env/WriterEnv {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lio/github/airflux/serialization/core/writer/env/WriterEnv;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Ljava/lang/Object;ILjava/lang/Object;)Lio/github/airflux/serialization/core/writer/env/WriterEnv;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContext ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/airflux/serialization/core/writer/env/option/WriterActionBuilderIfResultIsEmptyOption {
	public abstract fun getWriterActionIfResultIsEmpty ()Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
}

public abstract interface class io/github/airflux/serialization/core/writer/predicate/WriterPredicate {
	public fun and (Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;
	public fun or (Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;
	public abstract fun test (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Z
}

public final class io/github/airflux/serialization/core/writer/struct/NonNullablePropertyWriterKt {
	public static final fun writeNonNullable (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/writer/Writer;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/core/writer/struct/NullablePropertyWriterKt {
	public static final fun writeNullable (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/writer/Writer;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/core/writer/struct/OptionalPropertyWriterKt {
	public static final fun writeOptional (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/writer/Writer;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public abstract interface annotation class io/github/airflux/serialization/dsl/AirfluxMarker : java/lang/annotation/Annotation {
}

public final class io/github/airflux/serialization/dsl/location/LocationKt {
	public static final fun div (Lio/github/airflux/serialization/core/location/Location;I)Lio/github/airflux/serialization/core/location/Location;
	public static final fun div (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/path/PropertyPath$Element;)Lio/github/airflux/serialization/core/location/Location;
	public static final fun div (Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/location/Location;
}

public final class io/github/airflux/serialization/dsl/lookup/LookupKt {
	public static final fun div (Lio/github/airflux/serialization/core/lookup/Lookup;I)Lio/github/airflux/serialization/core/lookup/Lookup;
	public static final fun div (Lio/github/airflux/serialization/core/lookup/Lookup;Ljava/lang/String;)Lio/github/airflux/serialization/core/lookup/Lookup;
}

public final class io/github/airflux/serialization/dsl/path/PropertyPathOpsKt {
	public static final fun div (Lio/github/airflux/serialization/core/path/PropertyPath$Companion;I)Lio/github/airflux/serialization/core/path/PropertyPath;
	public static final fun div (Lio/github/airflux/serialization/core/path/PropertyPath$Companion;Ljava/lang/String;)Lio/github/airflux/serialization/core/path/PropertyPath;
	public static final fun div (Lio/github/airflux/serialization/core/path/PropertyPath;I)Lio/github/airflux/serialization/core/path/PropertyPath;
	public static final fun div (Lio/github/airflux/serialization/core/path/PropertyPath;Ljava/lang/String;)Lio/github/airflux/serialization/core/path/PropertyPath;
}

public final class io/github/airflux/serialization/dsl/path/PropertyPathsOpsKt {
	public static final fun or (Lio/github/airflux/serialization/core/path/PropertyPaths;Lio/github/airflux/serialization/core/path/PropertyPath;)Lio/github/airflux/serialization/core/path/PropertyPaths;
	public static final fun or (Lio/github/airflux/serialization/core/path/PropertyPaths;Lio/github/airflux/serialization/core/path/PropertyPaths;)Lio/github/airflux/serialization/core/path/PropertyPaths;
	public static final fun or (Ljava/lang/String;Ljava/lang/String;)Lio/github/airflux/serialization/core/path/PropertyPaths;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/ArrayReaderBuilder : io/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayReaderValidation {
	public fun validation (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/builder/ArrayReaderBuilder$ResultBuilder {
	public abstract fun build (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/ArrayReaderBuilderKt {
	public static final fun arrayReader (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun returns (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec;)Lio/github/airflux/serialization/dsl/reader/array/builder/ArrayReaderBuilder$ResultBuilder;
	public static final fun returns (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayPrefixItemsSpec;Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec;)Lio/github/airflux/serialization/dsl/reader/array/builder/ArrayReaderBuilder$ResultBuilder;
	public static final fun returns (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayPrefixItemsSpec;Z)Lio/github/airflux/serialization/dsl/reader/array/builder/ArrayReaderBuilder$ResultBuilder;
}

public abstract class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec {
	public abstract fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$NonNullable : io/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec {
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$Nullable : io/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec {
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayNonNullableItemSpecKt {
	public static final fun nonNullable (Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$NonNullable;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$NonNullable;Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$NonNullable;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$NonNullable;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$NonNullable;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayNullableItemSpecKt {
	public static final fun nullable (Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$Nullable;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$Nullable;Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$Nullable;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$Nullable;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayPrefixItemsSpec {
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayPrefixItemsSpecKt {
	public static final fun prefixItems (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec;[Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayItemSpec;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/ArrayPrefixItemsSpec;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayReaderValidation {
	public abstract fun validation (Lkotlin/jvm/functions/Function1;)V
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayReaderValidation$Builder {
	public final fun add (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidatorBuilder;)V
	public final fun addAll (Ljava/util/Collection;)V
	public final fun remove (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidatorBuilder;)V
	public final fun removeAll (Ljava/util/Collection;)V
	public final fun unaryMinus (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidatorBuilder;)V
	public final fun unaryMinus (Ljava/util/Collection;)V
	public final fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidatorBuilder;)V
	public final fun unaryPlus (Ljava/util/Collection;)V
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidator {
	public abstract fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidatorBuilder {
	public abstract fun build ()Lio/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidator;
	public abstract fun getKey ()Lio/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidatorBuilder$Key;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidatorBuilder$Key {
}

public final class io/github/airflux/serialization/dsl/reader/env/exception/ExceptionsHandlerBuilder {
	public fun <init> ()V
	public final fun exception (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function3;)V
}

public final class io/github/airflux/serialization/dsl/reader/env/exception/ExceptionsHandlerBuilderKt {
	public static final fun exceptionsHandler (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/StructReaderBuilder : io/github/airflux/serialization/dsl/reader/struct/builder/property/StructReaderPropertiesBuilder, io/github/airflux/serialization/dsl/reader/struct/builder/validator/StructReaderValidation {
	public fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Defaultable;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Defaultable;
	public fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Nullable;
	public fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$NullableWithDefault;
	public fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Optional;
	public fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$OptionalWithDefault;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$OptionalWithDefault;
	public fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Required;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Required;
	public fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$RequiredIf;
	public fun validation (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/github/airflux/serialization/dsl/reader/struct/builder/StructReaderBuilder$ResultBuilder {
	public abstract fun build (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/PropertyValues;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/StructReaderBuilderKt {
	public static final fun returns (Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/dsl/reader/struct/builder/StructReaderBuilder$ResultBuilder;
	public static final fun structReader (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/Reader;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/struct/builder/property/PropertyValues {
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Defaultable;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Nullable;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$NullableWithDefault;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Optional;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$OptionalWithDefault;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Required;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$RequiredIf;)Ljava/lang/Object;
	public abstract fun getSize ()I
	public abstract fun isEmpty ()Z
	public abstract fun isNotEmpty ()Z
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Defaultable;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Nullable;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$NullableWithDefault;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Optional;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$OptionalWithDefault;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Required;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$RequiredIf;)Ljava/lang/Object;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperties : java/util/Collection, kotlin/jvm/internal/markers/KMappedMarker {
	public fun add (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public abstract class io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty {
	public abstract fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Defaultable : io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Nullable : io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$NullableWithDefault : io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Optional : io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$OptionalWithDefault : io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Required : io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$RequiredIf : io/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/struct/builder/property/StructReaderPropertiesBuilder {
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Defaultable;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Defaultable;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Nullable;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$NullableWithDefault;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Optional;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$OptionalWithDefault;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$OptionalWithDefault;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Required;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$Required;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperty$RequiredIf;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/ObjectDefaultablePropertySpecKt {
	public static final fun defaultable (Lio/github/airflux/serialization/core/path/PropertyPath;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Defaultable;
	public static final fun defaultable (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Defaultable;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Defaultable;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Defaultable;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Defaultable;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Defaultable;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Defaultable;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/ObjectNullablePropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;
	public static final fun nullable (Lio/github/airflux/serialization/core/path/PropertyPath;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;
	public static final fun nullable (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/ObjectNullableWithDefaultPropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;
	public static final fun nullable (Lio/github/airflux/serialization/core/path/PropertyPath;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;
	public static final fun nullable (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/ObjectOptionalPropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;
	public static final fun optional (Lio/github/airflux/serialization/core/path/PropertyPath;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;
	public static final fun optional (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/ObjectOptionalWithDefaultPropertySpecKt {
	public static final fun optional (Lio/github/airflux/serialization/core/path/PropertyPath;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$OptionalWithDefault;
	public static final fun optional (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$OptionalWithDefault;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$OptionalWithDefault;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$OptionalWithDefault;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$OptionalWithDefault;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$OptionalWithDefault;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$OptionalWithDefault;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/ObjectRequiredIfPropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;
	public static final fun required (Lio/github/airflux/serialization/core/path/PropertyPath;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;
	public static final fun required (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/ObjectRequiredPropertySpecKt {
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Required;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Required;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Required;
	public static final fun required (Lio/github/airflux/serialization/core/path/PropertyPath;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Required;
	public static final fun required (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Required;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Required;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Required;
}

public abstract class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec {
	public abstract fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public abstract fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Defaultable : io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Nullable : io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$NullableWithDefault : io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Optional : io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$OptionalWithDefault : io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$Required : io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec$RequiredIf : io/github/airflux/serialization/dsl/reader/struct/builder/property/specification/StructPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/PropertyPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/struct/builder/validator/StructReaderValidation {
	public abstract fun validation (Lkotlin/jvm/functions/Function1;)V
}

public final class io/github/airflux/serialization/dsl/reader/struct/builder/validator/StructReaderValidation$Builder {
	public final fun add (Lio/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder;)V
	public final fun addAll (Ljava/util/Collection;)V
	public final fun remove (Lio/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder;)V
	public final fun removeAll (Ljava/util/Collection;)V
	public final fun unaryMinus (Lio/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder;)V
	public final fun unaryMinus (Ljava/util/Collection;)V
	public final fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder;)V
	public final fun unaryPlus (Ljava/util/Collection;)V
}

public abstract interface class io/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidator {
	public abstract fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperties;Lio/github/airflux/serialization/core/value/StructNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder {
	public abstract fun build (Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperties;)Lio/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidator;
	public abstract fun getKey ()Lio/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder$Key;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder$Key {
}

public final class io/github/airflux/serialization/dsl/value/ValueNodeOpsKt {
	public static final fun deserialization (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun div (Lio/github/airflux/serialization/core/value/ValueNode;I)Lio/github/airflux/serialization/core/lookup/Lookup;
	public static final fun div (Lio/github/airflux/serialization/core/value/ValueNode;Ljava/lang/String;)Lio/github/airflux/serialization/core/lookup/Lookup;
}

public final class io/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty : java/lang/Enum {
	public static final field RETURN_EMPTY_VALUE Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
	public static final field RETURN_NOTHING Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
	public static final field RETURN_NULL_VALUE Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
	public static fun valueOf (Ljava/lang/String;)Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
	public static fun values ()[Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
}

public final class io/github/airflux/serialization/dsl/writer/WriterOpsKt {
	public static final fun serialization (Ljava/lang/Object;Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/ArrayWriterBuilder {
	public final fun items (Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$NonNullable;)Lio/github/airflux/serialization/dsl/writer/array/builder/ArrayWriterBuilder$WriterBuilder;
	public final fun items (Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$Nullable;)Lio/github/airflux/serialization/dsl/writer/array/builder/ArrayWriterBuilder$WriterBuilder;
	public final fun items (Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$Optional;)Lio/github/airflux/serialization/dsl/writer/array/builder/ArrayWriterBuilder$WriterBuilder;
}

public abstract interface class io/github/airflux/serialization/dsl/writer/array/builder/ArrayWriterBuilder$WriterBuilder {
	public abstract fun build ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/ArrayWriterBuilderKt {
	public static final fun arrayWriter (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/writer/Writer;
}

public abstract class io/github/airflux/serialization/dsl/writer/array/builder/item/ArrayItemWriter {
	public abstract fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/ArrayItemWriter$NonNullable : io/github/airflux/serialization/dsl/writer/array/builder/item/ArrayItemWriter {
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/ArrayItemWriter$Nullable : io/github/airflux/serialization/dsl/writer/array/builder/item/ArrayItemWriter {
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/ArrayItemWriter$Optional : io/github/airflux/serialization/dsl/writer/array/builder/item/ArrayItemWriter {
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public abstract interface class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec {
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$NonNullable : io/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec {
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$Nullable : io/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec {
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$Optional : io/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec {
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayNonNullableItemSpecKt {
	public static final fun nonNullable (Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayNullableItemSpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$Nullable;Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$Optional;
	public static final fun nullable (Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayOptionalItemSpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$Optional;Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$Optional;
	public static final fun optional (Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/ArrayItemSpec$Optional;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/StructWriterBuilder : io/github/airflux/serialization/dsl/writer/struct/builder/property/StructWriterPropertiesBuilder {
	public fun property (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$NonNullable;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty$NonNullable;
	public fun property (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty$Nullable;
	public fun property (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Optional;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty$Optional;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/StructWriterBuilderKt {
	public static final fun structWriter (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperties : java/util/Collection, kotlin/jvm/internal/markers/KMappedMarker {
	public fun add (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public abstract class io/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty {
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty$NonNullable : io/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty {
	public fun getName ()Ljava/lang/String;
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty$Nullable : io/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty {
	public fun getName ()Ljava/lang/String;
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty$Optional : io/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty {
	public fun getName ()Ljava/lang/String;
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public abstract interface class io/github/airflux/serialization/dsl/writer/struct/builder/property/StructWriterPropertiesBuilder {
	public abstract fun property (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$NonNullable;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty$NonNullable;
	public abstract fun property (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty$Nullable;
	public abstract fun property (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Optional;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/StructProperty$Optional;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/property/specification/ObjectNonNullablePropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$NonNullable;Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Optional;
	public static final fun nonNullable (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/property/specification/ObjectNullablePropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Nullable;Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Optional;
	public static final fun nullable (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/property/specification/ObjectOptionalPropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Optional;Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Optional;
	public static final fun optional (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Optional;
}

public abstract interface class io/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec {
	public abstract fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$NonNullable : io/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec {
	public final fun getFrom ()Lkotlin/jvm/functions/Function1;
	public fun getName ()Ljava/lang/String;
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Nullable : io/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec {
	public final fun getFrom ()Lkotlin/jvm/functions/Function1;
	public fun getName ()Ljava/lang/String;
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec$Optional : io/github/airflux/serialization/dsl/writer/struct/builder/property/specification/StructPropertySpec {
	public final fun getFrom ()Lkotlin/jvm/functions/Function1;
	public fun getName ()Ljava/lang/String;
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/reader/BigDecimalReaderKt {
	public static final fun bigDecimalReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/BooleanReaderKt {
	public static final fun booleanReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/ByteReaderKt {
	public static final fun byteReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/IntReaderKt {
	public static final fun intReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/LongReaderKt {
	public static final fun longReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/ShortReaderKt {
	public static final fun shortReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/StringReaderKt {
	public static final fun stringReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/validator/array/IsNotEmptyArrayValidator : io/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/array/IsNotEmptyArrayValidator$ErrorBuilder {
	public abstract fun isNotEmptyArrayError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/array/MaxItemsArrayValidator : io/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/array/MaxItemsArrayValidator$ErrorBuilder {
	public abstract fun maxItemsArrayError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/array/MinItemsArrayValidator : io/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/array/MinItemsArrayValidator$ErrorBuilder {
	public abstract fun minItemsArrayError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/array/StdArrayValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/array/StdArrayValidator;
	public final fun isNotEmpty ()Lio/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidatorBuilder;
	public final fun maxItems (I)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidatorBuilder;
	public final fun minItems (I)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/ArrayValidatorBuilder;
}

public final class io/github/airflux/serialization/std/validator/condition/ConditionValidatorsKt {
	public static final fun applyIf (Lio/github/airflux/serialization/core/reader/validator/Validator;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public static final fun applyIfNotNull (Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/core/reader/validator/Validator;
}

public final class io/github/airflux/serialization/std/validator/number/ExclusiveMaximumNumberValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/number/ExclusiveMaximumNumberValidator$ErrorBuilder {
	public abstract fun exclusiveMaximumNumberError (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/number/ExclusiveMinimumNumberValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/number/ExclusiveMinimumNumberValidator$ErrorBuilder {
	public abstract fun exclusiveMinimumNumberError (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/number/MaximumNumberValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/number/MaximumNumberValidator$ErrorBuilder {
	public abstract fun maximumNumberError (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/number/MinimumNumberValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/number/MinimumNumberValidator$ErrorBuilder {
	public abstract fun minimumNumberError (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/number/StdNumberValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/number/StdNumberValidator;
	public final fun exclusiveMaximum (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun exclusiveMinimum (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun maximum (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun minimum (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/Validator;
}

public final class io/github/airflux/serialization/std/validator/string/IsAStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/IsAStringValidator$ErrorBuilder {
	public abstract fun isAStringError (Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/IsNotBlankStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/IsNotBlankStringValidator$ErrorBuilder {
	public abstract fun isNotBlankStringError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/IsNotEmptyStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/IsNotEmptyStringValidator$ErrorBuilder {
	public abstract fun isNotEmptyStringError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/MaxLengthStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/MaxLengthStringValidator$ErrorBuilder {
	public abstract fun maxLengthStringError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/MinLengthStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/MinLengthStringValidator$ErrorBuilder {
	public abstract fun minLengthStringError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/PatternStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/PatternStringValidator$ErrorBuilder {
	public abstract fun patternStringError (Ljava/lang/String;Lkotlin/text/Regex;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/StdStringValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/string/StdStringValidator;
	public final fun isA (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun isNotBlank ()Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun isNotEmpty ()Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun maxLength (I)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun minLength (I)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun pattern (Lkotlin/text/Regex;)Lio/github/airflux/serialization/core/reader/validator/Validator;
}

public final class io/github/airflux/serialization/std/validator/struct/AdditionalPropertiesStructValidator : io/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperties;Lio/github/airflux/serialization/core/value/StructNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/struct/AdditionalPropertiesStructValidator$ErrorBuilder {
	public abstract fun additionalPropertiesStructError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/struct/IsNotEmptyStructValidator : io/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperties;Lio/github/airflux/serialization/core/value/StructNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/struct/IsNotEmptyStructValidator$ErrorBuilder {
	public abstract fun isNotEmptyStructError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/struct/MaxPropertiesStructValidator : io/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperties;Lio/github/airflux/serialization/core/value/StructNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/struct/MaxPropertiesStructValidator$ErrorBuilder {
	public abstract fun maxPropertiesStructError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/struct/MinPropertiesStructValidator : io/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/dsl/reader/struct/builder/property/StructProperties;Lio/github/airflux/serialization/core/value/StructNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/struct/MinPropertiesStructValidator$ErrorBuilder {
	public abstract fun minPropertiesStructError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/struct/StdStructValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/struct/StdStructValidator;
	public final fun additionalProperties ()Lio/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder;
	public final fun isNotEmpty ()Lio/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder;
	public final fun maxProperties (I)Lio/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder;
	public final fun minProperties (I)Lio/github/airflux/serialization/dsl/reader/struct/builder/validator/StructValidatorBuilder;
}

public final class io/github/airflux/serialization/std/writer/BigDecimalWriterKt {
	public static final fun bigDecimalWriter (Z)Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/BooleanWriterKt {
	public static final fun booleanWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/ByteWriterKt {
	public static final fun byteWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/IntWriterKt {
	public static final fun intWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/LongWriterKt {
	public static final fun longWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/ShortWriterKt {
	public static final fun shortWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/StringWriterKt {
	public static final fun stringWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

