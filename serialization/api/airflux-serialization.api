public final class io/github/airflux/serialization/core/DeserializationKt {
	public static final fun deserialization (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/SerializationKt {
	public static final fun serialization (Ljava/lang/Object;Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/core/common/IdentityKt {
	public static final fun identity (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class io/github/airflux/serialization/core/location/Location {
	public static final field Companion Lio/github/airflux/serialization/core/location/Location$Companion;
	public final fun append (I)Lio/github/airflux/serialization/core/location/Location;
	public final fun append (Lio/github/airflux/serialization/core/path/PropertyPath$Element;)Lio/github/airflux/serialization/core/location/Location;
	public final fun append (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/location/Location;
	public final fun append (Ljava/lang/String;)Lio/github/airflux/serialization/core/location/Location;
	public final fun append-X_QWoOM (Ljava/util/List;)Lio/github/airflux/serialization/core/location/Location;
	public abstract fun isEmpty ()Z
}

public final class io/github/airflux/serialization/core/location/Location$Companion {
	public final fun foldLeft (Ljava/lang/Object;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun foldRight (Ljava/lang/Object;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun getEmpty ()Lio/github/airflux/serialization/core/location/Location;
}

public abstract class io/github/airflux/serialization/core/lookup/LookupResult {
	public final fun apply (I)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public abstract fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public abstract fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public final fun apply (Ljava/lang/String;)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public abstract fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
}

public final class io/github/airflux/serialization/core/lookup/LookupResult$Defined : io/github/airflux/serialization/core/lookup/LookupResult {
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ValueNode;)V
	public fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public final fun component1 ()Lio/github/airflux/serialization/core/location/Location;
	public final fun component2 ()Lio/github/airflux/serialization/core/value/ValueNode;
	public final fun copy (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ValueNode;)Lio/github/airflux/serialization/core/lookup/LookupResult$Defined;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/lookup/LookupResult$Defined;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ValueNode;ILjava/lang/Object;)Lio/github/airflux/serialization/core/lookup/LookupResult$Defined;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
	public final fun getValue ()Lio/github/airflux/serialization/core/value/ValueNode;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/airflux/serialization/core/lookup/LookupResult$Undefined : io/github/airflux/serialization/core/lookup/LookupResult {
	public fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public fun apply (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/LookupResult;
}

public final class io/github/airflux/serialization/core/lookup/LookupResult$Undefined$InvalidType : io/github/airflux/serialization/core/lookup/LookupResult$Undefined {
	public fun <init> (Ljava/lang/Iterable;Ljava/lang/String;Lio/github/airflux/serialization/core/location/Location;)V
	public final fun component1 ()Ljava/lang/Iterable;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lio/github/airflux/serialization/core/location/Location;
	public final fun copy (Ljava/lang/Iterable;Ljava/lang/String;Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/lookup/LookupResult$Undefined$InvalidType;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/lookup/LookupResult$Undefined$InvalidType;Ljava/lang/Iterable;Ljava/lang/String;Lio/github/airflux/serialization/core/location/Location;ILjava/lang/Object;)Lio/github/airflux/serialization/core/lookup/LookupResult$Undefined$InvalidType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActual ()Ljava/lang/String;
	public final fun getExpected ()Ljava/lang/Iterable;
	public fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/lookup/LookupResult$Undefined$PathMissing : io/github/airflux/serialization/core/lookup/LookupResult$Undefined {
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/location/Location;
	public final fun copy (Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/lookup/LookupResult$Undefined$PathMissing;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/lookup/LookupResult$Undefined$PathMissing;Lio/github/airflux/serialization/core/location/Location;ILjava/lang/Object;)Lio/github/airflux/serialization/core/lookup/LookupResult$Undefined$PathMissing;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/lookup/LookupResultKt {
	public static final fun lookup (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public static final fun lookup (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public static final fun lookup-2Fp5Jps (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/location/Location;Ljava/util/List;)Lio/github/airflux/serialization/core/lookup/LookupResult;
}

public final class io/github/airflux/serialization/core/path/PropertyPath {
	public static final field Companion Lio/github/airflux/serialization/core/path/PropertyPath$Companion;
	public static final fun append-xU09Edo (Ljava/util/List;I)Ljava/util/List;
	public static final fun append-xU09Edo (Ljava/util/List;Lio/github/airflux/serialization/core/path/PropertyPath$Element;)Ljava/util/List;
	public static final fun append-xU09Edo (Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
	public static final synthetic fun box-impl (Ljava/util/List;)Lio/github/airflux/serialization/core/path/PropertyPath;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public final fun getElements ()Ljava/util/List;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
}

public final class io/github/airflux/serialization/core/path/PropertyPath$Companion {
	public final fun invoke-xU09Edo (I)Ljava/util/List;
	public final fun invoke-xU09Edo (Lio/github/airflux/serialization/core/path/PropertyPath$Element;)Ljava/util/List;
	public final fun invoke-xU09Edo (Ljava/lang/String;)Ljava/util/List;
}

public abstract class io/github/airflux/serialization/core/path/PropertyPath$Element {
}

public final class io/github/airflux/serialization/core/path/PropertyPath$Element$Idx : io/github/airflux/serialization/core/path/PropertyPath$Element {
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;IILjava/lang/Object;)Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/PropertyPath$Element$Key : io/github/airflux/serialization/core/path/PropertyPath$Element {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;Ljava/lang/String;ILjava/lang/Object;)Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/PropertyPaths {
	public static final field Companion Lio/github/airflux/serialization/core/path/PropertyPaths$Companion;
	public static final fun append-4VOhdFQ (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public static final fun append-OiI3FfU (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public static final synthetic fun box-impl (Ljava/util/List;)Lio/github/airflux/serialization/core/path/PropertyPaths;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public static final fun fold-impl (Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun getItems ()Ljava/util/List;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
}

public final class io/github/airflux/serialization/core/path/PropertyPaths$Companion {
	public final fun invoke-4VOhdFQ (Ljava/util/List;)Ljava/util/List;
	public final fun invoke-IPqbhm0 (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
}

public abstract interface class io/github/airflux/serialization/core/reader/Reader {
	public fun map (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/Reader;
	public abstract fun read (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ValueNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/ReaderKt {
	public static final fun filter (Lio/github/airflux/serialization/core/reader/Reader;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun flatMapResult (Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun or (Lio/github/airflux/serialization/core/reader/Reader;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun validation (Lio/github/airflux/serialization/core/reader/Reader;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/core/reader/array/ArrayPropertyReaderKt {
	public static final fun readArray (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readArray (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;Ljava/util/List;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readArray (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;Ljava/util/List;Z)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/env/ReaderEnv {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;)V
	public synthetic fun <init> (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getContext ()Ljava/lang/Object;
	public final fun getErrorBuilders ()Ljava/lang/Object;
	public final fun getExceptionsHandler ()Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;
	public final fun getOptions ()Ljava/lang/Object;
}

public abstract interface class io/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler {
	public abstract fun handle (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Throwable;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/env/option/FailFastOption {
	public abstract fun getFailFast ()Z
}

public abstract interface class io/github/airflux/serialization/core/reader/error/AdditionalItemsErrorBuilder {
	public abstract fun additionalItemsError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/error/InvalidTypeErrorBuilder {
	public abstract fun invalidTypeError (Ljava/lang/Iterable;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/error/PathMissingErrorBuilder {
	public abstract fun pathMissingError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/error/ValueCastErrorBuilder {
	public abstract fun valueCastError (Ljava/lang/String;Lkotlin/reflect/KClass;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/predicate/ReaderPredicate {
	public abstract fun test (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Z
}

public final class io/github/airflux/serialization/core/reader/predicate/ReaderPredicateKt {
	public static final fun and (Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;
	public static final fun or (Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;
}

public abstract class io/github/airflux/serialization/core/reader/result/ReaderResult {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/ReaderResult$Companion;
	public final fun flatMap (Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public final fun map (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Companion {
}

public abstract interface class io/github/airflux/serialization/core/reader/result/ReaderResult$Error {
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Errors {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors$Companion;
	public static final synthetic fun box-impl (Ljava/util/List;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Errors;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public final fun getItems ()Ljava/util/List;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public static final fun plus-1kztD_Y (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Errors$Companion {
	public final fun invoke-D7fgQ4M (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;)Ljava/util/List;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Failure : io/github/airflux/serialization/core/reader/result/ReaderResult {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Companion;
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;)V
	public synthetic fun <init> (Lio/github/airflux/serialization/core/location/Location;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCauses ()Ljava/util/List;
	public fun hashCode ()I
	public final fun plus (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Cause {
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;)V
	public synthetic fun <init> (Lio/github/airflux/serialization/core/location/Location;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/location/Location;
	public final fun component2-9plQLI0 ()Ljava/util/List;
	public final fun copy-wrADaH0 (Lio/github/airflux/serialization/core/location/Location;Ljava/util/List;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Cause;
	public static synthetic fun copy-wrADaH0$default (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Cause;Lio/github/airflux/serialization/core/location/Location;Ljava/util/List;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Cause;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getErrors-9plQLI0 ()Ljava/util/List;
	public final fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Failure$Companion {
	public final fun merge (Ljava/util/Collection;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResult$Success : io/github/airflux/serialization/core/reader/result/ReaderResult {
	public fun <init> (Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/location/Location;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Success;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Success;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Success;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLocation ()Lio/github/airflux/serialization/core/location/Location;
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResultKt {
	public static final fun failure (Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun fold (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun getOrElse (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static final fun getOrHandle (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun getOrNull (Lio/github/airflux/serialization/core/reader/result/ReaderResult;)Ljava/lang/Object;
	public static final fun orElse (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun orThrow (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun recovery (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun success (Ljava/lang/Object;Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun withCatching (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/result/ReaderResultOpsKt {
	public static final fun filter (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun validation (Lio/github/airflux/serialization/core/reader/result/ReaderResult;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/struct/DefaultablePropertyReaderKt {
	public static final fun readWithDefault (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/lookup/LookupResult;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/struct/OptionalPropertyReaderKt {
	public static final fun readOptional (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/lookup/LookupResult;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/struct/OptionalWithDefaultPropertyReaderKt {
	public static final fun readOptional (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/lookup/LookupResult;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/reader/struct/RequiredPropertyReaderKt {
	public static final fun readRequired (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/lookup/LookupResult;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public abstract interface class io/github/airflux/serialization/core/reader/validator/Validator {
	public abstract fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public final class io/github/airflux/serialization/core/reader/validator/ValidatorKt {
	public static final fun and (Lio/github/airflux/serialization/core/reader/validator/Validator;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public static final fun or (Lio/github/airflux/serialization/core/reader/validator/Validator;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/core/reader/validator/Validator;
}

public final class io/github/airflux/serialization/core/value/ArrayNode : io/github/airflux/serialization/core/value/ValueNode, java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/serialization/core/value/ArrayNode$Companion;
	public static final field nameOfType Ljava/lang/String;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (I)Lio/github/airflux/serialization/core/value/ValueNode;
	public final fun get (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Idx;)Lio/github/airflux/serialization/core/value/ValueNode;
	public fun getNameOfType ()Ljava/lang/String;
	public final fun getSize ()I
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/ArrayNode$Companion {
	public final fun invoke ([Lio/github/airflux/serialization/core/value/ValueNode;)Lio/github/airflux/serialization/core/value/ArrayNode;
}

public abstract class io/github/airflux/serialization/core/value/BooleanNode : io/github/airflux/serialization/core/value/ValueNode {
	public static final field Companion Lio/github/airflux/serialization/core/value/BooleanNode$Companion;
	public static final field nameOfType Ljava/lang/String;
	public synthetic fun <init> (ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getGet ()Z
	public fun getNameOfType ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/BooleanNode$Companion {
	public final fun valueOf (Z)Lio/github/airflux/serialization/core/value/BooleanNode;
}

public final class io/github/airflux/serialization/core/value/BooleanNode$False : io/github/airflux/serialization/core/value/BooleanNode {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/BooleanNode$False;
}

public final class io/github/airflux/serialization/core/value/BooleanNode$True : io/github/airflux/serialization/core/value/BooleanNode {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/BooleanNode$True;
}

public final class io/github/airflux/serialization/core/value/NullNode : io/github/airflux/serialization/core/value/ValueNode {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/NullNode;
	public fun getNameOfType ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/airflux/serialization/core/value/NumericNode : io/github/airflux/serialization/core/value/ValueNode {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/NumericNode$Integer : io/github/airflux/serialization/core/value/NumericNode {
	public static final field Companion Lio/github/airflux/serialization/core/value/NumericNode$Integer$Companion;
	public static final field nameOfType Ljava/lang/String;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getNameOfType ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/NumericNode$Integer$Companion {
	public final fun valueOrNullOf (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/NumericNode$Integer;
}

public final class io/github/airflux/serialization/core/value/NumericNode$Number : io/github/airflux/serialization/core/value/NumericNode {
	public static final field Companion Lio/github/airflux/serialization/core/value/NumericNode$Number$Companion;
	public static final field nameOfType Ljava/lang/String;
	public fun <init> (Ljava/lang/String;)V
	public fun getNameOfType ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/NumericNode$Number$Companion {
	public final fun valueOrNullOf (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/NumericNode$Number;
}

public final class io/github/airflux/serialization/core/value/StringNode : io/github/airflux/serialization/core/value/ValueNode {
	public static final field Companion Lio/github/airflux/serialization/core/value/StringNode$Companion;
	public static final field nameOfType Ljava/lang/String;
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun getNameOfType ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/StringNode$Companion {
}

public final class io/github/airflux/serialization/core/value/StructNode : io/github/airflux/serialization/core/value/ValueNode, java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/serialization/core/value/StructNode$Companion;
	public static final field nameOfType Ljava/lang/String;
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lio/github/airflux/serialization/core/path/PropertyPath$Element$Key;)Lio/github/airflux/serialization/core/value/ValueNode;
	public final fun get (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/ValueNode;
	public final fun getCount ()I
	public fun getNameOfType ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/StructNode$Companion {
	public final fun invoke ([Lkotlin/Pair;)Lio/github/airflux/serialization/core/value/StructNode;
}

public abstract class io/github/airflux/serialization/core/value/ValueNode {
	public abstract fun getNameOfType ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/ValueNodeKt {
	public static final fun valueOf (Lio/github/airflux/serialization/core/value/NumericNode$Integer$Companion;B)Lio/github/airflux/serialization/core/value/NumericNode$Integer;
	public static final fun valueOf (Lio/github/airflux/serialization/core/value/NumericNode$Integer$Companion;I)Lio/github/airflux/serialization/core/value/NumericNode$Integer;
	public static final fun valueOf (Lio/github/airflux/serialization/core/value/NumericNode$Integer$Companion;J)Lio/github/airflux/serialization/core/value/NumericNode$Integer;
	public static final fun valueOf (Lio/github/airflux/serialization/core/value/NumericNode$Integer$Companion;S)Lio/github/airflux/serialization/core/value/NumericNode$Integer;
}

public final class io/github/airflux/serialization/core/value/ValueNodeOpsKt {
	public static final fun readAsArray (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readAsBoolean (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readAsInteger (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readAsNumber (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readAsString (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
	public static final fun readAsStruct (Lio/github/airflux/serialization/core/value/ValueNode;Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/core/writer/NonNullableValueWriterKt {
	public static final fun writeNonNullable (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/writer/Writer;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/core/writer/NullableValueWriterKt {
	public static final fun writeNullable (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/writer/Writer;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public abstract interface class io/github/airflux/serialization/core/writer/Writer {
	public abstract fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/core/writer/env/WriterEnv {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lio/github/airflux/serialization/core/writer/env/WriterEnv;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Ljava/lang/Object;ILjava/lang/Object;)Lio/github/airflux/serialization/core/writer/env/WriterEnv;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContext ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/airflux/serialization/core/writer/env/option/WriterActionBuilderIfResultIsEmptyOption {
	public abstract fun getWriterActionIfResultIsEmpty ()Lio/github/airflux/serialization/core/writer/env/option/WriterActionIfResultIsEmpty;
}

public final class io/github/airflux/serialization/core/writer/env/option/WriterActionIfResultIsEmpty : java/lang/Enum {
	public static final field RETURN_EMPTY_VALUE Lio/github/airflux/serialization/core/writer/env/option/WriterActionIfResultIsEmpty;
	public static final field RETURN_NOTHING Lio/github/airflux/serialization/core/writer/env/option/WriterActionIfResultIsEmpty;
	public static final field RETURN_NULL_VALUE Lio/github/airflux/serialization/core/writer/env/option/WriterActionIfResultIsEmpty;
	public static fun valueOf (Ljava/lang/String;)Lio/github/airflux/serialization/core/writer/env/option/WriterActionIfResultIsEmpty;
	public static fun values ()[Lio/github/airflux/serialization/core/writer/env/option/WriterActionIfResultIsEmpty;
}

public abstract interface class io/github/airflux/serialization/core/writer/predicate/WriterPredicate {
	public fun and (Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;
	public fun or (Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;
	public abstract fun test (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Z
}

public abstract interface annotation class io/github/airflux/serialization/dsl/AirfluxMarker : java/lang/annotation/Annotation {
}

public final class io/github/airflux/serialization/dsl/location/LocationKt {
	public static final fun div (Lio/github/airflux/serialization/core/location/Location;I)Lio/github/airflux/serialization/core/location/Location;
	public static final fun div (Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/path/PropertyPath$Element;)Lio/github/airflux/serialization/core/location/Location;
	public static final fun div (Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/location/Location;
}

public final class io/github/airflux/serialization/dsl/lookup/LookupKt {
	public static final fun div (Lio/github/airflux/serialization/core/lookup/LookupResult;I)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public static final fun div (Lio/github/airflux/serialization/core/lookup/LookupResult;Ljava/lang/String;)Lio/github/airflux/serialization/core/lookup/LookupResult;
}

public final class io/github/airflux/serialization/dsl/path/PropertyPathKt {
	public static final fun div (Lio/github/airflux/serialization/core/path/PropertyPath$Companion;I)Ljava/util/List;
	public static final fun div (Lio/github/airflux/serialization/core/path/PropertyPath$Companion;Ljava/lang/String;)Ljava/util/List;
	public static final fun div-oKz-c5o (Ljava/util/List;I)Ljava/util/List;
	public static final fun div-oKz-c5o (Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
}

public final class io/github/airflux/serialization/dsl/path/PropertyPathsKt {
	public static final fun or (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
	public static final fun or-NLAiOLs (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public static final fun or-pOToWBc (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
}

public final class io/github/airflux/serialization/dsl/reader/array/ArrayReader : io/github/airflux/serialization/core/reader/Reader {
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/functions/Function3;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun read (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ValueNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/dsl/reader/array/ArrayReader$Builder {
	public fun <init> ()V
	public final fun build (Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec;)Lio/github/airflux/serialization/core/reader/Reader;
	public final fun build (Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayPrefixItemsSpec;Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec;)Lio/github/airflux/serialization/core/reader/Reader;
	public final fun build (Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayPrefixItemsSpec;Z)Lio/github/airflux/serialization/core/reader/Reader;
	public final fun validation (Lio/github/airflux/serialization/dsl/reader/array/validator/ArrayValidatorBuilder;[Lio/github/airflux/serialization/dsl/reader/array/validator/ArrayValidatorBuilder;)V
	public final fun validation (Ljava/util/List;)V
}

public final class io/github/airflux/serialization/dsl/reader/array/ArrayReaderKt {
	public static final fun arrayReader (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun returns (Lio/github/airflux/serialization/dsl/reader/array/ArrayReader$Builder;Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun returns (Lio/github/airflux/serialization/dsl/reader/array/ArrayReader$Builder;Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayPrefixItemsSpec;Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun returns (Lio/github/airflux/serialization/dsl/reader/array/ArrayReader$Builder;Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayPrefixItemsSpec;Z)Lio/github/airflux/serialization/core/reader/Reader;
}

public abstract class io/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec {
	public abstract fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$NonNullable : io/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec {
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$Nullable : io/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec {
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/array/item/specification/ArrayNonNullableItemSpecKt {
	public static final fun nonNullable (Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$NonNullable;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$NonNullable;Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$NonNullable;)Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$NonNullable;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$NonNullable;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/reader/array/item/specification/ArrayNullableItemSpecKt {
	public static final fun nullable (Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$Nullable;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$Nullable;Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$Nullable;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$Nullable;Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/reader/array/item/specification/ArrayPrefixItemsSpec {
}

public final class io/github/airflux/serialization/dsl/reader/array/item/specification/ArrayPrefixItemsSpecKt {
	public static final fun prefixItems (Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec;[Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayItemSpec;)Lio/github/airflux/serialization/dsl/reader/array/item/specification/ArrayPrefixItemsSpec;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/validator/ArrayValidator {
	public abstract fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/validator/ArrayValidatorBuilder {
	public abstract fun build ()Lio/github/airflux/serialization/dsl/reader/array/validator/ArrayValidator;
}

public final class io/github/airflux/serialization/dsl/reader/env/exception/ExceptionsHandlerBuilder {
	public fun <init> ()V
	public final fun exception (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function3;)V
}

public final class io/github/airflux/serialization/dsl/reader/env/exception/ExceptionsHandlerBuilderKt {
	public static final fun exceptionsHandler (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/env/exception/ExceptionsHandler;
}

public final class io/github/airflux/serialization/dsl/reader/struct/StructReader : io/github/airflux/serialization/core/reader/Reader {
	public fun <init> (Ljava/util/List;Ljava/util/List;Lkotlin/jvm/functions/Function3;)V
	public fun read (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ValueNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult;
}

public final class io/github/airflux/serialization/dsl/reader/struct/StructReader$Builder {
	public fun <init> ()V
	public final fun build (Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/Reader;
	public final fun property (Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable;)Lio/github/airflux/serialization/dsl/reader/struct/property/StructProperty$NonNullable;
	public final fun property (Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/struct/property/StructProperty$Nullable;
	public final fun validation (Lio/github/airflux/serialization/dsl/reader/struct/validator/StructValidatorBuilder;[Lio/github/airflux/serialization/dsl/reader/struct/validator/StructValidatorBuilder;)V
	public final fun validation (Ljava/util/List;)V
}

public final class io/github/airflux/serialization/dsl/reader/struct/StructReaderKt {
	public static final fun returns (Lio/github/airflux/serialization/dsl/reader/struct/StructReader$Builder;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/Reader;
	public static final fun structReader (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/Reader;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/struct/property/PropertyValues {
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/struct/property/StructProperty$NonNullable;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/struct/property/StructProperty$Nullable;)Ljava/lang/Object;
	public abstract fun getSize ()I
	public abstract fun isEmpty ()Z
	public abstract fun isNotEmpty ()Z
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/struct/property/StructProperty$NonNullable;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/struct/property/StructProperty$Nullable;)Ljava/lang/Object;
}

public abstract class io/github/airflux/serialization/dsl/reader/struct/property/StructProperty {
	public abstract fun getPath-RLWyd3Y ()Ljava/util/List;
}

public final class io/github/airflux/serialization/dsl/reader/struct/property/StructProperty$NonNullable : io/github/airflux/serialization/dsl/reader/struct/property/StructProperty {
	public fun getPath-RLWyd3Y ()Ljava/util/List;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/property/StructProperty$Nullable : io/github/airflux/serialization/dsl/reader/struct/property/StructProperty {
	public fun getPath-RLWyd3Y ()Ljava/util/List;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/property/specification/DefaultablePropertySpecKt {
	public static final fun defaultable (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable;
	public static final fun defaultable-S_Qvnos (Ljava/util/List;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/reader/struct/property/specification/OptionalPropertySpecKt {
	public static final fun optional (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$Nullable;
	public static final fun optional-oKz-c5o (Ljava/util/List;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/reader/struct/property/specification/OptionalWithDefaultPropertySpecKt {
	public static final fun optional (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable;
	public static final fun optional-S_Qvnos (Ljava/util/List;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/reader/struct/property/specification/RequiredIfPropertySpecKt {
	public static final fun required (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$Nullable;
	public static final fun required-S_Qvnos (Ljava/util/List;Lio/github/airflux/serialization/core/reader/Reader;Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/reader/struct/property/specification/RequiredPropertySpecKt {
	public static final fun required (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable;
	public static final fun required-oKz-c5o (Ljava/util/List;Lio/github/airflux/serialization/core/reader/Reader;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable;
}

public abstract class io/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec {
	public abstract fun getPath-RLWyd3Y ()Ljava/util/List;
	public abstract fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable : io/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec {
	public fun getPath-RLWyd3Y ()Ljava/util/List;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
	public final fun or (Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable;
	public final fun validation (Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$Nullable : io/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec {
	public final fun filter (Lio/github/airflux/serialization/core/reader/predicate/ReaderPredicate;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$Nullable;
	public fun getPath-RLWyd3Y ()Ljava/util/List;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/Reader;
	public final fun or (Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$Nullable;
	public final fun validation (Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/dsl/reader/struct/property/specification/StructPropertySpec$Nullable;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/struct/validator/StructValidator {
	public abstract fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/util/List;Lio/github/airflux/serialization/core/value/StructNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/struct/validator/StructValidatorBuilder {
	public abstract fun build (Ljava/util/List;)Lio/github/airflux/serialization/dsl/reader/struct/validator/StructValidator;
}

public final class io/github/airflux/serialization/dsl/value/ValueNodeKt {
	public static final fun div (Lio/github/airflux/serialization/core/value/ValueNode;I)Lio/github/airflux/serialization/core/lookup/LookupResult;
	public static final fun div (Lio/github/airflux/serialization/core/value/ValueNode;Ljava/lang/String;)Lio/github/airflux/serialization/core/lookup/LookupResult;
}

public final class io/github/airflux/serialization/dsl/writer/array/ArrayWriter : io/github/airflux/serialization/core/writer/Writer {
	public synthetic fun <init> (Lio/github/airflux/serialization/dsl/writer/array/item/ArrayItemWriter;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/value/ValueNode;
	public synthetic fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/array/ArrayWriter$Builder {
	public fun <init> ()V
	public final fun build (Lio/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec$NonNullable;)Lio/github/airflux/serialization/core/writer/Writer;
	public final fun build (Lio/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec$Nullable;)Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/array/ArrayWriterKt {
	public static final fun arrayWriter (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/writer/Writer;
	public static final fun items (Lio/github/airflux/serialization/dsl/writer/array/ArrayWriter$Builder;Lio/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec$NonNullable;)Lio/github/airflux/serialization/core/writer/Writer;
	public static final fun items (Lio/github/airflux/serialization/dsl/writer/array/ArrayWriter$Builder;Lio/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec$Nullable;)Lio/github/airflux/serialization/core/writer/Writer;
}

public abstract class io/github/airflux/serialization/dsl/writer/array/item/ArrayItemWriter {
	public abstract fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/array/item/ArrayItemWriter$NonNullable : io/github/airflux/serialization/dsl/writer/array/item/ArrayItemWriter {
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/array/item/ArrayItemWriter$Nullable : io/github/airflux/serialization/dsl/writer/array/item/ArrayItemWriter {
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public abstract interface class io/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec {
}

public final class io/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec$NonNullable : io/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec {
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec$Nullable : io/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec {
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/array/item/specification/NonNullableItemSpecKt {
	public static final fun nonNullable (Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/writer/array/item/specification/NullableItemSpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec$Nullable;Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec$Nullable;
	public static final fun nullable (Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/dsl/writer/array/item/specification/ArrayItemSpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/writer/struct/StructWriter : io/github/airflux/serialization/core/writer/Writer {
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/struct/StructWriter$Builder {
	public fun <init> ()V
	public final fun build ()Lio/github/airflux/serialization/core/writer/Writer;
	public final fun property (Lio/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec$NonNullable;)Lio/github/airflux/serialization/dsl/writer/struct/property/StructProperty$NonNullable;
	public final fun property (Lio/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/writer/struct/property/StructProperty$Nullable;
}

public final class io/github/airflux/serialization/dsl/writer/struct/StructWriterKt {
	public static final fun structWriter (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/writer/Writer;
}

public abstract class io/github/airflux/serialization/dsl/writer/struct/property/StructProperty {
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/struct/property/StructProperty$NonNullable : io/github/airflux/serialization/dsl/writer/struct/property/StructProperty {
	public fun getName ()Ljava/lang/String;
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/struct/property/StructProperty$Nullable : io/github/airflux/serialization/dsl/writer/struct/property/StructProperty {
	public fun getName ()Ljava/lang/String;
	public fun write (Lio/github/airflux/serialization/core/writer/env/WriterEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/ValueNode;
}

public final class io/github/airflux/serialization/dsl/writer/struct/property/specification/NonNullablePropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec$NonNullable;Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec$Nullable;
	public static final fun nonNullable (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/writer/struct/property/specification/NullablePropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec$Nullable;Lio/github/airflux/serialization/core/writer/predicate/WriterPredicate;)Lio/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec$Nullable;
	public static final fun nullable (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/serialization/core/writer/Writer;)Lio/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec$Nullable;
}

public abstract interface class io/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec {
	public abstract fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec$NonNullable : io/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec {
	public final fun getFrom ()Lkotlin/jvm/functions/Function1;
	public fun getName ()Ljava/lang/String;
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec$Nullable : io/github/airflux/serialization/dsl/writer/struct/property/specification/StructPropertySpec {
	public final fun getFrom ()Lkotlin/jvm/functions/Function1;
	public fun getName ()Ljava/lang/String;
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/reader/BigDecimalReaderKt {
	public static final fun bigDecimalReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/BooleanReaderKt {
	public static final fun booleanReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/ByteReaderKt {
	public static final fun byteReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/IntReaderKt {
	public static final fun intReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/LongReaderKt {
	public static final fun longReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/ShortReaderKt {
	public static final fun shortReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/reader/StringReaderKt {
	public static final fun stringReader ()Lio/github/airflux/serialization/core/reader/Reader;
}

public final class io/github/airflux/serialization/std/validator/array/IsNotEmptyArrayValidator : io/github/airflux/serialization/dsl/reader/array/validator/ArrayValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/array/IsNotEmptyArrayValidator$ErrorBuilder {
	public abstract fun isNotEmptyArrayError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/array/MaxItemsArrayValidator : io/github/airflux/serialization/dsl/reader/array/validator/ArrayValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/array/MaxItemsArrayValidator$ErrorBuilder {
	public abstract fun maxItemsArrayError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/array/MinItemsArrayValidator : io/github/airflux/serialization/dsl/reader/array/validator/ArrayValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Lio/github/airflux/serialization/core/value/ArrayNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/array/MinItemsArrayValidator$ErrorBuilder {
	public abstract fun minItemsArrayError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/array/StdArrayValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/array/StdArrayValidator;
	public final fun isNotEmpty ()Lio/github/airflux/serialization/dsl/reader/array/validator/ArrayValidatorBuilder;
	public final fun maxItems (I)Lio/github/airflux/serialization/dsl/reader/array/validator/ArrayValidatorBuilder;
	public final fun minItems (I)Lio/github/airflux/serialization/dsl/reader/array/validator/ArrayValidatorBuilder;
}

public final class io/github/airflux/serialization/std/validator/condition/ConditionValidatorsKt {
	public static final fun applyIf (Lio/github/airflux/serialization/core/reader/validator/Validator;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public static final fun applyIfNotNull (Lio/github/airflux/serialization/core/reader/validator/Validator;)Lio/github/airflux/serialization/core/reader/validator/Validator;
}

public final class io/github/airflux/serialization/std/validator/number/ExclusiveMaximumNumberValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/number/ExclusiveMaximumNumberValidator$ErrorBuilder {
	public abstract fun exclusiveMaximumNumberError (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/number/ExclusiveMinimumNumberValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/number/ExclusiveMinimumNumberValidator$ErrorBuilder {
	public abstract fun exclusiveMinimumNumberError (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/number/MaximumNumberValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/number/MaximumNumberValidator$ErrorBuilder {
	public abstract fun maximumNumberError (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/number/MinimumNumberValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/number/MinimumNumberValidator$ErrorBuilder {
	public abstract fun minimumNumberError (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/number/StdNumberValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/number/StdNumberValidator;
	public final fun exclusiveMaximum (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun exclusiveMinimum (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun maximum (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun minimum (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/Validator;
}

public final class io/github/airflux/serialization/std/validator/property/ForbiddenPropertyValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/property/ForbiddenPropertyValidator$ErrorBuilder {
	public abstract fun forbiddenPropertyError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/property/MandatoryPropertyValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/property/MandatoryPropertyValidator$ErrorBuilder {
	public abstract fun mandatoryPropertyError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/property/StdPropertyValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/property/StdPropertyValidator;
	public final fun forbidden (Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun mandatory (Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/core/reader/validator/Validator;
}

public final class io/github/airflux/serialization/std/validator/string/IsAStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/IsAStringValidator$ErrorBuilder {
	public abstract fun isAStringError (Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/IsNotBlankStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/IsNotBlankStringValidator$ErrorBuilder {
	public abstract fun isNotBlankStringError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/IsNotEmptyStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/IsNotEmptyStringValidator$ErrorBuilder {
	public abstract fun isNotEmptyStringError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/MaxLengthStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/MaxLengthStringValidator$ErrorBuilder {
	public abstract fun maxLengthStringError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/MinLengthStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/MinLengthStringValidator$ErrorBuilder {
	public abstract fun minLengthStringError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/PatternStringValidator : io/github/airflux/serialization/core/reader/validator/Validator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/string/PatternStringValidator$ErrorBuilder {
	public abstract fun patternStringError (Ljava/lang/String;Lkotlin/text/Regex;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/string/StdStringValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/string/StdStringValidator;
	public final fun isA (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun isNotBlank ()Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun isNotEmpty ()Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun maxLength (I)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun minLength (I)Lio/github/airflux/serialization/core/reader/validator/Validator;
	public final fun pattern (Lkotlin/text/Regex;)Lio/github/airflux/serialization/core/reader/validator/Validator;
}

public final class io/github/airflux/serialization/std/validator/struct/AdditionalPropertiesStructValidator : io/github/airflux/serialization/dsl/reader/struct/validator/StructValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/util/List;Lio/github/airflux/serialization/core/value/StructNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/struct/AdditionalPropertiesStructValidator$ErrorBuilder {
	public abstract fun additionalPropertiesStructError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/struct/IsNotEmptyStructValidator : io/github/airflux/serialization/dsl/reader/struct/validator/StructValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/util/List;Lio/github/airflux/serialization/core/value/StructNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/struct/IsNotEmptyStructValidator$ErrorBuilder {
	public abstract fun isNotEmptyStructError ()Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/struct/MaxPropertiesStructValidator : io/github/airflux/serialization/dsl/reader/struct/validator/StructValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/util/List;Lio/github/airflux/serialization/core/value/StructNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/struct/MaxPropertiesStructValidator$ErrorBuilder {
	public abstract fun maxPropertiesStructError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/struct/MinPropertiesStructValidator : io/github/airflux/serialization/dsl/reader/struct/validator/StructValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/env/ReaderEnv;Lio/github/airflux/serialization/core/location/Location;Ljava/util/List;Lio/github/airflux/serialization/core/value/StructNode;)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Failure;
}

public abstract interface class io/github/airflux/serialization/std/validator/struct/MinPropertiesStructValidator$ErrorBuilder {
	public abstract fun minPropertiesStructError (II)Lio/github/airflux/serialization/core/reader/result/ReaderResult$Error;
}

public final class io/github/airflux/serialization/std/validator/struct/StdStructValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/struct/StdStructValidator;
	public final fun additionalProperties ()Lio/github/airflux/serialization/dsl/reader/struct/validator/StructValidatorBuilder;
	public final fun isNotEmpty ()Lio/github/airflux/serialization/dsl/reader/struct/validator/StructValidatorBuilder;
	public final fun maxProperties (I)Lio/github/airflux/serialization/dsl/reader/struct/validator/StructValidatorBuilder;
	public final fun minProperties (I)Lio/github/airflux/serialization/dsl/reader/struct/validator/StructValidatorBuilder;
}

public final class io/github/airflux/serialization/std/writer/BigDecimalWriterKt {
	public static final fun bigDecimalWriter (Z)Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/BooleanWriterKt {
	public static final fun booleanWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/ByteWriterKt {
	public static final fun byteWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/IntWriterKt {
	public static final fun intWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/LongWriterKt {
	public static final fun longWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/ShortWriterKt {
	public static final fun shortWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

public final class io/github/airflux/serialization/std/writer/StringWriterKt {
	public static final fun stringWriter ()Lio/github/airflux/serialization/core/writer/Writer;
}

