public final class io/github/airflux/serialization/core/common/IdentityKt {
	public static final fun identity (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class io/github/airflux/serialization/core/context/JsAbstractContext : io/github/airflux/serialization/core/context/JsContext {
	public fun <init> ()V
	protected final fun add (Lio/github/airflux/serialization/core/context/JsContext$Element;)Ljava/util/Map;
	protected final fun add (Ljava/lang/Iterable;)Ljava/util/Map;
	public fun contains (Lio/github/airflux/serialization/core/context/JsContext$Key;)Z
	protected abstract fun getElements ()Ljava/util/Map;
	public fun getOrNull (Lio/github/airflux/serialization/core/context/JsContext$Key;)Lio/github/airflux/serialization/core/context/JsContext$Element;
	public fun isEmpty ()Z
}

public abstract interface class io/github/airflux/serialization/core/context/JsContext {
	public abstract fun contains (Lio/github/airflux/serialization/core/context/JsContext$Key;)Z
	public abstract fun getOrNull (Lio/github/airflux/serialization/core/context/JsContext$Key;)Lio/github/airflux/serialization/core/context/JsContext$Element;
	public abstract fun isEmpty ()Z
	public fun isNotEmpty ()Z
}

public abstract interface class io/github/airflux/serialization/core/context/JsContext$Element {
	public abstract fun getKey ()Lio/github/airflux/serialization/core/context/JsContext$Key;
	public fun plus (Lio/github/airflux/serialization/core/context/JsContext$Element;)Ljava/util/List;
}

public abstract interface class io/github/airflux/serialization/core/context/JsContext$Key {
}

public abstract class io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderElement {
	public fun <init> (Lio/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey;)V
	public synthetic fun getKey ()Lio/github/airflux/serialization/core/context/JsContext$Key;
	public fun getKey ()Lio/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey;
}

public abstract interface class io/github/airflux/serialization/core/context/error/JsContextErrorBuilderElement : io/github/airflux/serialization/core/context/JsContext$Element {
	public abstract fun getKey ()Lio/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey;
}

public abstract interface class io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey : io/github/airflux/serialization/core/context/JsContext$Key {
	public abstract fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKt {
	public static final fun errorBuilderName (Ljava/lang/Class;)Ljava/lang/String;
	public static final fun get (Lio/github/airflux/serialization/core/context/JsContext;Lio/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey;)Lio/github/airflux/serialization/core/context/error/JsContextErrorBuilderElement;
}

public abstract interface class io/github/airflux/serialization/core/context/option/JsContextOptionElement : io/github/airflux/serialization/core/context/JsContext$Element {
	public abstract fun getKey ()Lio/github/airflux/serialization/core/context/option/JsContextOptionKey;
	public abstract fun getValue ()Ljava/lang/Object;
}

public abstract interface class io/github/airflux/serialization/core/context/option/JsContextOptionKey : io/github/airflux/serialization/core/context/JsContext$Key {
}

public final class io/github/airflux/serialization/core/context/option/JsContextOptionKt {
	public static final fun get (Lio/github/airflux/serialization/core/context/JsContext;Lio/github/airflux/serialization/core/context/option/JsContextOptionKey;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public abstract class io/github/airflux/serialization/core/location/JsLocation {
	public static final field Companion Lio/github/airflux/serialization/core/location/JsLocation$Companion;
	public final fun append (I)Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun append (Lio/github/airflux/serialization/core/path/JsPath;)Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun append (Lio/github/airflux/serialization/core/path/PathElement;)Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun append (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun append (Ljava/lang/String;)Lio/github/airflux/serialization/core/location/JsLocation;
	public abstract fun isEmpty ()Z
}

public final class io/github/airflux/serialization/core/location/JsLocation$Companion {
	public final fun foldLeft (Ljava/lang/Object;Lio/github/airflux/serialization/core/location/JsLocation;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun foldRight (Ljava/lang/Object;Lio/github/airflux/serialization/core/location/JsLocation;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun getEmpty ()Lio/github/airflux/serialization/core/location/JsLocation;
}

public abstract class io/github/airflux/serialization/core/lookup/JsLookup {
	public final fun apply (I)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public abstract fun apply (Lio/github/airflux/serialization/core/path/PathElement$Idx;)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public abstract fun apply (Lio/github/airflux/serialization/core/path/PathElement$Key;)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public final fun apply (Ljava/lang/String;)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public abstract fun getLocation ()Lio/github/airflux/serialization/core/location/JsLocation;
}

public final class io/github/airflux/serialization/core/lookup/JsLookup$Defined : io/github/airflux/serialization/core/lookup/JsLookup {
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)V
	public fun apply (Lio/github/airflux/serialization/core/path/PathElement$Idx;)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public fun apply (Lio/github/airflux/serialization/core/path/PathElement$Key;)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public final fun component1 ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun component2 ()Lio/github/airflux/serialization/core/value/JsValue;
	public final fun copy (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/lookup/JsLookup$Defined;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/lookup/JsLookup$Defined;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;ILjava/lang/Object;)Lio/github/airflux/serialization/core/lookup/JsLookup$Defined;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLocation ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun getValue ()Lio/github/airflux/serialization/core/value/JsValue;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/lookup/JsLookup$Undefined : io/github/airflux/serialization/core/lookup/JsLookup {
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;)V
	public fun apply (Lio/github/airflux/serialization/core/path/PathElement$Idx;)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public fun apply (Lio/github/airflux/serialization/core/path/PathElement$Key;)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public final fun component1 ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun copy (Lio/github/airflux/serialization/core/location/JsLocation;)Lio/github/airflux/serialization/core/lookup/JsLookup$Undefined;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/lookup/JsLookup$Undefined;Lio/github/airflux/serialization/core/location/JsLocation;ILjava/lang/Object;)Lio/github/airflux/serialization/core/lookup/JsLookup$Undefined;
	public fun equals (Ljava/lang/Object;)Z
	public fun getLocation ()Lio/github/airflux/serialization/core/location/JsLocation;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/lookup/JsLookupKt {
	public static final fun lookup (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/path/JsPath;)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public static final fun lookup (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/path/PathElement$Idx;)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public static final fun lookup (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/path/PathElement$Key;)Lio/github/airflux/serialization/core/lookup/JsLookup;
}

public final class io/github/airflux/serialization/core/path/JsPath {
	public static final field Companion Lio/github/airflux/serialization/core/path/JsPath$Companion;
	public fun <init> (I)V
	public fun <init> (Lio/github/airflux/serialization/core/path/PathElement;)V
	public fun <init> (Ljava/lang/String;)V
	public final fun append (I)Lio/github/airflux/serialization/core/path/JsPath;
	public final fun append (Lio/github/airflux/serialization/core/path/PathElement;)Lio/github/airflux/serialization/core/path/JsPath;
	public final fun append (Ljava/lang/String;)Lio/github/airflux/serialization/core/path/JsPath;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getElements ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/JsPath$Companion {
}

public final class io/github/airflux/serialization/core/path/JsPaths {
	public static final field Companion Lio/github/airflux/serialization/core/path/JsPaths$Companion;
	public fun <init> (Lio/github/airflux/serialization/core/path/JsPath;Ljava/util/List;)V
	public fun <init> (Lio/github/airflux/serialization/core/path/JsPath;[Lio/github/airflux/serialization/core/path/JsPath;)V
	public final fun append (Lio/github/airflux/serialization/core/path/JsPath;)Lio/github/airflux/serialization/core/path/JsPaths;
	public final fun append (Lio/github/airflux/serialization/core/path/JsPaths;)Lio/github/airflux/serialization/core/path/JsPaths;
	public final fun fold (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun getItems ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/JsPaths$Companion {
}

public abstract class io/github/airflux/serialization/core/path/PathElement {
}

public final class io/github/airflux/serialization/core/path/PathElement$Idx : io/github/airflux/serialization/core/path/PathElement {
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lio/github/airflux/serialization/core/path/PathElement$Idx;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/path/PathElement$Idx;IILjava/lang/Object;)Lio/github/airflux/serialization/core/path/PathElement$Idx;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/PathElement$Key : io/github/airflux/serialization/core/path/PathElement {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/github/airflux/serialization/core/path/PathElement$Key;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/path/PathElement$Key;Ljava/lang/String;ILjava/lang/Object;)Lio/github/airflux/serialization/core/path/PathElement$Key;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/airflux/serialization/core/reader/JsArrayReader : io/github/airflux/serialization/core/reader/JsReader {
}

public abstract interface class io/github/airflux/serialization/core/reader/JsObjectReader : io/github/airflux/serialization/core/reader/JsReader {
}

public abstract interface class io/github/airflux/serialization/core/reader/JsReader {
	public fun map (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/JsReader;
	public abstract fun read (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/core/reader/JsReaderKt {
	public static final fun filter (Lio/github/airflux/serialization/core/reader/JsReader;Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/core/reader/JsReader;
	public static final fun or (Lio/github/airflux/serialization/core/reader/JsReader;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/JsReader;
	public static final fun validation (Lio/github/airflux/serialization/core/reader/JsReader;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/core/reader/array/ArrayFieldReaderKt {
	public static final fun readArray (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsArray;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun readArray (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsArray;Ljava/util/List;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun readArray (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsArray;Ljava/util/List;Z)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/core/reader/context/JsReaderContext : io/github/airflux/serialization/core/context/JsAbstractContext {
	public synthetic fun <init> (Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun plus (Lio/github/airflux/serialization/core/context/JsContext$Element;)Lio/github/airflux/serialization/core/reader/context/JsReaderContext;
	public final fun plus (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/reader/context/JsReaderContext;
}

public final class io/github/airflux/serialization/core/reader/context/error/AdditionalItemsErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/core/reader/context/error/AdditionalItemsErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/core/reader/context/error/AdditionalItemsErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/context/error/InvalidTypeErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/core/reader/context/error/InvalidTypeErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Lio/github/airflux/serialization/core/value/JsValue$Type;Lio/github/airflux/serialization/core/value/JsValue$Type;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/core/reader/context/error/InvalidTypeErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/context/error/PathMissingErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/core/reader/context/error/PathMissingErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/core/reader/context/error/PathMissingErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/context/error/ValueCastErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/core/reader/context/error/ValueCastErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/String;Lkotlin/reflect/KClass;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/core/reader/context/error/ValueCastErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/context/option/FailFast : io/github/airflux/serialization/core/context/option/JsContextOptionElement {
	public static final field Key Lio/github/airflux/serialization/core/reader/context/option/FailFast$Key;
	public fun <init> (Z)V
	public synthetic fun getKey ()Lio/github/airflux/serialization/core/context/JsContext$Key;
	public fun getKey ()Lio/github/airflux/serialization/core/context/option/JsContextOptionKey;
	public fun getValue ()Ljava/lang/Boolean;
	public synthetic fun getValue ()Ljava/lang/Object;
}

public final class io/github/airflux/serialization/core/reader/context/option/FailFast$Key : io/github/airflux/serialization/core/context/option/JsContextOptionKey {
}

public final class io/github/airflux/serialization/core/reader/context/option/FailFastKt {
	public static final fun getFailFast (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;)Z
}

public final class io/github/airflux/serialization/core/reader/object/NullableFieldReaderKt {
	public static final fun readNullable (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/lookup/JsLookup;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/core/reader/object/NullableWithDefaultFieldReaderKt {
	public static final fun readNullable (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/lookup/JsLookup;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/core/reader/object/OptionalFieldReaderKt {
	public static final fun readOptional (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/lookup/JsLookup;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/core/reader/object/OptionalWithDefaultFieldReaderKt {
	public static final fun readOptional (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/lookup/JsLookup;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/core/reader/object/RequiredFieldReaderKt {
	public static final fun readRequired (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/lookup/JsLookup;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/core/reader/object/WithDefaultFieldReaderKt {
	public static final fun readWithDefault (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/lookup/JsLookup;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public abstract interface class io/github/airflux/serialization/core/reader/predicate/JsPredicate {
	public fun and (Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;
	public fun or (Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;
	public abstract fun test (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Z
}

public abstract interface class io/github/airflux/serialization/core/reader/result/JsError {
}

public final class io/github/airflux/serialization/core/reader/result/JsErrors {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/JsErrors$Companion;
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getItems ()Ljava/util/List;
	public fun hashCode ()I
	public final fun plus (Lio/github/airflux/serialization/core/reader/result/JsErrors;)Lio/github/airflux/serialization/core/reader/result/JsErrors;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/JsErrors$Companion {
	public final fun invoke (Lio/github/airflux/serialization/core/reader/result/JsError;[Lio/github/airflux/serialization/core/reader/result/JsError;)Lio/github/airflux/serialization/core/reader/result/JsErrors;
	public final fun invoke (Ljava/util/List;)Lio/github/airflux/serialization/core/reader/result/JsErrors;
}

public abstract class io/github/airflux/serialization/core/reader/result/JsResult {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/JsResult$Companion;
	public final fun flatMap (Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public final fun map (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/core/reader/result/JsResult$Companion {
}

public final class io/github/airflux/serialization/core/reader/result/JsResult$Failure : io/github/airflux/serialization/core/reader/result/JsResult {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/JsResult$Failure$Companion;
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsError;)V
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsErrors;)V
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCauses ()Ljava/util/List;
	public fun hashCode ()I
	public final fun plus (Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/JsResult$Failure$Cause {
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsError;)V
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsErrors;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun component2 ()Lio/github/airflux/serialization/core/reader/result/JsErrors;
	public final fun copy (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsErrors;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure$Cause;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/reader/result/JsResult$Failure$Cause;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsErrors;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure$Cause;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getErrors ()Lio/github/airflux/serialization/core/reader/result/JsErrors;
	public final fun getLocation ()Lio/github/airflux/serialization/core/location/JsLocation;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/JsResult$Failure$Companion {
	public final fun merge (Ljava/util/Collection;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/core/reader/result/JsResult$Success : io/github/airflux/serialization/core/reader/result/JsResult {
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Success;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/reader/result/JsResult$Success;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Success;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLocation ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/JsResultKt {
	public static final fun failure (Lio/github/airflux/serialization/core/reader/result/JsError;Lio/github/airflux/serialization/core/location/JsLocation;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun fold (Lio/github/airflux/serialization/core/reader/result/JsResult;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun getOrElse (Lio/github/airflux/serialization/core/reader/result/JsResult;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static final fun orElse (Lio/github/airflux/serialization/core/reader/result/JsResult;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun recovery (Lio/github/airflux/serialization/core/reader/result/JsResult;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun success (Ljava/lang/Object;Lio/github/airflux/serialization/core/location/JsLocation;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/core/reader/result/JsResultOpsKt {
	public static final fun filter (Lio/github/airflux/serialization/core/reader/result/JsResult;Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun validation (Lio/github/airflux/serialization/core/reader/result/JsResult;Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public abstract interface class io/github/airflux/serialization/core/reader/validator/JsValidator {
	public abstract fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/core/reader/validator/JsValidatorKt {
	public static final fun and (Lio/github/airflux/serialization/core/reader/validator/JsValidator;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public static final fun or (Lio/github/airflux/serialization/core/reader/validator/JsValidator;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
}

public final class io/github/airflux/serialization/core/value/JsArray : io/github/airflux/serialization/core/value/JsValue, java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/serialization/core/value/JsArray$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public synthetic fun <init> (Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (I)Lio/github/airflux/serialization/core/value/JsValue;
	public final fun get (Lio/github/airflux/serialization/core/path/PathElement$Idx;)Lio/github/airflux/serialization/core/value/JsValue;
	public final fun getSize ()I
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsArray$Companion {
	public final fun invoke ([Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/value/JsArray;
}

public abstract class io/github/airflux/serialization/core/value/JsBoolean : io/github/airflux/serialization/core/value/JsValue {
	public static final field Companion Lio/github/airflux/serialization/core/value/JsBoolean$Companion;
	public synthetic fun <init> (ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getGet ()Z
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsBoolean$Companion {
	public final fun valueOf (Z)Lio/github/airflux/serialization/core/value/JsBoolean;
}

public final class io/github/airflux/serialization/core/value/JsBoolean$False : io/github/airflux/serialization/core/value/JsBoolean {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/JsBoolean$False;
}

public final class io/github/airflux/serialization/core/value/JsBoolean$True : io/github/airflux/serialization/core/value/JsBoolean {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/JsBoolean$True;
}

public final class io/github/airflux/serialization/core/value/JsNull : io/github/airflux/serialization/core/value/JsValue {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/JsNull;
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsNumber : io/github/airflux/serialization/core/value/JsValue {
	public static final field Companion Lio/github/airflux/serialization/core/value/JsNumber$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun hashCode ()I
	public final fun isInteger ()Z
	public final fun isReal ()Z
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsNumber$Companion {
	public final fun valueOf (B)Lio/github/airflux/serialization/core/value/JsNumber;
	public final fun valueOf (I)Lio/github/airflux/serialization/core/value/JsNumber;
	public final fun valueOf (J)Lio/github/airflux/serialization/core/value/JsNumber;
	public final fun valueOf (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/JsNumber;
	public final fun valueOf (S)Lio/github/airflux/serialization/core/value/JsNumber;
}

public final class io/github/airflux/serialization/core/value/JsObject : io/github/airflux/serialization/core/value/JsValue, java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/serialization/core/value/JsObject$Companion;
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lio/github/airflux/serialization/core/path/PathElement$Key;)Lio/github/airflux/serialization/core/value/JsValue;
	public final fun get (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/JsValue;
	public final fun getCount ()I
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun hashCode ()I
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsObject$Companion {
	public final fun invoke ([Lkotlin/Pair;)Lio/github/airflux/serialization/core/value/JsObject;
}

public final class io/github/airflux/serialization/core/value/JsString : io/github/airflux/serialization/core/value/JsValue {
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/airflux/serialization/core/value/JsValue {
	public abstract fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
}

public final class io/github/airflux/serialization/core/value/JsValue$Type : java/lang/Enum {
	public static final field ARRAY Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final field BOOLEAN Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final field NULL Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final field NUMBER Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final field OBJECT Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final field STRING Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static fun valueOf (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static fun values ()[Lio/github/airflux/serialization/core/value/JsValue$Type;
}

public final class io/github/airflux/serialization/core/value/JsValueOpsKt {
	public static final fun readAsArray (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun readAsBoolean (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun readAsNumber (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun readAsObject (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun readAsString (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public abstract interface class io/github/airflux/serialization/core/writer/JsArrayWriter : io/github/airflux/serialization/core/writer/JsWriter {
	public abstract fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/value/JsValue;
}

public abstract interface class io/github/airflux/serialization/core/writer/JsObjectWriter : io/github/airflux/serialization/core/writer/JsWriter {
}

public abstract interface class io/github/airflux/serialization/core/writer/JsWriter {
	public abstract fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/core/writer/context/JsWriterContext : io/github/airflux/serialization/core/context/JsAbstractContext {
	public synthetic fun <init> (Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun plus (Lio/github/airflux/serialization/core/context/JsContext$Element;)Lio/github/airflux/serialization/core/writer/context/JsWriterContext;
	public final fun plus (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/writer/context/JsWriterContext;
}

public final class io/github/airflux/serialization/core/writer/object/NonNullableFieldWriterKt {
	public static final fun writeNonNullable (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/writer/JsWriter;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/core/writer/object/NullableFieldWriterKt {
	public static final fun writeNullable (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/writer/JsWriter;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/core/writer/object/OptionalFieldWriterKt {
	public static final fun writeOptional (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/writer/JsWriter;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public abstract interface class io/github/airflux/serialization/core/writer/predicate/JsPredicate {
	public fun and (Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;)Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;
	public fun or (Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;)Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;
	public abstract fun test (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Z
}

public abstract interface annotation class io/github/airflux/serialization/dsl/AirfluxMarker : java/lang/annotation/Annotation {
}

public final class io/github/airflux/serialization/dsl/lookup/JsLookupOpsKt {
	public static final fun div (Lio/github/airflux/serialization/core/lookup/JsLookup;I)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public static final fun div (Lio/github/airflux/serialization/core/lookup/JsLookup;Ljava/lang/String;)Lio/github/airflux/serialization/core/lookup/JsLookup;
}

public final class io/github/airflux/serialization/dsl/path/JsPathOpsKt {
	public static final fun div (Lio/github/airflux/serialization/core/path/JsPath$Companion;I)Lio/github/airflux/serialization/core/path/JsPath;
	public static final fun div (Lio/github/airflux/serialization/core/path/JsPath$Companion;Ljava/lang/String;)Lio/github/airflux/serialization/core/path/JsPath;
	public static final fun div (Lio/github/airflux/serialization/core/path/JsPath;I)Lio/github/airflux/serialization/core/path/JsPath;
	public static final fun div (Lio/github/airflux/serialization/core/path/JsPath;Ljava/lang/String;)Lio/github/airflux/serialization/core/path/JsPath;
}

public final class io/github/airflux/serialization/dsl/path/JsPathsOpsKt {
	public static final fun or (Lio/github/airflux/serialization/core/path/JsPaths;Lio/github/airflux/serialization/core/path/JsPath;)Lio/github/airflux/serialization/core/path/JsPaths;
	public static final fun or (Lio/github/airflux/serialization/core/path/JsPaths;Lio/github/airflux/serialization/core/path/JsPaths;)Lio/github/airflux/serialization/core/path/JsPaths;
	public static final fun or (Ljava/lang/String;Ljava/lang/String;)Lio/github/airflux/serialization/core/path/JsPaths;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/JsArrayReaderBuilder : io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayReaderValidatorsBuilder {
	public fun validation (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/builder/JsArrayReaderBuilder$ResultBuilder {
	public abstract fun build (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsArray;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/JsArrayReaderBuilderKt {
	public static final fun arrayReader (Lio/github/airflux/serialization/dsl/reader/config/JsArrayReaderConfig;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/JsArrayReader;
	public static synthetic fun arrayReader$default (Lio/github/airflux/serialization/dsl/reader/config/JsArrayReaderConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/JsArrayReader;
	public static final fun returns (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec;)Lio/github/airflux/serialization/dsl/reader/array/builder/JsArrayReaderBuilder$ResultBuilder;
	public static final fun returns (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayPrefixItemsSpec;Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec;)Lio/github/airflux/serialization/dsl/reader/array/builder/JsArrayReaderBuilder$ResultBuilder;
	public static final fun returns (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayPrefixItemsSpec;Z)Lio/github/airflux/serialization/dsl/reader/array/builder/JsArrayReaderBuilder$ResultBuilder;
}

public abstract class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec {
	public abstract fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable : io/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec {
	public fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable : io/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec {
	public fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayNonNullableItemSpecKt {
	public static final fun nonNullable (Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable;Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayNullableItemSpecKt {
	public static final fun nullable (Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable;Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayPrefixItemsSpec {
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayPrefixItemsSpecKt {
	public static final fun prefixItems (Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec;[Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayItemSpec;)Lio/github/airflux/serialization/dsl/reader/array/builder/item/specification/JsArrayPrefixItemsSpec;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayReaderValidatorsBuilder {
	public abstract fun validation (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator {
	public fun and (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;
	public fun or (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;
	public abstract fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsArray;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder {
	public abstract fun build ()Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;
	public abstract fun getKey ()Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Key;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder$Key {
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilders : java/util/List, kotlin/jvm/internal/markers/KMappedMarker {
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun add (ILio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;)V
	public synthetic fun add (ILjava/lang/Object;)V
	public fun add (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (ILjava/util/Collection;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun get (I)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;
	public synthetic fun get (I)Ljava/lang/Object;
	public fun getSize ()I
	public fun indexOf (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;)I
	public final fun indexOf (Ljava/lang/Object;)I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun lastIndexOf (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;)I
	public final fun lastIndexOf (Ljava/lang/Object;)I
	public fun listIterator ()Ljava/util/ListIterator;
	public fun listIterator (I)Ljava/util/ListIterator;
	public fun remove (I)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;
	public synthetic fun remove (I)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun replaceAll (Ljava/util/function/UnaryOperator;)V
	public fun retainAll (Ljava/util/Collection;)Z
	public fun set (ILio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;
	public synthetic fun set (ILjava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public fun sort (Ljava/util/Comparator;)V
	public fun subList (II)Ljava/util/List;
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilders$Builder {
	public fun <init> ()V
	public final fun unaryMinus (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;)V
	public final fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;)V
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidators : java/util/List, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidators$Companion;
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun add (ILio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;)V
	public synthetic fun add (ILjava/lang/Object;)V
	public fun add (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (ILjava/util/Collection;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun get (I)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;
	public synthetic fun get (I)Ljava/lang/Object;
	public fun getSize ()I
	public fun indexOf (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;)I
	public final fun indexOf (Ljava/lang/Object;)I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun lastIndexOf (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;)I
	public final fun lastIndexOf (Ljava/lang/Object;)I
	public fun listIterator ()Ljava/util/ListIterator;
	public fun listIterator (I)Ljava/util/ListIterator;
	public fun remove (I)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;
	public synthetic fun remove (I)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun replaceAll (Ljava/util/function/UnaryOperator;)V
	public fun retainAll (Ljava/util/Collection;)Z
	public fun set (ILio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator;
	public synthetic fun set (ILjava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public fun sort (Ljava/util/Comparator;)V
	public fun subList (II)Ljava/util/List;
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public final class io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidators$Companion {
}

public final class io/github/airflux/serialization/dsl/reader/config/JsArrayReaderConfig {
	public static final field Companion Lio/github/airflux/serialization/dsl/reader/config/JsArrayReaderConfig$Companion;
	public synthetic fun <init> (Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilders;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getValidation ()Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilders;
}

public final class io/github/airflux/serialization/dsl/reader/config/JsArrayReaderConfig$Builder {
	public final fun validation (Lkotlin/jvm/functions/Function1;)V
}

public final class io/github/airflux/serialization/dsl/reader/config/JsArrayReaderConfig$Companion {
	public final fun getDEFAULT ()Lio/github/airflux/serialization/dsl/reader/config/JsArrayReaderConfig;
}

public final class io/github/airflux/serialization/dsl/reader/config/JsArrayReaderConfigKt {
	public static final fun arrayReaderConfig (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/config/JsArrayReaderConfig;
}

public final class io/github/airflux/serialization/dsl/reader/config/JsObjectReaderConfig {
	public static final field Companion Lio/github/airflux/serialization/dsl/reader/config/JsObjectReaderConfig$Companion;
	public synthetic fun <init> (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilders;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getValidation ()Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilders;
}

public final class io/github/airflux/serialization/dsl/reader/config/JsObjectReaderConfig$Builder {
	public final fun validation (Lkotlin/jvm/functions/Function1;)V
}

public final class io/github/airflux/serialization/dsl/reader/config/JsObjectReaderConfig$Companion {
	public final fun getDEFAULT ()Lio/github/airflux/serialization/dsl/reader/config/JsObjectReaderConfig;
}

public final class io/github/airflux/serialization/dsl/reader/config/JsObjectReaderConfigKt {
	public static final fun objectReaderConfig (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/reader/config/JsObjectReaderConfig;
}

public final class io/github/airflux/serialization/dsl/reader/context/JsReaderContextBuilder {
	public final fun errorBuilders (Lkotlin/jvm/functions/Function1;)V
	public final fun exceptions (Lkotlin/jvm/functions/Function1;)V
	public final fun getFailFast ()Ljava/lang/Boolean;
	public final fun setFailFast (Ljava/lang/Boolean;)V
}

public final class io/github/airflux/serialization/dsl/reader/context/JsReaderContextBuilder$ErrorsBuilder {
	public final fun register (Lio/github/airflux/serialization/core/context/error/JsContextErrorBuilderElement;)V
	public final fun unaryPlus (Lio/github/airflux/serialization/core/context/error/JsContextErrorBuilderElement;)V
}

public final class io/github/airflux/serialization/dsl/reader/context/JsReaderContextBuilderKt {
	public static final fun readerContext (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/context/JsReaderContext;
	public static synthetic fun readerContext$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/context/JsReaderContext;
}

public final class io/github/airflux/serialization/dsl/reader/context/exception/ExceptionsHandlerBuilder {
	public final fun exception (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function3;)V
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/JsObjectReaderBuilder : io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectReaderPropertiesBuilder, io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectReaderValidatorsBuilder {
	public fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Defaultable;
	public fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Nullable;
	public fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$NullableWithDefault;
	public fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Optional;
	public fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$OptionalWithDefault;
	public fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Required;
	public fun validation (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/github/airflux/serialization/dsl/reader/object/builder/JsObjectReaderBuilder$ResultBuilder {
	public abstract fun build (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/dsl/reader/object/builder/ObjectValuesMap;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/JsObjectReaderBuilderKt {
	public static final fun reader (Lio/github/airflux/serialization/dsl/reader/config/JsObjectReaderConfig;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/JsObjectReader;
	public static synthetic fun reader$default (Lio/github/airflux/serialization/dsl/reader/config/JsObjectReaderConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/JsObjectReader;
	public static final fun returns (Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/dsl/reader/object/builder/JsObjectReaderBuilder$ResultBuilder;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/object/builder/ObjectValuesMap {
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Defaultable;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Nullable;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$NullableWithDefault;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Optional;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$OptionalWithDefault;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Required;)Ljava/lang/Object;
	public abstract fun getSize ()I
	public abstract fun isEmpty ()Z
	public abstract fun isNotEmpty ()Z
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Defaultable;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Nullable;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$NullableWithDefault;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Optional;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$OptionalWithDefault;)Ljava/lang/Object;
	public fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Required;)Ljava/lang/Object;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperties : java/util/Collection, kotlin/jvm/internal/markers/KMappedMarker {
	public fun add (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public abstract class io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty {
	public abstract fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Defaultable : io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Nullable : io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$NullableWithDefault : io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Optional : io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$OptionalWithDefault : io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Required : io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public final fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectReaderPropertiesBuilder {
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Defaultable;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Nullable;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$NullableWithDefault;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Optional;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$OptionalWithDefault;
	public abstract fun property (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperty$Required;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectDefaultablePropertySpecKt {
	public static final fun defaultable (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;
	public static final fun defaultable (Lio/github/airflux/serialization/core/path/JsPaths;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;
	public static final fun defaultable (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectNullablePropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun nullable (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun nullable (Lio/github/airflux/serialization/core/path/JsPaths;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun nullable (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectNullableWithDefaultPropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun nullableWithDefault (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun nullableWithDefault (Lio/github/airflux/serialization/core/path/JsPaths;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun nullableWithDefault (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectOptionalPropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun optional (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun optional (Lio/github/airflux/serialization/core/path/JsPaths;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun optional (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectOptionalWithDefaultPropertySpecKt {
	public static final fun optionalWithDefault (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public static final fun optionalWithDefault (Lio/github/airflux/serialization/core/path/JsPaths;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public static final fun optionalWithDefault (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault;
}

public abstract class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public abstract fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public abstract fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Defaultable : io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Nullable : io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$NullableWithDefault : io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Optional : io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$OptionalWithDefault : io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required : io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec {
	public fun getPath ()Lio/github/airflux/serialization/core/path/JsPaths;
	public fun getReader ()Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectRequiredPropertySpecKt {
	public static final fun or (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;
	public static final fun required (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;
	public static final fun required (Lio/github/airflux/serialization/core/path/JsPaths;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;
	public static final fun required (Ljava/lang/String;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;
	public static final fun validation (Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/dsl/reader/object/builder/property/specification/JsObjectPropertySpec$Required;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectReaderValidatorsBuilder {
	public abstract fun validation (Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator {
	public fun and (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;
	public fun or (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;
	public abstract fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/serialization/core/value/JsObject;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder {
	public abstract fun build (Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperties;)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;
	public abstract fun getKey ()Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Key;
}

public abstract interface class io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder$Key {
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilders : java/util/List, kotlin/jvm/internal/markers/KMappedMarker {
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun add (ILio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;)V
	public synthetic fun add (ILjava/lang/Object;)V
	public fun add (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (ILjava/util/Collection;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun get (I)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;
	public synthetic fun get (I)Ljava/lang/Object;
	public fun getSize ()I
	public fun indexOf (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;)I
	public final fun indexOf (Ljava/lang/Object;)I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun lastIndexOf (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;)I
	public final fun lastIndexOf (Ljava/lang/Object;)I
	public fun listIterator ()Ljava/util/ListIterator;
	public fun listIterator (I)Ljava/util/ListIterator;
	public fun remove (I)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;
	public synthetic fun remove (I)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun replaceAll (Ljava/util/function/UnaryOperator;)V
	public fun retainAll (Ljava/util/Collection;)Z
	public fun set (ILio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;
	public synthetic fun set (ILjava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public fun sort (Ljava/util/Comparator;)V
	public fun subList (II)Ljava/util/List;
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilders$Builder {
	public fun <init> ()V
	public final fun unaryMinus (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;)V
	public final fun unaryPlus (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;)V
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidators : java/util/List, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidators$Companion;
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun add (ILio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;)V
	public synthetic fun add (ILjava/lang/Object;)V
	public fun add (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (ILjava/util/Collection;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun get (I)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;
	public synthetic fun get (I)Ljava/lang/Object;
	public fun getSize ()I
	public fun indexOf (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;)I
	public final fun indexOf (Ljava/lang/Object;)I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun lastIndexOf (Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;)I
	public final fun lastIndexOf (Ljava/lang/Object;)I
	public fun listIterator ()Ljava/util/ListIterator;
	public fun listIterator (I)Ljava/util/ListIterator;
	public fun remove (I)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;
	public synthetic fun remove (I)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun replaceAll (Ljava/util/function/UnaryOperator;)V
	public fun retainAll (Ljava/util/Collection;)Z
	public fun set (ILio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator;
	public synthetic fun set (ILjava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public fun sort (Ljava/util/Comparator;)V
	public fun subList (II)Ljava/util/List;
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public final class io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidators$Companion {
}

public final class io/github/airflux/serialization/dsl/reader/result/JsLocationOpsKt {
	public static final fun div (Lio/github/airflux/serialization/core/location/JsLocation;I)Lio/github/airflux/serialization/core/location/JsLocation;
	public static final fun div (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/path/PathElement;)Lio/github/airflux/serialization/core/location/JsLocation;
	public static final fun div (Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/String;)Lio/github/airflux/serialization/core/location/JsLocation;
}

public final class io/github/airflux/serialization/dsl/value/JsValueOpsKt {
	public static final fun deserialization (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsResult;
	public static final fun div (Lio/github/airflux/serialization/core/value/JsValue;I)Lio/github/airflux/serialization/core/lookup/JsLookup;
	public static final fun div (Lio/github/airflux/serialization/core/value/JsValue;Ljava/lang/String;)Lio/github/airflux/serialization/core/lookup/JsLookup;
}

public final class io/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty : java/lang/Enum {
	public static final field RETURN_EMPTY_VALUE Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
	public static final field RETURN_NOTHING Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
	public static final field RETURN_NULL_VALUE Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
	public static fun valueOf (Ljava/lang/String;)Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
	public static fun values ()[Lio/github/airflux/serialization/dsl/writer/WriterActionIfResultIsEmpty;
}

public final class io/github/airflux/serialization/dsl/writer/WriterOpsKt {
	public static final fun serialization (Ljava/lang/Object;Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/writer/JsWriter;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/JsArrayWriterBuilder : io/github/airflux/serialization/dsl/writer/WriterActionConfigurator {
	public fun getActionIfEmpty ()Lkotlin/jvm/functions/Function2;
	public final fun items (Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$NonNullable;)Lio/github/airflux/serialization/dsl/writer/array/builder/JsArrayWriterBuilder$WriterBuilder;
	public final fun items (Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$Nullable;)Lio/github/airflux/serialization/dsl/writer/array/builder/JsArrayWriterBuilder$WriterBuilder;
	public final fun items (Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$Optional;)Lio/github/airflux/serialization/dsl/writer/array/builder/JsArrayWriterBuilder$WriterBuilder;
	public fun returnEmptyValue ()Lkotlin/jvm/functions/Function2;
	public fun returnNothing ()Lkotlin/jvm/functions/Function2;
	public fun returnNullValue ()Lkotlin/jvm/functions/Function2;
	public fun setActionIfEmpty (Lkotlin/jvm/functions/Function2;)V
}

public abstract interface class io/github/airflux/serialization/dsl/writer/array/builder/JsArrayWriterBuilder$WriterBuilder {
	public abstract fun build ()Lio/github/airflux/serialization/core/writer/JsArrayWriter;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/JsArrayWriterBuilderKt {
	public static final fun arrayWriter (Lio/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/writer/JsArrayWriter;
	public static synthetic fun arrayWriter$default (Lio/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/github/airflux/serialization/core/writer/JsArrayWriter;
}

public abstract class io/github/airflux/serialization/dsl/writer/array/builder/item/JsArrayItems {
	public abstract fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/JsArrayItems$NonNullable : io/github/airflux/serialization/dsl/writer/array/builder/item/JsArrayItems {
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/JsArrayItems$Nullable : io/github/airflux/serialization/dsl/writer/array/builder/item/JsArrayItems {
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/JsArrayItems$Optional : io/github/airflux/serialization/dsl/writer/array/builder/item/JsArrayItems {
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public abstract interface class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec {
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$NonNullable : io/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec {
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/JsWriter;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$Nullable : io/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec {
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/JsWriter;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$Optional : io/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec {
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/JsWriter;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayNonNullableItemSpecKt {
	public static final fun nonNullable (Lio/github/airflux/serialization/core/writer/JsWriter;)Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayNullableItemSpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$Nullable;Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;)Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$Optional;
	public static final fun nullable (Lio/github/airflux/serialization/core/writer/JsWriter;)Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayOptionalItemSpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$Optional;Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;)Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$Optional;
	public static final fun optional (Lio/github/airflux/serialization/core/writer/JsWriter;)Lio/github/airflux/serialization/dsl/writer/array/builder/item/specification/JsArrayItemSpec$Optional;
}

public final class io/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig {
	public static final field Companion Lio/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig$Companion;
	public synthetic fun <init> (Lio/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig$Options;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getOptions ()Lio/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig$Options;
}

public final class io/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig$Builder {
	public final fun getActionIfEmpty ()Lkotlin/jvm/functions/Function2;
	public final fun setActionIfEmpty (Lkotlin/jvm/functions/Function2;)V
}

public final class io/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig$Companion {
	public final fun getDEFAULT ()Lio/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig;
}

public final class io/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig$Options {
	public final fun getActionIfEmpty ()Lkotlin/jvm/functions/Function2;
}

public final class io/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfigKt {
	public static final fun arrayWriterConfig (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/writer/config/JsArrayWriterConfig;
}

public final class io/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig {
	public static final field Companion Lio/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig$Companion;
	public synthetic fun <init> (Lio/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig$Options;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getOptions ()Lio/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig$Options;
}

public final class io/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig$Builder {
	public final fun getActionIfEmpty ()Lkotlin/jvm/functions/Function2;
	public final fun setActionIfEmpty (Lkotlin/jvm/functions/Function2;)V
}

public final class io/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig$Companion {
	public final fun getDEFAULT ()Lio/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig;
}

public final class io/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig$Options {
	public final fun getActionIfEmpty ()Lkotlin/jvm/functions/Function2;
}

public final class io/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfigKt {
	public static final fun objectWriterConfig (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig;
}

public final class io/github/airflux/serialization/dsl/writer/context/JsWriterContextBuilder {
}

public final class io/github/airflux/serialization/dsl/writer/context/JsWriterContextBuilderKt {
	public static final fun writerContext (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/writer/context/JsWriterContext;
	public static synthetic fun writerContext$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/github/airflux/serialization/core/writer/context/JsWriterContext;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/JsObjectWriterBuilder : io/github/airflux/serialization/dsl/writer/WriterActionConfigurator, io/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectWriterPropertiesBuilder {
	public fun getActionIfEmpty ()Lkotlin/jvm/functions/Function2;
	public fun property (Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$NonNullable;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty$NonNullable;
	public fun property (Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty$Nullable;
	public fun property (Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Optional;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty$Optional;
	public fun returnEmptyValue ()Lkotlin/jvm/functions/Function2;
	public fun returnNothing ()Lkotlin/jvm/functions/Function2;
	public fun returnNullValue ()Lkotlin/jvm/functions/Function2;
	public fun setActionIfEmpty (Lkotlin/jvm/functions/Function2;)V
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/JsObjectWriterBuilderKt {
	public static final fun writer (Lio/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/writer/JsObjectWriter;
	public static synthetic fun writer$default (Lio/github/airflux/serialization/dsl/writer/config/JsObjectWriterConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/github/airflux/serialization/core/writer/JsObjectWriter;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperties : java/util/Collection, kotlin/jvm/internal/markers/KMappedMarker {
	public fun add (Lio/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty;)Z
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Lio/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty;)Z
	public final fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeIf (Ljava/util/function/Predicate;)Z
	public fun retainAll (Ljava/util/Collection;)Z
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public abstract class io/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty {
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty$NonNullable : io/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty {
	public fun getName ()Ljava/lang/String;
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty$Nullable : io/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty {
	public fun getName ()Ljava/lang/String;
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty$Optional : io/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty {
	public fun getName ()Ljava/lang/String;
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public abstract interface class io/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectWriterPropertiesBuilder {
	public abstract fun property (Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$NonNullable;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty$NonNullable;
	public abstract fun property (Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Nullable;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty$Nullable;
	public abstract fun property (Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Optional;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/JsObjectProperty$Optional;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectNonNullablePropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$NonNullable;Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun nonNullable (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/serialization/core/writer/JsWriter;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$NonNullable;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectNullablePropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Nullable;Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun nullable (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/serialization/core/writer/JsWriter;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Nullable;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectOptionalPropertySpecKt {
	public static final fun filter (Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Optional;Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Optional;
	public static final fun optional (Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lio/github/airflux/serialization/core/writer/JsWriter;)Lio/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Optional;
}

public abstract interface class io/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec {
	public abstract fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$NonNullable : io/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec {
	public final fun getFrom ()Lkotlin/jvm/functions/Function1;
	public fun getName ()Ljava/lang/String;
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/JsWriter;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Nullable : io/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec {
	public final fun getFrom ()Lkotlin/jvm/functions/Function1;
	public fun getName ()Ljava/lang/String;
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/JsWriter;
}

public final class io/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec$Optional : io/github/airflux/serialization/dsl/writer/object/builder/property/specification/JsObjectPropertySpec {
	public final fun getFrom ()Lkotlin/jvm/functions/Function1;
	public fun getName ()Ljava/lang/String;
	public final fun getWriter ()Lio/github/airflux/serialization/core/writer/JsWriter;
}

public final class io/github/airflux/serialization/std/reader/BigDecimalReader : io/github/airflux/serialization/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/serialization/std/reader/BigDecimalReader;
	public fun read (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/std/reader/BooleanReader : io/github/airflux/serialization/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/serialization/std/reader/BooleanReader;
	public fun read (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/std/reader/ByteReader : io/github/airflux/serialization/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/serialization/std/reader/ByteReader;
	public fun read (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/std/reader/IntReader : io/github/airflux/serialization/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/serialization/std/reader/IntReader;
	public fun read (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/std/reader/LongReader : io/github/airflux/serialization/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/serialization/std/reader/LongReader;
	public fun read (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/std/reader/ShortReader : io/github/airflux/serialization/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/serialization/std/reader/ShortReader;
	public fun read (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/std/reader/StringReader : io/github/airflux/serialization/core/reader/JsReader {
	public static final field INSTANCE Lio/github/airflux/serialization/std/reader/StringReader;
	public fun read (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/reader/result/JsResult;
}

public final class io/github/airflux/serialization/std/validator/array/ArrayValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/array/ArrayValidator;
	public final fun isNotEmpty ()Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;
	public final fun maxItems (I)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;
	public final fun minItems (I)Lio/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidatorBuilder;
}

public final class io/github/airflux/serialization/std/validator/array/IsNotEmptyArrayValidator : io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsArray;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/array/IsNotEmptyArrayValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/array/IsNotEmptyArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/array/IsNotEmptyArrayValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/array/MaxItemsArrayValidator : io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsArray;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/array/MaxItemsArrayValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/array/MaxItemsArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/array/MaxItemsArrayValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/array/MinItemsArrayValidator : io/github/airflux/serialization/dsl/reader/array/builder/validator/JsArrayValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsArray;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/array/MinItemsArrayValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/array/MinItemsArrayValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/array/MinItemsArrayValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/comparable/ComparableValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/comparable/ComparableValidator;
	public final fun eq (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun ge (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun gt (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun le (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun lt (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun max (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun min (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun ne (Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
}

public final class io/github/airflux/serialization/std/validator/comparable/EqComparableValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/comparable/EqComparableValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/comparable/EqComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/comparable/EqComparableValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/comparable/GeComparableValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/comparable/GeComparableValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/comparable/GeComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/comparable/GeComparableValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/comparable/GtComparableValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/comparable/GtComparableValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/comparable/GtComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/comparable/GtComparableValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/comparable/LeComparableValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/comparable/LeComparableValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/comparable/LeComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/comparable/LeComparableValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/comparable/LtComparableValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/comparable/LtComparableValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/comparable/LtComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/comparable/LtComparableValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/comparable/MaxComparableValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/comparable/MaxComparableValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/comparable/MaxComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/comparable/MaxComparableValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/comparable/MinComparableValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/comparable/MinComparableValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/comparable/MinComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/comparable/MinComparableValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/comparable/NeComparableValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/comparable/NeComparableValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/comparable/NeComparableValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/Number;Ljava/lang/Number;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/comparable/NeComparableValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/condition/ConditionValidatorsKt {
	public static final fun applyIf (Lio/github/airflux/serialization/core/reader/validator/JsValidator;Lkotlin/jvm/functions/Function3;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public static final fun applyIfNotNull (Lio/github/airflux/serialization/core/reader/validator/JsValidator;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
}

public final class io/github/airflux/serialization/std/validator/object/AdditionalPropertiesObjectValidator : io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/serialization/core/value/JsObject;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/object/AdditionalPropertiesObjectValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/object/AdditionalPropertiesObjectValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/object/AdditionalPropertiesObjectValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/object/IsNotEmptyObjectValidator : io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/serialization/core/value/JsObject;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/object/IsNotEmptyObjectValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/object/IsNotEmptyObjectValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/object/IsNotEmptyObjectValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/object/MaxPropertiesObjectValidator : io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/serialization/core/value/JsObject;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/object/MaxPropertiesObjectValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/object/MaxPropertiesObjectValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/object/MaxPropertiesObjectValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/object/MinPropertiesObjectValidator : io/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidator {
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/dsl/reader/object/builder/property/JsObjectProperties;Lio/github/airflux/serialization/core/value/JsObject;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/object/MinPropertiesObjectValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/object/MinPropertiesObjectValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/object/MinPropertiesObjectValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/object/ObjectValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/object/ObjectValidator;
	public final fun getAdditionalProperties ()Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;
	public final fun isNotEmpty ()Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;
	public final fun maxProperties (I)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;
	public final fun minProperties (I)Lio/github/airflux/serialization/dsl/reader/object/builder/validator/JsObjectValidatorBuilder;
}

public final class io/github/airflux/serialization/std/validator/string/IsAStringValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/string/IsAStringValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/string/IsAStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final fun build (Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/string/IsAStringValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/string/IsNotBlankStringValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/string/IsNotBlankStringValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/string/IsNotBlankStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/string/IsNotBlankStringValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/string/IsNotEmptyStringValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/string/IsNotEmptyStringValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/string/IsNotEmptyStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun build ()Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/string/IsNotEmptyStringValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/string/MaxLengthStringValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/string/MaxLengthStringValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/string/MaxLengthStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/string/MaxLengthStringValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/string/MinLengthStringValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/string/MinLengthStringValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/string/MinLengthStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (II)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/string/MinLengthStringValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/string/PatternStringValidator : io/github/airflux/serialization/core/reader/validator/JsValidator {
	public synthetic fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
	public fun validate (Lio/github/airflux/serialization/core/reader/context/JsReaderContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/String;)Lio/github/airflux/serialization/core/reader/result/JsResult$Failure;
}

public final class io/github/airflux/serialization/std/validator/string/PatternStringValidator$ErrorBuilder : io/github/airflux/serialization/core/context/error/AbstractErrorBuilderContextElement {
	public static final field Key Lio/github/airflux/serialization/std/validator/string/PatternStringValidator$ErrorBuilder$Key;
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final fun build (Ljava/lang/String;Lkotlin/text/Regex;)Lio/github/airflux/serialization/core/reader/result/JsError;
}

public final class io/github/airflux/serialization/std/validator/string/PatternStringValidator$ErrorBuilder$Key : io/github/airflux/serialization/core/context/error/JsContextErrorBuilderKey {
	public fun getName ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/std/validator/string/StringValidator {
	public static final field INSTANCE Lio/github/airflux/serialization/std/validator/string/StringValidator;
	public final fun isA (Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun isNotBlank ()Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun isNotEmpty ()Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun maxLength (I)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun minLength (I)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
	public final fun pattern (Lkotlin/text/Regex;)Lio/github/airflux/serialization/core/reader/validator/JsValidator;
}

public final class io/github/airflux/serialization/std/writer/BigDecimalWriter : io/github/airflux/serialization/core/writer/JsWriter {
	public static final field INSTANCE Lio/github/airflux/serialization/std/writer/BigDecimalWriter;
	public synthetic fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/math/BigDecimal;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/std/writer/BigDecimalWriter$StripTrailingZeros : io/github/airflux/serialization/core/context/option/JsContextOptionElement {
	public static final field Key Lio/github/airflux/serialization/std/writer/BigDecimalWriter$StripTrailingZeros$Key;
	public fun <init> (Z)V
	public synthetic fun getKey ()Lio/github/airflux/serialization/core/context/JsContext$Key;
	public fun getKey ()Lio/github/airflux/serialization/core/context/option/JsContextOptionKey;
	public fun getValue ()Ljava/lang/Boolean;
	public synthetic fun getValue ()Ljava/lang/Object;
}

public final class io/github/airflux/serialization/std/writer/BigDecimalWriter$StripTrailingZeros$Key : io/github/airflux/serialization/core/context/option/JsContextOptionKey {
}

public final class io/github/airflux/serialization/std/writer/BooleanWriter : io/github/airflux/serialization/core/writer/JsWriter {
	public static final field INSTANCE Lio/github/airflux/serialization/std/writer/BooleanWriter;
	public synthetic fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Z)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/std/writer/ByteWriter : io/github/airflux/serialization/core/writer/JsWriter {
	public static final field INSTANCE Lio/github/airflux/serialization/std/writer/ByteWriter;
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;B)Lio/github/airflux/serialization/core/value/JsValue;
	public synthetic fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/std/writer/IntWriter : io/github/airflux/serialization/core/writer/JsWriter {
	public static final field INSTANCE Lio/github/airflux/serialization/std/writer/IntWriter;
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;I)Lio/github/airflux/serialization/core/value/JsValue;
	public synthetic fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/std/writer/LongWriter : io/github/airflux/serialization/core/writer/JsWriter {
	public static final field INSTANCE Lio/github/airflux/serialization/std/writer/LongWriter;
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;J)Lio/github/airflux/serialization/core/value/JsValue;
	public synthetic fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/std/writer/ShortWriter : io/github/airflux/serialization/core/writer/JsWriter {
	public static final field INSTANCE Lio/github/airflux/serialization/std/writer/ShortWriter;
	public synthetic fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;S)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/std/writer/StringWriter : io/github/airflux/serialization/core/writer/JsWriter {
	public static final field INSTANCE Lio/github/airflux/serialization/std/writer/StringWriter;
	public synthetic fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
	public fun write (Lio/github/airflux/serialization/core/writer/context/JsWriterContext;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/String;)Lio/github/airflux/serialization/core/value/JsValue;
}

