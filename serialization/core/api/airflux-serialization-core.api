public final class io/github/airflux/serialization/core/DeserializationKt {
	public static final fun deserialization (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
}

public final class io/github/airflux/serialization/core/SerializationKt {
	public static final fun serialization (Ljava/lang/Object;Lio/github/airflux/serialization/core/writer/env/JsWriterEnv;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/writer/JsWriter;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/core/common/IdentityKt {
	public static final fun identity (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class io/github/airflux/serialization/core/common/NonEmptyList {
	public static final field Companion Lio/github/airflux/serialization/core/common/NonEmptyList$Companion;
	public static final fun add-G-AljhI (Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
	public static final fun add-aF1CD50 (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public static final fun addAll-G-AljhI (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public static final synthetic fun box-impl (Ljava/util/List;)Lio/github/airflux/serialization/core/common/NonEmptyList;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public final fun getItems ()Ljava/util/List;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public static final fun invoke-W6Hq0XY (Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
	public static final fun invoke-W6Hq0XY (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
	public static final fun valueOf-cr98ui8 (Ljava/util/List;)Ljava/util/List;
}

public final class io/github/airflux/serialization/core/common/NonEmptyList$Companion {
	public final fun add-G-AljhI (Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
	public final fun add-aF1CD50 (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public final fun addAll-G-AljhI (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public final fun invoke-W6Hq0XY (Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;
	public final fun invoke-W6Hq0XY (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
	public final fun valueOf-cr98ui8 (Ljava/util/List;)Ljava/util/List;
}

public final class io/github/airflux/serialization/core/common/NonEmptyListKt {
	public static final fun exists-rOXLWbo (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Z
	public static final fun plus-YU4y0zU (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public static final fun plus-rOXLWbo (Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;
	public static final fun plus-rOXLWbo (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
}

public abstract class io/github/airflux/serialization/core/context/JsAbstractContextElement : io/github/airflux/serialization/core/context/JsContext$Element {
	public fun <init> (Lio/github/airflux/serialization/core/context/JsContext$Key;)V
	public fun getKey ()Lio/github/airflux/serialization/core/context/JsContext$Key;
}

public abstract interface class io/github/airflux/serialization/core/context/JsContext {
	public static final field Companion Lio/github/airflux/serialization/core/context/JsContext$Companion;
	public abstract fun contains (Lio/github/airflux/serialization/core/context/JsContext$Key;)Z
	public abstract fun fold (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public abstract fun get (Lio/github/airflux/serialization/core/context/JsContext$Key;)Lio/github/airflux/serialization/core/context/JsContext$Element;
	public abstract fun isEmpty ()Z
	public fun isNotEmpty ()Z
	public fun plus (Lio/github/airflux/serialization/core/context/JsContext$Element;)Lio/github/airflux/serialization/core/context/JsContext;
}

public final class io/github/airflux/serialization/core/context/JsContext$Companion {
}

public abstract interface class io/github/airflux/serialization/core/context/JsContext$Element : io/github/airflux/serialization/core/context/JsContext {
	public fun contains (Lio/github/airflux/serialization/core/context/JsContext$Key;)Z
	public fun fold (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public fun get (Lio/github/airflux/serialization/core/context/JsContext$Key;)Lio/github/airflux/serialization/core/context/JsContext$Element;
	public abstract fun getKey ()Lio/github/airflux/serialization/core/context/JsContext$Key;
	public fun isEmpty ()Z
}

public final class io/github/airflux/serialization/core/context/JsContext$Empty : io/github/airflux/serialization/core/context/JsContext {
	public static final field INSTANCE Lio/github/airflux/serialization/core/context/JsContext$Empty;
	public fun contains (Lio/github/airflux/serialization/core/context/JsContext$Key;)Z
	public fun equals (Ljava/lang/Object;)Z
	public fun fold (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public fun get (Lio/github/airflux/serialization/core/context/JsContext$Key;)Lio/github/airflux/serialization/core/context/JsContext$Element;
	public fun hashCode ()I
	public fun isEmpty ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/github/airflux/serialization/core/context/JsContext$Key {
}

public abstract interface class io/github/airflux/serialization/core/location/JsLocation {
	public static final field Root Lio/github/airflux/serialization/core/location/JsLocation$Root;
	public fun append (I)Lio/github/airflux/serialization/core/location/JsLocation;
	public fun append (Lio/github/airflux/serialization/core/path/JsPath$Element;)Lio/github/airflux/serialization/core/location/JsLocation;
	public fun append (Lio/github/airflux/serialization/core/path/JsPath;)Lio/github/airflux/serialization/core/location/JsLocation;
	public fun append (Ljava/lang/String;)Lio/github/airflux/serialization/core/location/JsLocation;
	public fun foldLeft (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public fun foldRight (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public abstract fun isEmpty ()Z
}

public final class io/github/airflux/serialization/core/location/JsLocation$Root : io/github/airflux/serialization/core/location/JsLocation {
	public fun isEmpty ()Z
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/airflux/serialization/core/lookup/JsLookupResult {
	public final fun apply (I)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public abstract fun apply (Lio/github/airflux/serialization/core/path/JsPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public abstract fun apply (Lio/github/airflux/serialization/core/path/JsPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public final fun apply (Ljava/lang/String;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
}

public final class io/github/airflux/serialization/core/lookup/JsLookupResult$Defined : io/github/airflux/serialization/core/lookup/JsLookupResult {
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)V
	public fun apply (Lio/github/airflux/serialization/core/path/JsPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public fun apply (Lio/github/airflux/serialization/core/path/JsPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public final fun component1 ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun component2 ()Lio/github/airflux/serialization/core/value/JsValue;
	public final fun copy (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/lookup/JsLookupResult$Defined;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/lookup/JsLookupResult$Defined;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;ILjava/lang/Object;)Lio/github/airflux/serialization/core/lookup/JsLookupResult$Defined;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLocation ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun getValue ()Lio/github/airflux/serialization/core/value/JsValue;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/airflux/serialization/core/lookup/JsLookupResult$Undefined : io/github/airflux/serialization/core/lookup/JsLookupResult {
}

public final class io/github/airflux/serialization/core/lookup/JsLookupResult$Undefined$InvalidType : io/github/airflux/serialization/core/lookup/JsLookupResult$Undefined {
	public fun <init> (Lio/github/airflux/serialization/core/value/JsValue$Type;Lio/github/airflux/serialization/core/value/JsValue$Type;Lio/github/airflux/serialization/core/location/JsLocation;)V
	public fun apply (Lio/github/airflux/serialization/core/path/JsPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public fun apply (Lio/github/airflux/serialization/core/path/JsPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public final fun component1 ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public final fun component2 ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public final fun component3 ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun copy (Lio/github/airflux/serialization/core/value/JsValue$Type;Lio/github/airflux/serialization/core/value/JsValue$Type;Lio/github/airflux/serialization/core/location/JsLocation;)Lio/github/airflux/serialization/core/lookup/JsLookupResult$Undefined$InvalidType;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/lookup/JsLookupResult$Undefined$InvalidType;Lio/github/airflux/serialization/core/value/JsValue$Type;Lio/github/airflux/serialization/core/value/JsValue$Type;Lio/github/airflux/serialization/core/location/JsLocation;ILjava/lang/Object;)Lio/github/airflux/serialization/core/lookup/JsLookupResult$Undefined$InvalidType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActual ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public final fun getBreakpoint ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun getExpected ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/lookup/JsLookupResult$Undefined$PathMissing : io/github/airflux/serialization/core/lookup/JsLookupResult$Undefined {
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;)V
	public fun apply (Lio/github/airflux/serialization/core/path/JsPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public fun apply (Lio/github/airflux/serialization/core/path/JsPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public final fun component1 ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun copy (Lio/github/airflux/serialization/core/location/JsLocation;)Lio/github/airflux/serialization/core/lookup/JsLookupResult$Undefined$PathMissing;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/lookup/JsLookupResult$Undefined$PathMissing;Lio/github/airflux/serialization/core/location/JsLocation;ILjava/lang/Object;)Lio/github/airflux/serialization/core/lookup/JsLookupResult$Undefined$PathMissing;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLocation ()Lio/github/airflux/serialization/core/location/JsLocation;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/lookup/JsLookupResultKt {
	public static final fun lookup (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/path/JsPath$Element$Idx;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public static final fun lookup (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/path/JsPath$Element$Key;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
	public static final fun lookup (Lio/github/airflux/serialization/core/value/JsValue;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/path/JsPath;)Lio/github/airflux/serialization/core/lookup/JsLookupResult;
}

public abstract interface class io/github/airflux/serialization/core/path/JsPath {
	public static final field Companion Lio/github/airflux/serialization/core/path/JsPath$Companion;
	public fun append (I)Lio/github/airflux/serialization/core/path/JsPath;
	public fun append (Lio/github/airflux/serialization/core/path/JsPath$Element;)Lio/github/airflux/serialization/core/path/JsPath;
	public fun append (Ljava/lang/String;)Lio/github/airflux/serialization/core/path/JsPath;
	public abstract fun foldLeft (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public abstract fun foldRight (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public abstract fun getHead ()Lio/github/airflux/serialization/core/path/JsPath$Element;
	public abstract fun getTail ()Lio/github/airflux/serialization/core/path/JsPath;
	public static fun invoke (I)Lio/github/airflux/serialization/core/path/JsPath;
	public static fun invoke (Lio/github/airflux/serialization/core/path/JsPath$Element;)Lio/github/airflux/serialization/core/path/JsPath;
	public static fun invoke (Ljava/lang/String;)Lio/github/airflux/serialization/core/path/JsPath;
}

public final class io/github/airflux/serialization/core/path/JsPath$Companion {
	public final fun invoke (I)Lio/github/airflux/serialization/core/path/JsPath;
	public final fun invoke (Lio/github/airflux/serialization/core/path/JsPath$Element;)Lio/github/airflux/serialization/core/path/JsPath;
	public final fun invoke (Ljava/lang/String;)Lio/github/airflux/serialization/core/path/JsPath;
}

public abstract class io/github/airflux/serialization/core/path/JsPath$Element {
}

public final class io/github/airflux/serialization/core/path/JsPath$Element$Idx : io/github/airflux/serialization/core/path/JsPath$Element {
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lio/github/airflux/serialization/core/path/JsPath$Element$Idx;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/path/JsPath$Element$Idx;IILjava/lang/Object;)Lio/github/airflux/serialization/core/path/JsPath$Element$Idx;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/JsPath$Element$Key : io/github/airflux/serialization/core/path/JsPath$Element {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/github/airflux/serialization/core/path/JsPath$Element$Key;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/path/JsPath$Element$Key;Ljava/lang/String;ILjava/lang/Object;)Lio/github/airflux/serialization/core/path/JsPath$Element$Key;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/path/JsPaths {
	public static final fun append-Uxnw03w (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public static final fun append-V2L3VZw (Ljava/util/List;Lio/github/airflux/serialization/core/path/JsPath;)Ljava/util/List;
	public static final synthetic fun box-impl (Ljava/util/List;)Lio/github/airflux/serialization/core/path/JsPaths;
	public static fun constructor-impl (Lio/github/airflux/serialization/core/path/JsPath;)Ljava/util/List;
	public static fun constructor-impl (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/path/JsPath;)Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public final fun getItems ()Ljava/util/List;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
}

public final class io/github/airflux/serialization/core/reader/ArrayPropertyReaderKt {
	public static final fun readItems (Lio/github/airflux/serialization/core/value/JsArray;Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun readItems (Lio/github/airflux/serialization/core/value/JsArray;Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/util/List;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun readItems (Lio/github/airflux/serialization/core/value/JsArray;Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/util/List;Z)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
}

public abstract interface class io/github/airflux/serialization/core/reader/JsPathReader : io/github/airflux/serialization/core/reader/JsReader {
}

public final class io/github/airflux/serialization/core/reader/JsPathReaderKt {
	public static final fun filter (Lio/github/airflux/serialization/core/reader/JsPathReader;Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/core/reader/JsPathReader;
	public static final fun or (Lio/github/airflux/serialization/core/reader/JsPathReader;Lio/github/airflux/serialization/core/reader/JsPathReader;)Lio/github/airflux/serialization/core/reader/JsPathReader;
	public static final fun readOptional (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/JsPathReader;
	public static final fun readOptional (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/core/reader/JsPathReader;
	public static final fun readRequired (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/JsPathReader;
	public static final fun readRequired (Lio/github/airflux/serialization/core/path/JsPath;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/core/reader/JsPathReader;
	public static final fun validation (Lio/github/airflux/serialization/core/reader/JsPathReader;Lio/github/airflux/serialization/core/reader/validation/JsValidator;)Lio/github/airflux/serialization/core/reader/JsPathReader;
}

public abstract interface class io/github/airflux/serialization/core/reader/JsReader {
	public abstract fun read (Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
}

public final class io/github/airflux/serialization/core/reader/JsReaderKt {
	public static final fun bind (Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/core/reader/JsReader;
	public static final fun filter (Lio/github/airflux/serialization/core/reader/JsReader;Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/core/reader/JsReader;
	public static final fun ifNullValue (Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/core/reader/JsReader;
	public static final fun map (Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/JsReader;
	public static final fun nullable (Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/JsReader;
	public static final fun or (Lio/github/airflux/serialization/core/reader/JsReader;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/JsReader;
	public static final fun orElse (Lio/github/airflux/serialization/core/reader/JsReader;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/JsReader;
	public static final fun validation (Lio/github/airflux/serialization/core/reader/JsReader;Lio/github/airflux/serialization/core/reader/validation/JsValidator;)Lio/github/airflux/serialization/core/reader/JsReader;
}

public final class io/github/airflux/serialization/core/reader/OptionalPropertyReaderKt {
	public static final fun readOptional (Lio/github/airflux/serialization/core/lookup/JsLookupResult;Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
}

public final class io/github/airflux/serialization/core/reader/OptionalWithDefaultPropertyReaderKt {
	public static final fun readOptional (Lio/github/airflux/serialization/core/lookup/JsLookupResult;Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/reader/JsReader;Lkotlin/jvm/functions/Function2;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
}

public final class io/github/airflux/serialization/core/reader/RequiredPropertyReaderKt {
	public static final fun readRequired (Lio/github/airflux/serialization/core/lookup/JsLookupResult;Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/reader/JsReader;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
}

public final class io/github/airflux/serialization/core/reader/env/JsReaderEnv {
	public fun <init> (Lio/github/airflux/serialization/core/reader/env/JsReaderEnv$Config;Lio/github/airflux/serialization/core/context/JsContext;)V
	public synthetic fun <init> (Lio/github/airflux/serialization/core/reader/env/JsReaderEnv$Config;Lio/github/airflux/serialization/core/context/JsContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getConfig ()Lio/github/airflux/serialization/core/reader/env/JsReaderEnv$Config;
	public final fun getContext ()Lio/github/airflux/serialization/core/context/JsContext;
}

public final class io/github/airflux/serialization/core/reader/env/JsReaderEnv$Config {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;)V
	public final fun getErrorBuilders ()Ljava/lang/Object;
	public final fun getOptions ()Ljava/lang/Object;
}

public final class io/github/airflux/serialization/core/reader/env/JsReaderEnvKt {
	public static final fun plus (Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/context/JsContext$Element;)Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;
}

public abstract interface class io/github/airflux/serialization/core/reader/env/option/FailFastOption {
	public abstract fun getFailFast ()Z
}

public abstract interface class io/github/airflux/serialization/core/reader/error/AdditionalItemsErrorBuilder {
	public abstract fun additionalItemsError ()Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/error/InvalidTypeErrorBuilder {
	public abstract fun invalidTypeError (Lio/github/airflux/serialization/core/value/JsValue$Type;Lio/github/airflux/serialization/core/value/JsValue$Type;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/error/NumberFormatErrorBuilder {
	public abstract fun numberFormatError (Ljava/lang/String;Lkotlin/reflect/KClass;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/error/PathMissingErrorBuilder {
	public abstract fun pathMissingError ()Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;
}

public abstract interface class io/github/airflux/serialization/core/reader/predicate/JsPredicate {
	public abstract fun test (Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Z
}

public final class io/github/airflux/serialization/core/reader/predicate/JsPredicateKt {
	public static final fun and (Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;
	public static final fun or (Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;
}

public abstract class io/github/airflux/serialization/core/reader/result/JsReaderResult {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Companion;
}

public final class io/github/airflux/serialization/core/reader/result/JsReaderResult$Companion {
}

public abstract interface class io/github/airflux/serialization/core/reader/result/JsReaderResult$Error {
}

public final class io/github/airflux/serialization/core/reader/result/JsReaderResult$Failure : io/github/airflux/serialization/core/reader/result/JsReaderResult {
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;)V
	public fun <init> (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Cause;)V
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-kxG7Uwk ()Ljava/util/List;
	public final fun copy-1Tn4m-4 (Ljava/util/List;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;
	public static synthetic fun copy-1Tn4m-4$default (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;Ljava/util/List;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCauses-kxG7Uwk ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Cause {
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun component2 ()Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;
	public final fun copy (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Cause;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Cause;Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Cause;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getError ()Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;
	public final fun getLocation ()Lio/github/airflux/serialization/core/location/JsLocation;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Causes {
	public static final field Companion Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Causes$Companion;
	public static final synthetic fun box-impl (Ljava/util/List;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Causes;
	public fun equals (Ljava/lang/Object;)Z
	public static fun equals-impl (Ljava/util/List;Ljava/lang/Object;)Z
	public static final fun equals-impl0 (Ljava/util/List;Ljava/util/List;)Z
	public final fun getItems ()Ljava/util/List;
	public fun hashCode ()I
	public static fun hashCode-impl (Ljava/util/List;)I
	public static final fun invoke-rKFLp6k (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Cause;)Ljava/util/List;
	public static final fun plus-rLW2DmI (Ljava/util/List;Ljava/util/List;)Ljava/util/List;
	public fun toString ()Ljava/lang/String;
	public static fun toString-impl (Ljava/util/List;)Ljava/lang/String;
	public final synthetic fun unbox-impl ()Ljava/util/List;
}

public final class io/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Causes$Companion {
	public final fun invoke-rKFLp6k (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure$Cause;)Ljava/util/List;
}

public final class io/github/airflux/serialization/core/reader/result/JsReaderResult$Success : io/github/airflux/serialization/core/reader/result/JsReaderResult {
	public fun <init> (Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Success;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Success;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Success;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLocation ()Lio/github/airflux/serialization/core/location/JsLocation;
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/result/JsReaderResultKt {
	public static final fun bind (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun failure (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun filter (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/reader/predicate/JsPredicate;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun fold (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun getOrElse (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun getOrElse (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun getOrNull (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;)Ljava/lang/Object;
	public static final fun ifNullValue (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun isFailure (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;)Z
	public static final fun isSuccess (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;)Z
	public static final fun map (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun orElse (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Lkotlin/jvm/functions/Function0;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun orThrow (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun plus (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;
	public static final fun recovery (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun success (Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun toFailure (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;Lio/github/airflux/serialization/core/location/JsLocation;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun toSuccess (Ljava/lang/Object;Lio/github/airflux/serialization/core/location/JsLocation;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
	public static final fun validation (Lio/github/airflux/serialization/core/reader/result/JsReaderResult;Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/reader/validation/JsValidator;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult;
}

public abstract interface class io/github/airflux/serialization/core/reader/validation/JsValidator {
	public abstract fun validate (Lio/github/airflux/serialization/core/reader/env/JsReaderEnv;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult;
}

public final class io/github/airflux/serialization/core/reader/validation/JsValidatorKt {
	public static final fun and (Lio/github/airflux/serialization/core/reader/validation/JsValidator;Lio/github/airflux/serialization/core/reader/validation/JsValidator;)Lio/github/airflux/serialization/core/reader/validation/JsValidator;
	public static final fun or (Lio/github/airflux/serialization/core/reader/validation/JsValidator;Lio/github/airflux/serialization/core/reader/validation/JsValidator;)Lio/github/airflux/serialization/core/reader/validation/JsValidator;
}

public abstract class io/github/airflux/serialization/core/reader/validation/JsValidatorResult {
}

public final class io/github/airflux/serialization/core/reader/validation/JsValidatorResult$Invalid : io/github/airflux/serialization/core/reader/validation/JsValidatorResult {
	public fun <init> (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;
	public final fun copy (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;)Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult$Invalid;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult$Invalid;Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;ILjava/lang/Object;)Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult$Invalid;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFailure ()Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/validation/JsValidatorResult$Valid : io/github/airflux/serialization/core/reader/validation/JsValidatorResult {
	public static final field INSTANCE Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult$Valid;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/reader/validation/JsValidatorResultKt {
	public static final fun fold (Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static final fun getOrNull (Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult;)Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;
	public static final fun ifInvalid (Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult;Lkotlin/jvm/functions/Function1;)V
	public static final fun invalid (Lio/github/airflux/serialization/core/location/JsLocation;Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Error;)Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult;
	public static final fun invalid (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;)Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult;
	public static final fun isInvalid (Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult;)Z
	public static final fun isValid (Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult;)Z
	public static final fun toInvalid (Lio/github/airflux/serialization/core/reader/result/JsReaderResult$Failure;)Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult;
	public static final fun valid ()Lio/github/airflux/serialization/core/reader/validation/JsValidatorResult;
}

public final class io/github/airflux/serialization/core/value/JsArray : io/github/airflux/serialization/core/value/JsValue, java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/serialization/core/value/JsArray$Companion;
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun builder ()Lio/github/airflux/serialization/core/value/JsArray$Builder;
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (I)Lio/github/airflux/serialization/core/value/JsValue;
	public final fun get (Lio/github/airflux/serialization/core/path/JsPath$Element$Idx;)Lio/github/airflux/serialization/core/value/JsValue;
	public final fun getSize ()I
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun hashCode ()I
	public static final fun invoke (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/value/JsArray;
	public static final fun invoke ([Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/value/JsArray;
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsArray$Builder {
	public final fun add (Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/value/JsArray$Builder;
	public final fun addAll (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/value/JsArray$Builder;
	public final fun build ()Lio/github/airflux/serialization/core/value/JsArray;
}

public final class io/github/airflux/serialization/core/value/JsArray$Companion {
	public final fun builder ()Lio/github/airflux/serialization/core/value/JsArray$Builder;
	public final fun invoke (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/value/JsArray;
	public final fun invoke ([Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/value/JsArray;
}

public abstract class io/github/airflux/serialization/core/value/JsBoolean : io/github/airflux/serialization/core/value/JsValue {
	public static final field Companion Lio/github/airflux/serialization/core/value/JsBoolean$Companion;
	public synthetic fun <init> (ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getGet ()Z
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final fun valueOf (Z)Lio/github/airflux/serialization/core/value/JsBoolean;
}

public final class io/github/airflux/serialization/core/value/JsBoolean$Companion {
	public final fun valueOf (Z)Lio/github/airflux/serialization/core/value/JsBoolean;
}

public final class io/github/airflux/serialization/core/value/JsBoolean$False : io/github/airflux/serialization/core/value/JsBoolean {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/JsBoolean$False;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsBoolean$True : io/github/airflux/serialization/core/value/JsBoolean {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/JsBoolean$True;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsNull : io/github/airflux/serialization/core/value/JsValue {
	public static final field INSTANCE Lio/github/airflux/serialization/core/value/JsNull;
	public fun equals (Ljava/lang/Object;)Z
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsNumber : io/github/airflux/serialization/core/value/JsValue {
	public static final field Companion Lio/github/airflux/serialization/core/value/JsNumber$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lio/github/airflux/serialization/core/value/JsNumber$SubType;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public final fun getSubType ()Lio/github/airflux/serialization/core/value/JsNumber$SubType;
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsNumber$Companion {
	public final fun valueOf (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/JsNumber;
}

public final class io/github/airflux/serialization/core/value/JsNumber$SubType : java/lang/Enum {
	public static final field INTEGER Lio/github/airflux/serialization/core/value/JsNumber$SubType;
	public static final field REAL Lio/github/airflux/serialization/core/value/JsNumber$SubType;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/JsNumber$SubType;
	public static fun values ()[Lio/github/airflux/serialization/core/value/JsNumber$SubType;
}

public final class io/github/airflux/serialization/core/value/JsString : io/github/airflux/serialization/core/value/JsValue {
	public static final field Companion Lio/github/airflux/serialization/core/value/JsString$Companion;
	public fun <init> (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGet ()Ljava/lang/String;
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsString$Companion {
}

public final class io/github/airflux/serialization/core/value/JsStruct : io/github/airflux/serialization/core/value/JsValue, java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lio/github/airflux/serialization/core/value/JsStruct$Companion;
	public synthetic fun <init> (Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun builder ()Lio/github/airflux/serialization/core/value/JsStruct$Builder;
	public final fun contains (Lio/github/airflux/serialization/core/path/JsPath$Element$Key;)Z
	public final fun contains (Ljava/lang/String;)Z
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Lio/github/airflux/serialization/core/path/JsPath$Element$Key;)Lio/github/airflux/serialization/core/value/JsValue;
	public final fun get (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/JsValue;
	public final fun getCount ()I
	public fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
	public fun hashCode ()I
	public static final fun invoke (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/value/JsStruct;
	public static final fun invoke ([Lkotlin/Pair;)Lio/github/airflux/serialization/core/value/JsStruct;
	public final fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/value/JsStruct$Builder {
	public final fun add (Ljava/lang/String;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/value/JsStruct$Builder;
	public final fun addAll (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/value/JsStruct$Builder;
	public final fun build ()Lio/github/airflux/serialization/core/value/JsStruct;
	public final fun contains (Ljava/lang/String;)Z
}

public final class io/github/airflux/serialization/core/value/JsStruct$Companion {
	public final fun builder ()Lio/github/airflux/serialization/core/value/JsStruct$Builder;
	public final fun invoke (Ljava/lang/Iterable;)Lio/github/airflux/serialization/core/value/JsStruct;
	public final fun invoke ([Lkotlin/Pair;)Lio/github/airflux/serialization/core/value/JsStruct;
}

public final class io/github/airflux/serialization/core/value/JsStruct$Property {
	public fun <init> (Ljava/lang/String;Lio/github/airflux/serialization/core/value/JsValue;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lio/github/airflux/serialization/core/value/JsValue;
	public final fun copy (Ljava/lang/String;Lio/github/airflux/serialization/core/value/JsValue;)Lio/github/airflux/serialization/core/value/JsStruct$Property;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/value/JsStruct$Property;Ljava/lang/String;Lio/github/airflux/serialization/core/value/JsValue;ILjava/lang/Object;)Lio/github/airflux/serialization/core/value/JsStruct$Property;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Lio/github/airflux/serialization/core/value/JsValue;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/github/airflux/serialization/core/value/JsValue {
	public abstract fun getType ()Lio/github/airflux/serialization/core/value/JsValue$Type;
}

public final class io/github/airflux/serialization/core/value/JsValue$Type : java/lang/Enum {
	public static final field ARRAY Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final field BOOLEAN Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final field NULL Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final field NUMBER Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final field STRING Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static final field STRUCT Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/github/airflux/serialization/core/value/JsValue$Type;
	public static fun values ()[Lio/github/airflux/serialization/core/value/JsValue$Type;
}

public abstract interface class io/github/airflux/serialization/core/writer/JsWriter {
	public abstract fun write (Lio/github/airflux/serialization/core/writer/env/JsWriterEnv;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Lio/github/airflux/serialization/core/value/JsValue;
}

public final class io/github/airflux/serialization/core/writer/JsWriterKt {
	public static final fun contramap (Lio/github/airflux/serialization/core/writer/JsWriter;Lkotlin/jvm/functions/Function1;)Lio/github/airflux/serialization/core/writer/JsWriter;
	public static final fun filter (Lio/github/airflux/serialization/core/writer/JsWriter;Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;)Lio/github/airflux/serialization/core/writer/JsWriter;
	public static final fun nullable (Lio/github/airflux/serialization/core/writer/JsWriter;)Lio/github/airflux/serialization/core/writer/JsWriter;
	public static final fun optional (Lio/github/airflux/serialization/core/writer/JsWriter;)Lio/github/airflux/serialization/core/writer/JsWriter;
}

public final class io/github/airflux/serialization/core/writer/env/JsWriterEnv {
	public fun <init> (Lio/github/airflux/serialization/core/writer/env/JsWriterEnv$Config;Lio/github/airflux/serialization/core/context/JsContext;)V
	public synthetic fun <init> (Lio/github/airflux/serialization/core/writer/env/JsWriterEnv$Config;Lio/github/airflux/serialization/core/context/JsContext;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lio/github/airflux/serialization/core/writer/env/JsWriterEnv$Config;
	public final fun component2 ()Lio/github/airflux/serialization/core/context/JsContext;
	public final fun copy (Lio/github/airflux/serialization/core/writer/env/JsWriterEnv$Config;Lio/github/airflux/serialization/core/context/JsContext;)Lio/github/airflux/serialization/core/writer/env/JsWriterEnv;
	public static synthetic fun copy$default (Lio/github/airflux/serialization/core/writer/env/JsWriterEnv;Lio/github/airflux/serialization/core/writer/env/JsWriterEnv$Config;Lio/github/airflux/serialization/core/context/JsContext;ILjava/lang/Object;)Lio/github/airflux/serialization/core/writer/env/JsWriterEnv;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConfig ()Lio/github/airflux/serialization/core/writer/env/JsWriterEnv$Config;
	public final fun getContext ()Lio/github/airflux/serialization/core/context/JsContext;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/github/airflux/serialization/core/writer/env/JsWriterEnv$Config {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getOptions ()Ljava/lang/Object;
}

public final class io/github/airflux/serialization/core/writer/env/JsWriterEnvKt {
	public static final fun plus (Lio/github/airflux/serialization/core/writer/env/JsWriterEnv;Lio/github/airflux/serialization/core/context/JsContext$Element;)Lio/github/airflux/serialization/core/writer/env/JsWriterEnv;
}

public abstract interface class io/github/airflux/serialization/core/writer/predicate/JsPredicate {
	public abstract fun test (Lio/github/airflux/serialization/core/writer/env/JsWriterEnv;Lio/github/airflux/serialization/core/location/JsLocation;Ljava/lang/Object;)Z
}

public final class io/github/airflux/serialization/core/writer/predicate/JsPredicateKt {
	public static final fun and (Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;)Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;
	public static final fun or (Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;)Lio/github/airflux/serialization/core/writer/predicate/JsPredicate;
}

